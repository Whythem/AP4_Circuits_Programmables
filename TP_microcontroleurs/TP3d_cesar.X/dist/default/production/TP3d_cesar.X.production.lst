

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 14:18:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0xCA0,32
    45                           	dabs	1,0xC2C,68
    46                           	dabs	1,0x278C,0,_texte
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 06/07/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1719 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000F                     	;# 
    99     0010                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     0110                     	;# 
   137     0111                     	;# 
   138     0112                     	;# 
   139     0113                     	;# 
   140     0114                     	;# 
   141     0115                     	;# 
   142     0116                     	;# 
   143     0117                     	;# 
   144     0118                     	;# 
   145     0119                     	;# 
   146     011A                     	;# 
   147     011B                     	;# 
   148     011B                     	;# 
   149     011C                     	;# 
   150     018C                     	;# 
   151     018D                     	;# 
   152     018E                     	;# 
   153     018F                     	;# 
   154     0190                     	;# 
   155     0191                     	;# 
   156     0191                     	;# 
   157     0192                     	;# 
   158     0193                     	;# 
   159     0193                     	;# 
   160     0194                     	;# 
   161     0195                     	;# 
   162     0196                     	;# 
   163     0197                     	;# 
   164     0199                     	;# 
   165     0199                     	;# 
   166     0199                     	;# 
   167     019A                     	;# 
   168     019A                     	;# 
   169     019A                     	;# 
   170     019B                     	;# 
   171     019B                     	;# 
   172     019B                     	;# 
   173     019B                     	;# 
   174     019B                     	;# 
   175     019C                     	;# 
   176     019C                     	;# 
   177     019C                     	;# 
   178     019D                     	;# 
   179     019D                     	;# 
   180     019D                     	;# 
   181     019E                     	;# 
   182     019E                     	;# 
   183     019E                     	;# 
   184     019F                     	;# 
   185     019F                     	;# 
   186     019F                     	;# 
   187     019F                     	;# 
   188     019F                     	;# 
   189     020C                     	;# 
   190     020D                     	;# 
   191     020E                     	;# 
   192     020F                     	;# 
   193     0210                     	;# 
   194     0211                     	;# 
   195     0211                     	;# 
   196     0212                     	;# 
   197     0212                     	;# 
   198     0213                     	;# 
   199     0213                     	;# 
   200     0214                     	;# 
   201     0214                     	;# 
   202     0215                     	;# 
   203     0215                     	;# 
   204     0215                     	;# 
   205     0215                     	;# 
   206     0216                     	;# 
   207     0216                     	;# 
   208     0217                     	;# 
   209     0217                     	;# 
   210     028C                     	;# 
   211     028D                     	;# 
   212     028E                     	;# 
   213     028F                     	;# 
   214     0290                     	;# 
   215     0291                     	;# 
   216     0291                     	;# 
   217     0292                     	;# 
   218     0293                     	;# 
   219     0293                     	;# 
   220     0298                     	;# 
   221     0298                     	;# 
   222     0299                     	;# 
   223     029A                     	;# 
   224     029A                     	;# 
   225     029E                     	;# 
   226     030C                     	;# 
   227     030D                     	;# 
   228     030E                     	;# 
   229     030F                     	;# 
   230     0310                     	;# 
   231     038C                     	;# 
   232     038D                     	;# 
   233     038E                     	;# 
   234     038F                     	;# 
   235     0390                     	;# 
   236     0391                     	;# 
   237     0392                     	;# 
   238     0393                     	;# 
   239     0394                     	;# 
   240     0395                     	;# 
   241     0396                     	;# 
   242     0397                     	;# 
   243     0398                     	;# 
   244     0399                     	;# 
   245     039D                     	;# 
   246     039E                     	;# 
   247     039F                     	;# 
   248     0415                     	;# 
   249     0416                     	;# 
   250     0417                     	;# 
   251     041C                     	;# 
   252     041D                     	;# 
   253     041E                     	;# 
   254     0498                     	;# 
   255     0498                     	;# 
   256     0499                     	;# 
   257     049A                     	;# 
   258     049B                     	;# 
   259     049B                     	;# 
   260     049C                     	;# 
   261     049D                     	;# 
   262     049E                     	;# 
   263     049F                     	;# 
   264     0511                     	;# 
   265     0515                     	;# 
   266     0617                     	;# 
   267     0618                     	;# 
   268     0619                     	;# 
   269     0619                     	;# 
   270     061A                     	;# 
   271     061B                     	;# 
   272     061C                     	;# 
   273     061C                     	;# 
   274     0691                     	;# 
   275     0692                     	;# 
   276     0693                     	;# 
   277     0694                     	;# 
   278     0695                     	;# 
   279     0696                     	;# 
   280     0697                     	;# 
   281     0698                     	;# 
   282     0699                     	;# 
   283     069A                     	;# 
   284     069B                     	;# 
   285     069C                     	;# 
   286     069D                     	;# 
   287     069E                     	;# 
   288     069F                     	;# 
   289     0E0F                     	;# 
   290     0E10                     	;# 
   291     0E11                     	;# 
   292     0E12                     	;# 
   293     0E13                     	;# 
   294     0E14                     	;# 
   295     0E15                     	;# 
   296     0E17                     	;# 
   297     0E20                     	;# 
   298     0E21                     	;# 
   299     0E22                     	;# 
   300     0E24                     	;# 
   301     0E25                     	;# 
   302     0E28                     	;# 
   303     0E29                     	;# 
   304     0E2A                     	;# 
   305     0E2B                     	;# 
   306     0E90                     	;# 
   307     0E91                     	;# 
   308     0E92                     	;# 
   309     0E93                     	;# 
   310     0E94                     	;# 
   311     0E95                     	;# 
   312     0E96                     	;# 
   313     0E97                     	;# 
   314     0E98                     	;# 
   315     0E99                     	;# 
   316     0E9A                     	;# 
   317     0E9B                     	;# 
   318     0E9C                     	;# 
   319     0E9D                     	;# 
   320     0E9E                     	;# 
   321     0E9F                     	;# 
   322     0EA0                     	;# 
   323     0EA1                     	;# 
   324     0EA2                     	;# 
   325     0EA3                     	;# 
   326     0EA4                     	;# 
   327     0EA5                     	;# 
   328     0EA6                     	;# 
   329     0EA7                     	;# 
   330     0EA8                     	;# 
   331     0EA9                     	;# 
   332     0EAA                     	;# 
   333     0EAB                     	;# 
   334     0EAC                     	;# 
   335     0EAD                     	;# 
   336     0EAE                     	;# 
   337     0EAF                     	;# 
   338     0EB0                     	;# 
   339     0EB1                     	;# 
   340     0EB2                     	;# 
   341     0F0F                     	;# 
   342     0F10                     	;# 
   343     0F11                     	;# 
   344     0F12                     	;# 
   345     0F13                     	;# 
   346     0F14                     	;# 
   347     0F15                     	;# 
   348     0F16                     	;# 
   349     0F17                     	;# 
   350     0F18                     	;# 
   351     0F19                     	;# 
   352     0F1A                     	;# 
   353     0F1B                     	;# 
   354     0F1C                     	;# 
   355     0F1D                     	;# 
   356     0F1E                     	;# 
   357     0F1F                     	;# 
   358     0F20                     	;# 
   359     0F21                     	;# 
   360     0F22                     	;# 
   361     0F23                     	;# 
   362     0F24                     	;# 
   363     0F25                     	;# 
   364     0F26                     	;# 
   365     0F27                     	;# 
   366     0F28                     	;# 
   367     0F29                     	;# 
   368     0F2A                     	;# 
   369     0F2B                     	;# 
   370     0F2C                     	;# 
   371     0F2D                     	;# 
   372     0F2E                     	;# 
   373     0F2F                     	;# 
   374     0F30                     	;# 
   375     0F31                     	;# 
   376     0F32                     	;# 
   377     0F33                     	;# 
   378     0F34                     	;# 
   379     0F35                     	;# 
   380     0F36                     	;# 
   381     0F37                     	;# 
   382     0FE4                     	;# 
   383     0FE5                     	;# 
   384     0FE6                     	;# 
   385     0FE7                     	;# 
   386     0FE8                     	;# 
   387     0FE9                     	;# 
   388     0FEA                     	;# 
   389     0FEB                     	;# 
   390     0FED                     	;# 
   391     0FEE                     	;# 
   392     0FEF                     	;# 
   393     0000                     	;# 
   394     0001                     	;# 
   395     0002                     	;# 
   396     0003                     	;# 
   397     0004                     	;# 
   398     0005                     	;# 
   399     0006                     	;# 
   400     0007                     	;# 
   401     0008                     	;# 
   402     0009                     	;# 
   403     000A                     	;# 
   404     000B                     	;# 
   405     000C                     	;# 
   406     000D                     	;# 
   407     000E                     	;# 
   408     000F                     	;# 
   409     0010                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0015                     	;# 
   414     0016                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001C                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009B                     	;# 
   438     009C                     	;# 
   439     009D                     	;# 
   440     009E                     	;# 
   441     009F                     	;# 
   442     010C                     	;# 
   443     010D                     	;# 
   444     010E                     	;# 
   445     010F                     	;# 
   446     0110                     	;# 
   447     0111                     	;# 
   448     0112                     	;# 
   449     0113                     	;# 
   450     0114                     	;# 
   451     0115                     	;# 
   452     0116                     	;# 
   453     0117                     	;# 
   454     0118                     	;# 
   455     0119                     	;# 
   456     011A                     	;# 
   457     011B                     	;# 
   458     011B                     	;# 
   459     011C                     	;# 
   460     018C                     	;# 
   461     018D                     	;# 
   462     018E                     	;# 
   463     018F                     	;# 
   464     0190                     	;# 
   465     0191                     	;# 
   466     0191                     	;# 
   467     0192                     	;# 
   468     0193                     	;# 
   469     0193                     	;# 
   470     0194                     	;# 
   471     0195                     	;# 
   472     0196                     	;# 
   473     0197                     	;# 
   474     0199                     	;# 
   475     0199                     	;# 
   476     0199                     	;# 
   477     019A                     	;# 
   478     019A                     	;# 
   479     019A                     	;# 
   480     019B                     	;# 
   481     019B                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019B                     	;# 
   485     019C                     	;# 
   486     019C                     	;# 
   487     019C                     	;# 
   488     019D                     	;# 
   489     019D                     	;# 
   490     019D                     	;# 
   491     019E                     	;# 
   492     019E                     	;# 
   493     019E                     	;# 
   494     019F                     	;# 
   495     019F                     	;# 
   496     019F                     	;# 
   497     019F                     	;# 
   498     019F                     	;# 
   499     020C                     	;# 
   500     020D                     	;# 
   501     020E                     	;# 
   502     020F                     	;# 
   503     0210                     	;# 
   504     0211                     	;# 
   505     0211                     	;# 
   506     0212                     	;# 
   507     0212                     	;# 
   508     0213                     	;# 
   509     0213                     	;# 
   510     0214                     	;# 
   511     0214                     	;# 
   512     0215                     	;# 
   513     0215                     	;# 
   514     0215                     	;# 
   515     0215                     	;# 
   516     0216                     	;# 
   517     0216                     	;# 
   518     0217                     	;# 
   519     0217                     	;# 
   520     028C                     	;# 
   521     028D                     	;# 
   522     028E                     	;# 
   523     028F                     	;# 
   524     0290                     	;# 
   525     0291                     	;# 
   526     0291                     	;# 
   527     0292                     	;# 
   528     0293                     	;# 
   529     0293                     	;# 
   530     0298                     	;# 
   531     0298                     	;# 
   532     0299                     	;# 
   533     029A                     	;# 
   534     029A                     	;# 
   535     029E                     	;# 
   536     030C                     	;# 
   537     030D                     	;# 
   538     030E                     	;# 
   539     030F                     	;# 
   540     0310                     	;# 
   541     038C                     	;# 
   542     038D                     	;# 
   543     038E                     	;# 
   544     038F                     	;# 
   545     0390                     	;# 
   546     0391                     	;# 
   547     0392                     	;# 
   548     0393                     	;# 
   549     0394                     	;# 
   550     0395                     	;# 
   551     0396                     	;# 
   552     0397                     	;# 
   553     0398                     	;# 
   554     0399                     	;# 
   555     039D                     	;# 
   556     039E                     	;# 
   557     039F                     	;# 
   558     0415                     	;# 
   559     0416                     	;# 
   560     0417                     	;# 
   561     041C                     	;# 
   562     041D                     	;# 
   563     041E                     	;# 
   564     0498                     	;# 
   565     0498                     	;# 
   566     0499                     	;# 
   567     049A                     	;# 
   568     049B                     	;# 
   569     049B                     	;# 
   570     049C                     	;# 
   571     049D                     	;# 
   572     049E                     	;# 
   573     049F                     	;# 
   574     0511                     	;# 
   575     0515                     	;# 
   576     0617                     	;# 
   577     0618                     	;# 
   578     0619                     	;# 
   579     0619                     	;# 
   580     061A                     	;# 
   581     061B                     	;# 
   582     061C                     	;# 
   583     061C                     	;# 
   584     0691                     	;# 
   585     0692                     	;# 
   586     0693                     	;# 
   587     0694                     	;# 
   588     0695                     	;# 
   589     0696                     	;# 
   590     0697                     	;# 
   591     0698                     	;# 
   592     0699                     	;# 
   593     069A                     	;# 
   594     069B                     	;# 
   595     069C                     	;# 
   596     069D                     	;# 
   597     069E                     	;# 
   598     069F                     	;# 
   599     0E0F                     	;# 
   600     0E10                     	;# 
   601     0E11                     	;# 
   602     0E12                     	;# 
   603     0E13                     	;# 
   604     0E14                     	;# 
   605     0E15                     	;# 
   606     0E17                     	;# 
   607     0E20                     	;# 
   608     0E21                     	;# 
   609     0E22                     	;# 
   610     0E24                     	;# 
   611     0E25                     	;# 
   612     0E28                     	;# 
   613     0E29                     	;# 
   614     0E2A                     	;# 
   615     0E2B                     	;# 
   616     0E90                     	;# 
   617     0E91                     	;# 
   618     0E92                     	;# 
   619     0E93                     	;# 
   620     0E94                     	;# 
   621     0E95                     	;# 
   622     0E96                     	;# 
   623     0E97                     	;# 
   624     0E98                     	;# 
   625     0E99                     	;# 
   626     0E9A                     	;# 
   627     0E9B                     	;# 
   628     0E9C                     	;# 
   629     0E9D                     	;# 
   630     0E9E                     	;# 
   631     0E9F                     	;# 
   632     0EA0                     	;# 
   633     0EA1                     	;# 
   634     0EA2                     	;# 
   635     0EA3                     	;# 
   636     0EA4                     	;# 
   637     0EA5                     	;# 
   638     0EA6                     	;# 
   639     0EA7                     	;# 
   640     0EA8                     	;# 
   641     0EA9                     	;# 
   642     0EAA                     	;# 
   643     0EAB                     	;# 
   644     0EAC                     	;# 
   645     0EAD                     	;# 
   646     0EAE                     	;# 
   647     0EAF                     	;# 
   648     0EB0                     	;# 
   649     0EB1                     	;# 
   650     0EB2                     	;# 
   651     0F0F                     	;# 
   652     0F10                     	;# 
   653     0F11                     	;# 
   654     0F12                     	;# 
   655     0F13                     	;# 
   656     0F14                     	;# 
   657     0F15                     	;# 
   658     0F16                     	;# 
   659     0F17                     	;# 
   660     0F18                     	;# 
   661     0F19                     	;# 
   662     0F1A                     	;# 
   663     0F1B                     	;# 
   664     0F1C                     	;# 
   665     0F1D                     	;# 
   666     0F1E                     	;# 
   667     0F1F                     	;# 
   668     0F20                     	;# 
   669     0F21                     	;# 
   670     0F22                     	;# 
   671     0F23                     	;# 
   672     0F24                     	;# 
   673     0F25                     	;# 
   674     0F26                     	;# 
   675     0F27                     	;# 
   676     0F28                     	;# 
   677     0F29                     	;# 
   678     0F2A                     	;# 
   679     0F2B                     	;# 
   680     0F2C                     	;# 
   681     0F2D                     	;# 
   682     0F2E                     	;# 
   683     0F2F                     	;# 
   684     0F30                     	;# 
   685     0F31                     	;# 
   686     0F32                     	;# 
   687     0F33                     	;# 
   688     0F34                     	;# 
   689     0F35                     	;# 
   690     0F36                     	;# 
   691     0F37                     	;# 
   692     0FE4                     	;# 
   693     0FE5                     	;# 
   694     0FE6                     	;# 
   695     0FE7                     	;# 
   696     0FE8                     	;# 
   697     0FE9                     	;# 
   698     0FEA                     	;# 
   699     0FEB                     	;# 
   700     0FED                     	;# 
   701     0FEE                     	;# 
   702     0FEF                     	;# 
   703     0000                     	;# 
   704     0001                     	;# 
   705     0002                     	;# 
   706     0003                     	;# 
   707     0004                     	;# 
   708     0005                     	;# 
   709     0006                     	;# 
   710     0007                     	;# 
   711     0008                     	;# 
   712     0009                     	;# 
   713     000A                     	;# 
   714     000B                     	;# 
   715     000C                     	;# 
   716     000D                     	;# 
   717     000E                     	;# 
   718     000F                     	;# 
   719     0010                     	;# 
   720     0011                     	;# 
   721     0012                     	;# 
   722     0013                     	;# 
   723     0015                     	;# 
   724     0016                     	;# 
   725     0016                     	;# 
   726     0017                     	;# 
   727     0018                     	;# 
   728     0019                     	;# 
   729     001A                     	;# 
   730     001B                     	;# 
   731     001C                     	;# 
   732     008C                     	;# 
   733     008D                     	;# 
   734     008E                     	;# 
   735     008F                     	;# 
   736     0090                     	;# 
   737     0091                     	;# 
   738     0092                     	;# 
   739     0093                     	;# 
   740     0095                     	;# 
   741     0096                     	;# 
   742     0097                     	;# 
   743     0098                     	;# 
   744     0099                     	;# 
   745     009A                     	;# 
   746     009B                     	;# 
   747     009B                     	;# 
   748     009C                     	;# 
   749     009D                     	;# 
   750     009E                     	;# 
   751     009F                     	;# 
   752     010C                     	;# 
   753     010D                     	;# 
   754     010E                     	;# 
   755     010F                     	;# 
   756     0110                     	;# 
   757     0111                     	;# 
   758     0112                     	;# 
   759     0113                     	;# 
   760     0114                     	;# 
   761     0115                     	;# 
   762     0116                     	;# 
   763     0117                     	;# 
   764     0118                     	;# 
   765     0119                     	;# 
   766     011A                     	;# 
   767     011B                     	;# 
   768     011B                     	;# 
   769     011C                     	;# 
   770     018C                     	;# 
   771     018D                     	;# 
   772     018E                     	;# 
   773     018F                     	;# 
   774     0190                     	;# 
   775     0191                     	;# 
   776     0191                     	;# 
   777     0192                     	;# 
   778     0193                     	;# 
   779     0193                     	;# 
   780     0194                     	;# 
   781     0195                     	;# 
   782     0196                     	;# 
   783     0197                     	;# 
   784     0199                     	;# 
   785     0199                     	;# 
   786     0199                     	;# 
   787     019A                     	;# 
   788     019A                     	;# 
   789     019A                     	;# 
   790     019B                     	;# 
   791     019B                     	;# 
   792     019B                     	;# 
   793     019B                     	;# 
   794     019B                     	;# 
   795     019C                     	;# 
   796     019C                     	;# 
   797     019C                     	;# 
   798     019D                     	;# 
   799     019D                     	;# 
   800     019D                     	;# 
   801     019E                     	;# 
   802     019E                     	;# 
   803     019E                     	;# 
   804     019F                     	;# 
   805     019F                     	;# 
   806     019F                     	;# 
   807     019F                     	;# 
   808     019F                     	;# 
   809     020C                     	;# 
   810     020D                     	;# 
   811     020E                     	;# 
   812     020F                     	;# 
   813     0210                     	;# 
   814     0211                     	;# 
   815     0211                     	;# 
   816     0212                     	;# 
   817     0212                     	;# 
   818     0213                     	;# 
   819     0213                     	;# 
   820     0214                     	;# 
   821     0214                     	;# 
   822     0215                     	;# 
   823     0215                     	;# 
   824     0215                     	;# 
   825     0215                     	;# 
   826     0216                     	;# 
   827     0216                     	;# 
   828     0217                     	;# 
   829     0217                     	;# 
   830     028C                     	;# 
   831     028D                     	;# 
   832     028E                     	;# 
   833     028F                     	;# 
   834     0290                     	;# 
   835     0291                     	;# 
   836     0291                     	;# 
   837     0292                     	;# 
   838     0293                     	;# 
   839     0293                     	;# 
   840     0298                     	;# 
   841     0298                     	;# 
   842     0299                     	;# 
   843     029A                     	;# 
   844     029A                     	;# 
   845     029E                     	;# 
   846     030C                     	;# 
   847     030D                     	;# 
   848     030E                     	;# 
   849     030F                     	;# 
   850     0310                     	;# 
   851     038C                     	;# 
   852     038D                     	;# 
   853     038E                     	;# 
   854     038F                     	;# 
   855     0390                     	;# 
   856     0391                     	;# 
   857     0392                     	;# 
   858     0393                     	;# 
   859     0394                     	;# 
   860     0395                     	;# 
   861     0396                     	;# 
   862     0397                     	;# 
   863     0398                     	;# 
   864     0399                     	;# 
   865     039D                     	;# 
   866     039E                     	;# 
   867     039F                     	;# 
   868     0415                     	;# 
   869     0416                     	;# 
   870     0417                     	;# 
   871     041C                     	;# 
   872     041D                     	;# 
   873     041E                     	;# 
   874     0498                     	;# 
   875     0498                     	;# 
   876     0499                     	;# 
   877     049A                     	;# 
   878     049B                     	;# 
   879     049B                     	;# 
   880     049C                     	;# 
   881     049D                     	;# 
   882     049E                     	;# 
   883     049F                     	;# 
   884     0511                     	;# 
   885     0515                     	;# 
   886     0617                     	;# 
   887     0618                     	;# 
   888     0619                     	;# 
   889     0619                     	;# 
   890     061A                     	;# 
   891     061B                     	;# 
   892     061C                     	;# 
   893     061C                     	;# 
   894     0691                     	;# 
   895     0692                     	;# 
   896     0693                     	;# 
   897     0694                     	;# 
   898     0695                     	;# 
   899     0696                     	;# 
   900     0697                     	;# 
   901     0698                     	;# 
   902     0699                     	;# 
   903     069A                     	;# 
   904     069B                     	;# 
   905     069C                     	;# 
   906     069D                     	;# 
   907     069E                     	;# 
   908     069F                     	;# 
   909     0E0F                     	;# 
   910     0E10                     	;# 
   911     0E11                     	;# 
   912     0E12                     	;# 
   913     0E13                     	;# 
   914     0E14                     	;# 
   915     0E15                     	;# 
   916     0E17                     	;# 
   917     0E20                     	;# 
   918     0E21                     	;# 
   919     0E22                     	;# 
   920     0E24                     	;# 
   921     0E25                     	;# 
   922     0E28                     	;# 
   923     0E29                     	;# 
   924     0E2A                     	;# 
   925     0E2B                     	;# 
   926     0E90                     	;# 
   927     0E91                     	;# 
   928     0E92                     	;# 
   929     0E93                     	;# 
   930     0E94                     	;# 
   931     0E95                     	;# 
   932     0E96                     	;# 
   933     0E97                     	;# 
   934     0E98                     	;# 
   935     0E99                     	;# 
   936     0E9A                     	;# 
   937     0E9B                     	;# 
   938     0E9C                     	;# 
   939     0E9D                     	;# 
   940     0E9E                     	;# 
   941     0E9F                     	;# 
   942     0EA0                     	;# 
   943     0EA1                     	;# 
   944     0EA2                     	;# 
   945     0EA3                     	;# 
   946     0EA4                     	;# 
   947     0EA5                     	;# 
   948     0EA6                     	;# 
   949     0EA7                     	;# 
   950     0EA8                     	;# 
   951     0EA9                     	;# 
   952     0EAA                     	;# 
   953     0EAB                     	;# 
   954     0EAC                     	;# 
   955     0EAD                     	;# 
   956     0EAE                     	;# 
   957     0EAF                     	;# 
   958     0EB0                     	;# 
   959     0EB1                     	;# 
   960     0EB2                     	;# 
   961     0F0F                     	;# 
   962     0F10                     	;# 
   963     0F11                     	;# 
   964     0F12                     	;# 
   965     0F13                     	;# 
   966     0F14                     	;# 
   967     0F15                     	;# 
   968     0F16                     	;# 
   969     0F17                     	;# 
   970     0F18                     	;# 
   971     0F19                     	;# 
   972     0F1A                     	;# 
   973     0F1B                     	;# 
   974     0F1C                     	;# 
   975     0F1D                     	;# 
   976     0F1E                     	;# 
   977     0F1F                     	;# 
   978     0F20                     	;# 
   979     0F21                     	;# 
   980     0F22                     	;# 
   981     0F23                     	;# 
   982     0F24                     	;# 
   983     0F25                     	;# 
   984     0F26                     	;# 
   985     0F27                     	;# 
   986     0F28                     	;# 
   987     0F29                     	;# 
   988     0F2A                     	;# 
   989     0F2B                     	;# 
   990     0F2C                     	;# 
   991     0F2D                     	;# 
   992     0F2E                     	;# 
   993     0F2F                     	;# 
   994     0F30                     	;# 
   995     0F31                     	;# 
   996     0F32                     	;# 
   997     0F33                     	;# 
   998     0F34                     	;# 
   999     0F35                     	;# 
  1000     0F36                     	;# 
  1001     0F37                     	;# 
  1002     0FE4                     	;# 
  1003     0FE5                     	;# 
  1004     0FE6                     	;# 
  1005     0FE7                     	;# 
  1006     0FE8                     	;# 
  1007     0FE9                     	;# 
  1008     0FEA                     	;# 
  1009     0FEB                     	;# 
  1010     0FED                     	;# 
  1011     0FEE                     	;# 
  1012     0FEF                     	;_texte
  1013                           
  1014                           	psect	idataBANK0
  1015     0002                     __pidataBANK0:
  1016                           
  1017                           ;initializer for _offset
  1018     0002  3401               	retlw	1
  1019     0003  3400               	retlw	0
  1020     000D                     _PORTBbits	set	13
  1021     000B                     _INTCONbits	set	11
  1022     000C                     _PORTAbits	set	12
  1023     008C                     _TRISAbits	set	140
  1024     009C                     _ADRESH	set	156
  1025     0091                     _PIE1bits	set	145
  1026     008E                     _TRISCbits	set	142
  1027     009E                     _ADCON1bits	set	158
  1028     009D                     _ADCON0bits	set	157
  1029     008F                     _TRISDbits	set	143
  1030     008D                     _TRISBbits	set	141
  1031     010E                     _LATCbits	set	270
  1032     010C                     _LATAbits	set	268
  1033     019A                     _TX1REG	set	410
  1034     0199                     _RC1REG	set	409
  1035     019D                     _RC1STAbits	set	413
  1036     019B                     _SP1BRGLbits	set	411
  1037     019C                     _SP1BRGHbits	set	412
  1038     019F                     _BAUD1CONbits	set	415
  1039     019E                     _TX1STAbits	set	414
  1040     018E                     _ANSELCbits	set	398
  1041     018C                     _ANSELAbits	set	396
  1042     018D                     _ANSELBbits	set	397
  1043     0214                     _SSP1STATbits	set	532
  1044     0211                     _SSP1BUF	set	529
  1045     0215                     _SSP1CON1bits	set	533
  1046     0212                     _SSP1ADD	set	530
  1047     0215                     _SSP1CON1	set	533
  1048     0214                     _SSP1STAT	set	532
  1049     0E20                     _SSPCLKPPSbits	set	3616
  1050     0E21                     _SSPDATPPSbits	set	3617
  1051     0E24                     _RXPPSbits	set	3620
  1052     0EA5                     _RC5PPSbits	set	3749
  1053     0EA3                     _RC3PPSbits	set	3747
  1054     0EA6                     _RC6PPSbits	set	3750
  1055                           
  1056                           	psect	stringtext1
  1057     1000                     __pstringtext1:
  1058     1000                     STR_2:
  1059     1000  3444               	retlw	68	;'D'
  1060     1001  3465               	retlw	101	;'e'
  1061     1002  3463               	retlw	99	;'c'
  1062     1003  3468               	retlw	104	;'h'
  1063     1004  3469               	retlw	105	;'i'
  1064     1005  3466               	retlw	102	;'f'
  1065     1006  3466               	retlw	102	;'f'
  1066     1007  3472               	retlw	114	;'r'
  1067     1008  3465               	retlw	101	;'e'
  1068     1009  3420               	retlw	32	;' '
  1069     100A  343A               	retlw	58	;':'
  1070     100B  3420               	retlw	32	;' '
  1071     100C  3425               	retlw	37	;'%'
  1072     100D  3464               	retlw	100	;'d'
  1073     100E  3400               	retlw	0
  1074                           
  1075                           	psect	stringtext2
  1076     100F                     __pstringtext2:
  1077     100F                     STR_1:
  1078     100F  3443               	retlw	67	;'C'
  1079     1010  3468               	retlw	104	;'h'
  1080     1011  3469               	retlw	105	;'i'
  1081     1012  3466               	retlw	102	;'f'
  1082     1013  3466               	retlw	102	;'f'
  1083     1014  3472               	retlw	114	;'r'
  1084     1015  3465               	retlw	101	;'e'
  1085     1016  3420               	retlw	32	;' '
  1086     1017  343A               	retlw	58	;':'
  1087     1018  3420               	retlw	32	;' '
  1088     1019  3425               	retlw	37	;'%'
  1089     101A  3464               	retlw	100	;'d'
  1090     101B  3400               	retlw	0
  1091                           
  1092                           	psect	stringtext3
  1093     0000                     __pstringtext3:
  1094                           
  1095                           	psect	cinit
  1096     0046                     start_initialization:	
  1097                           ; #config settings
  1098                           
  1099     0046                     __initialization:	;BIGRAM
  1100                           
  1101                           ; Initialize objects allocated to BANK0
  1102     0046  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  1103     0049  00DE               	movwf	__pdataBANK0& (0+127)
  1104     004A  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1105     004D  00DF               	movwf	(__pdataBANK0+1)& (0+127)
  1106                           
  1107                           ; Clear objects allocated to BIGRAM
  1108     004E  308C               	movlw	low (0+10124)
  1109     004F  0084               	movwf	4
  1110     0050  3027               	movlw	high (0+10124)
  1111     0051  0085               	movwf	5
  1112     0052  3064               	movlw	100
  1113     0053  00FE               	movwf	btemp
  1114     0054  3000               	movlw	0
  1115     0055  00FF               	movwf	btemp+1
  1116     0056  318F  2761  3180   	fcall	clear_ram0
  1117                           
  1118                           ; Clear objects allocated to BANK0
  1119     0059  01D7               	clrf	__pbssBANK0& (0+127)
  1120     005A  01D8               	clrf	(__pbssBANK0+1)& (0+127)
  1121     005B  01D9               	clrf	(__pbssBANK0+2)& (0+127)
  1122     005C  01DA               	clrf	(__pbssBANK0+3)& (0+127)
  1123     005D  01DB               	clrf	(__pbssBANK0+4)& (0+127)
  1124     005E  01DC               	clrf	(__pbssBANK0+5)& (0+127)
  1125     005F  01DD               	clrf	(__pbssBANK0+6)& (0+127)
  1126                           
  1127                           ; Clear objects allocated to BANK1
  1128     0060  30A0               	movlw	low __pbssBANK1
  1129     0061  0084               	movwf	4
  1130     0062  3000               	movlw	high __pbssBANK1
  1131     0063  0085               	movwf	5
  1132     0064  3020               	movlw	32
  1133     0065  00FE               	movwf	btemp
  1134     0066  3000               	movlw	0
  1135     0067  00FF               	movwf	btemp+1
  1136     0068  318F  2761  3180   	fcall	clear_ram0
  1137     006B                     end_of_initialization:	
  1138                           ;End of C runtime variable initialization code
  1139                           
  1140     006B                     __end_of__initialization:
  1141     006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1142     006C  0020               	movlb	0
  1143     006D  3184  2C93         	ljmp	_main	;jump to C main() function
  1144                           
  1145                           	psect	bssBANK0
  1146     0057                     __pbssBANK0:
  1147     0057                     _width:
  1148     0057                     	ds	2
  1149     0059                     _prec:
  1150     0059                     	ds	2
  1151     005B                     _isChiffrement:
  1152     005B                     	ds	2
  1153     005D                     _flags:
  1154     005D                     	ds	1
  1155                           
  1156                           	psect	dataBANK0
  1157     005E                     __pdataBANK0:
  1158     005E                     _offset:
  1159     005E                     	ds	2
  1160                           
  1161                           	psect	bssBANK1
  1162     00A0                     __pbssBANK1:
  1163     00A0                     _dbuf:
  1164     00A0                     	ds	32
  1165                           
  1166                           	psect	clrtext
  1167     0F61                     clear_ram0:	
  1168                           ;	Called with FSR0 containing the base address, and
  1169                           ;	btemp/btemp+1 has the size to clear
  1170                           
  1171     0F61  0064               	clrwdt	;clear the watchdog before getting into this loop
  1172     0F62                     clrloop0:
  1173     0F62  0180               	clrf	0	;clear RAM location pointed to by FSR
  1174     0F63  3101               	addfsr 0,1
  1175     0F64  3001               	movlw	1
  1176     0F65  02FE               	subwf	btemp,f
  1177     0F66  3000               	movlw	0
  1178     0F67  3BFF               	subwfb	btemp+1,f
  1179     0F68  087F               	movf	btemp+1,w
  1180     0F69  047E               	iorwf	btemp,w
  1181     0F6A  1D03               	skipz
  1182     0F6B  2F62               	goto	clrloop0	;have we reached the end yet?
  1183     0F6C  3400               	retlw	0	;all done for this memory range, return
  1184                           
  1185                           	psect	cstackCOMMON
  1186     0070                     __pcstackCOMMON:
  1187     0070                     ?_SPI_InitializePins:
  1188     0070                     ?_LCD_InitializePins:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191     0070                     ?_SPI_Initialize:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194     0070                     ?_LCD_Initialize:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197     0070                     ?_LCD_Clear:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200     0070                     ?_LCD_WriteCommand:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203     0070                     ?_SPI_Exchange8bit:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206     0070                     ?_putch:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209     0070                     ?_init:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212     0070                     ?_setTexteLed:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215     0070                     ?_isr:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218     0070                     ?_main:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221     0070                     ?_LCD_WriteByte:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224     0070                     ?_transformCesar:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227     0070                     putch@c:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230     0070                     transformCesar@value:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233                           
  1234                           ; 2 bytes @ 0x0
  1235     0070                     	ds	2
  1236     0072                     transformCesar@offsetBis:
  1237                           
  1238                           ; 2 bytes @ 0x2
  1239     0072                     	ds	2
  1240     0074                     ??_transformCesar:
  1241                           
  1242                           ; 1 bytes @ 0x4
  1243     0074                     	ds	5
  1244     0079                     transformCesar@retour:
  1245                           
  1246                           ; 2 bytes @ 0x9
  1247     0079                     	ds	2
  1248     007B                     ??_isr:
  1249                           
  1250                           ; 1 bytes @ 0xB
  1251     007B                     	ds	2
  1252     007D                     isr@tmp:
  1253                           
  1254                           ; 1 bytes @ 0xD
  1255     007D                     	ds	1
  1256                           
  1257                           	psect	cstackBANK0
  1258     0020                     __pcstackBANK0:
  1259     0020                     ??_SPI_InitializePins:
  1260     0020                     ??_LCD_InitializePins:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263     0020                     ??_SPI_Initialize:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266     0020                     ??_SPI_Exchange8bit:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269     0020                     ??_putch:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272     0020                     ?_fputc:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275     0020                     ?_ad_read:	
  1276                           ; 2 bytes @ 0x0
  1277                           
  1278     0020                     ?___awdiv:	
  1279                           ; 2 bytes @ 0x0
  1280                           
  1281     0020                     ?___awmod:	
  1282                           ; 2 bytes @ 0x0
  1283                           
  1284     0020                     ?___xxtofl:	
  1285                           ; 2 bytes @ 0x0
  1286                           
  1287     0020                     SPI_Exchange8bit@data:	
  1288                           ; 4 bytes @ 0x0
  1289                           
  1290     0020                     ___awdiv@divisor:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293     0020                     ___awmod@divisor:	
  1294                           ; 2 bytes @ 0x0
  1295                           
  1296     0020                     fputc@c:	
  1297                           ; 2 bytes @ 0x0
  1298                           
  1299     0020                     ___xxtofl@val:	
  1300                           ; 2 bytes @ 0x0
  1301                           
  1302                           
  1303                           ; 4 bytes @ 0x0
  1304     0020                     	ds	1
  1305     0021                     ?_LCD_WriteIOExpander:
  1306     0021                     LCD_WriteIOExpander@data:	
  1307                           ; 1 bytes @ 0x1
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x1
  1311     0021                     	ds	1
  1312     0022                     ??_LCD_WriteIOExpander:
  1313     0022                     ??_ad_read:	
  1314                           ; 1 bytes @ 0x2
  1315                           
  1316     0022                     LCD_WriteIOExpander@reg:	
  1317                           ; 1 bytes @ 0x2
  1318                           
  1319     0022                     ___awdiv@dividend:	
  1320                           ; 1 bytes @ 0x2
  1321                           
  1322     0022                     ___awmod@dividend:	
  1323                           ; 2 bytes @ 0x2
  1324                           
  1325     0022                     fputc@fp:	
  1326                           ; 2 bytes @ 0x2
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x2
  1330     0022                     	ds	1
  1331     0023                     ??_LCD_WriteCommand:
  1332     0023                     ??_LCD_WriteByte:	
  1333                           ; 1 bytes @ 0x3
  1334                           
  1335     0023                     LCD_WriteCommand@cmd:	
  1336                           ; 1 bytes @ 0x3
  1337                           
  1338     0023                     LCD_WriteByte@data:	
  1339                           ; 1 bytes @ 0x3
  1340                           
  1341                           
  1342                           ; 1 bytes @ 0x3
  1343     0023                     	ds	1
  1344     0024                     ??_LCD_Initialize:
  1345     0024                     ?_LCD_GoTo:	
  1346                           ; 1 bytes @ 0x4
  1347                           
  1348     0024                     ?_LCD_WriteString:	
  1349                           ; 1 bytes @ 0x4
  1350                           
  1351     0024                     ??_fputc:	
  1352                           ; 1 bytes @ 0x4
  1353                           
  1354     0024                     ??___awdiv:	
  1355                           ; 1 bytes @ 0x4
  1356                           
  1357     0024                     ??___awmod:	
  1358                           ; 1 bytes @ 0x4
  1359                           
  1360     0024                     ??___xxtofl:	
  1361                           ; 1 bytes @ 0x4
  1362                           
  1363     0024                     LCD_GoTo@column:	
  1364                           ; 1 bytes @ 0x4
  1365                           
  1366     0024                     LCD_WriteString@data:	
  1367                           ; 1 bytes @ 0x4
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x4
  1371     0024                     	ds	1
  1372     0025                     ??_LCD_GoTo:
  1373     0025                     ___awdiv@counter:	
  1374                           ; 1 bytes @ 0x5
  1375                           
  1376     0025                     ___awmod@counter:	
  1377                           ; 1 bytes @ 0x5
  1378                           
  1379     0025                     _LCD_GoTo$664:	
  1380                           ; 1 bytes @ 0x5
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x5
  1384     0025                     	ds	1
  1385     0026                     ??_LCD_WriteString:
  1386     0026                     ??_init:	
  1387                           ; 1 bytes @ 0x6
  1388                           
  1389     0026                     ___awdiv@sign:	
  1390                           ; 1 bytes @ 0x6
  1391                           
  1392     0026                     ___awmod@sign:	
  1393                           ; 1 bytes @ 0x6
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x6
  1397     0026                     	ds	1
  1398     0027                     ?_abs:
  1399     0027                     LCD_GoTo@pos:	
  1400                           ; 2 bytes @ 0x7
  1401                           
  1402     0027                     ___awdiv@quotient:	
  1403                           ; 1 bytes @ 0x7
  1404                           
  1405     0027                     abs@a:	
  1406                           ; 2 bytes @ 0x7
  1407                           
  1408                           
  1409                           ; 2 bytes @ 0x7
  1410     0027                     	ds	1
  1411     0028                     LCD_WriteString@i:
  1412     0028                     LCD_GoTo@row:	
  1413                           ; 1 bytes @ 0x8
  1414                           
  1415     0028                     ___xxtofl@sign:	
  1416                           ; 1 bytes @ 0x8
  1417                           
  1418                           
  1419                           ; 1 bytes @ 0x8
  1420     0028                     	ds	1
  1421     0029                     ??_LCD_Clear:
  1422     0029                     ??_abs:	
  1423                           ; 1 bytes @ 0x9
  1424                           
  1425     0029                     ___xxtofl@exp:	
  1426                           ; 1 bytes @ 0x9
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x9
  1430     0029                     	ds	1
  1431     002A                     ___xxtofl@arg:
  1432                           
  1433                           ; 4 bytes @ 0xA
  1434     002A                     	ds	1
  1435     002B                     ?_vfpfcnvrt:
  1436     002B                     vfpfcnvrt@fp:	
  1437                           ; 1 bytes @ 0xB
  1438                           
  1439                           
  1440                           ; 2 bytes @ 0xB
  1441     002B                     	ds	2
  1442     002D                     vfpfcnvrt@fmt:
  1443                           
  1444                           ; 1 bytes @ 0xD
  1445     002D                     	ds	1
  1446     002E                     ?___fldiv:
  1447     002E                     vfpfcnvrt@ap:	
  1448                           ; 4 bytes @ 0xE
  1449                           
  1450     002E                     ___fldiv@a:	
  1451                           ; 1 bytes @ 0xE
  1452                           
  1453                           
  1454                           ; 4 bytes @ 0xE
  1455     002E                     	ds	1
  1456     002F                     ??_vfpfcnvrt:
  1457                           
  1458                           ; 1 bytes @ 0xF
  1459     002F                     	ds	3
  1460     0032                     ___fldiv@b:
  1461                           
  1462                           ; 4 bytes @ 0x12
  1463     0032                     	ds	1
  1464     0033                     vfpfcnvrt@done:
  1465                           
  1466                           ; 1 bytes @ 0x13
  1467     0033                     	ds	1
  1468     0034                     vfpfcnvrt@cp:
  1469                           
  1470                           ; 2 bytes @ 0x14
  1471     0034                     	ds	2
  1472     0036                     ??___fldiv:
  1473     0036                     vfpfcnvrt@convarg:	
  1474                           ; 1 bytes @ 0x16
  1475                           
  1476                           
  1477                           ; 4 bytes @ 0x16
  1478     0036                     	ds	4
  1479     003A                     vfpfcnvrt@c:
  1480                           
  1481                           ; 1 bytes @ 0x1A
  1482     003A                     	ds	1
  1483     003B                     ?_vfprintf:
  1484     003B                     vfprintf@fp:	
  1485                           ; 2 bytes @ 0x1B
  1486                           
  1487     003B                     ___fldiv@rem:	
  1488                           ; 2 bytes @ 0x1B
  1489                           
  1490                           
  1491                           ; 4 bytes @ 0x1B
  1492     003B                     	ds	2
  1493     003D                     vfprintf@fmt:
  1494                           
  1495                           ; 2 bytes @ 0x1D
  1496     003D                     	ds	2
  1497     003F                     ___fldiv@sign:
  1498     003F                     vfprintf@ap:	
  1499                           ; 1 bytes @ 0x1F
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x1F
  1503     003F                     	ds	1
  1504     0040                     ??_vfprintf:
  1505     0040                     ___fldiv@new_exp:	
  1506                           ; 1 bytes @ 0x20
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x20
  1510     0040                     	ds	1
  1511     0041                     vfprintf@cfmt:
  1512                           
  1513                           ; 2 bytes @ 0x21
  1514     0041                     	ds	1
  1515     0042                     ___fldiv@grs:
  1516                           
  1517                           ; 4 bytes @ 0x22
  1518     0042                     	ds	1
  1519     0043                     ?_sprintf:
  1520     0043                     sprintf@s:	
  1521                           ; 2 bytes @ 0x23
  1522                           
  1523                           
  1524                           ; 2 bytes @ 0x23
  1525     0043                     	ds	2
  1526     0045                     sprintf@fmt:
  1527                           
  1528                           ; 2 bytes @ 0x25
  1529     0045                     	ds	1
  1530     0046                     ___fldiv@bexp:
  1531                           
  1532                           ; 1 bytes @ 0x26
  1533     0046                     	ds	1
  1534     0047                     ___fldiv@aexp:
  1535                           
  1536                           ; 1 bytes @ 0x27
  1537     0047                     	ds	1
  1538     0048                     ?___fltol:
  1539     0048                     ___fltol@f1:	
  1540                           ; 4 bytes @ 0x28
  1541                           
  1542                           
  1543                           ; 4 bytes @ 0x28
  1544     0048                     	ds	1
  1545     0049                     ??_sprintf:
  1546     0049                     sprintf@ap:	
  1547                           ; 1 bytes @ 0x29
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x29
  1551     0049                     	ds	1
  1552     004A                     sprintf@f:
  1553                           
  1554                           ; 11 bytes @ 0x2A
  1555     004A                     	ds	2
  1556     004C                     ??___fltol:
  1557                           
  1558                           ; 1 bytes @ 0x2C
  1559     004C                     	ds	4
  1560     0050                     ___fltol@sign1:
  1561                           
  1562                           ; 1 bytes @ 0x30
  1563     0050                     	ds	1
  1564     0051                     ___fltol@exp1:
  1565                           
  1566                           ; 1 bytes @ 0x31
  1567     0051                     	ds	4
  1568     0055                     ??_setTexteLed:
  1569     0055                     ??_main:	
  1570                           ; 1 bytes @ 0x35
  1571                           
  1572     0055                     main@value:	
  1573                           ; 1 bytes @ 0x35
  1574                           
  1575                           
  1576                           ; 2 bytes @ 0x35
  1577     0055                     	ds	2
  1578                           
  1579                           	psect	maintext
  1580     0493                     __pmaintext:	
  1581 ;;
  1582 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1583 ;;
  1584 ;; *************** function _main *****************
  1585 ;; Defined at:
  1586 ;;		line 146 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  value           2   53[BANK0 ] int 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : B1F/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1604 ;;Total ram usage:        2 bytes
  1605 ;; Hardware stack levels required when called: unknown (due to recursion)
  1606 ;; This function calls:
  1607 ;;		___awdiv
  1608 ;;		___fldiv
  1609 ;;		___fltol
  1610 ;;		___xxtofl
  1611 ;;		_ad_read
  1612 ;;		_init
  1613 ;;		_setTexteLed
  1614 ;; This function is called by:
  1615 ;;		Startup code after reset
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619     0493                     _main:	
  1620                           ;psect for function _main
  1621                           
  1622     0493                     l2080:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1625                           
  1626                           
  1627                           ;main.c: 149:     init();
  1628     0493  3186  26F8  3184   	fcall	_init
  1629     0496                     l2082:
  1630                           
  1631                           ;main.c: 151:     isChiffrement = 1;
  1632     0496  3001               	movlw	1
  1633     0497  0020               	movlb	0	; select bank0
  1634     0498  00DB               	movwf	_isChiffrement
  1635     0499  3000               	movlw	0
  1636     049A  00DC               	movwf	_isChiffrement+1
  1637     049B                     l2084:
  1638                           
  1639                           ;main.c: 152:     setTexteLed();
  1640     049B  3187  2735  3184   	fcall	_setTexteLed
  1641     049E                     l2086:
  1642                           
  1643                           ;main.c: 154:         if (!PORTBbits.RB0) {
  1644     049E  0020               	movlb	0	; select bank0
  1645     049F  180D               	btfsc	13,0	;volatile
  1646     04A0  2CA2               	goto	u2251
  1647     04A1  2CA3               	goto	u2250
  1648     04A2                     u2251:
  1649     04A2  2CB9               	goto	l2098
  1650     04A3                     u2250:
  1651     04A3                     l2088:
  1652                           
  1653                           ;main.c: 156:             if (isChiffrement == 1) {
  1654     04A3  035B               	decf	_isChiffrement,w
  1655     04A4  045C               	iorwf	_isChiffrement+1,w
  1656     04A5  1D03               	btfss	3,2
  1657     04A6  2CA8               	goto	u2261
  1658     04A7  2CA9               	goto	u2260
  1659     04A8                     u2261:
  1660     04A8  2CAF               	goto	l2094
  1661     04A9                     u2260:
  1662     04A9                     l2090:
  1663                           
  1664                           ;main.c: 157:                 isChiffrement = 0;
  1665     04A9  01DB               	clrf	_isChiffrement
  1666     04AA  01DC               	clrf	_isChiffrement+1
  1667     04AB                     l2092:
  1668                           
  1669                           ;main.c: 158:                 setTexteLed();
  1670     04AB  3187  2735  3184   	fcall	_setTexteLed
  1671                           
  1672                           ;main.c: 159:             } else {
  1673     04AE  2CB4               	goto	l115
  1674     04AF                     l2094:
  1675                           
  1676                           ;main.c: 160:                 isChiffrement = 1;
  1677     04AF  3001               	movlw	1
  1678     04B0  00DB               	movwf	_isChiffrement
  1679     04B1  3000               	movlw	0
  1680     04B2  00DC               	movwf	_isChiffrement+1
  1681     04B3  2CAB               	goto	l2092
  1682     04B4                     l115:	
  1683                           ;main.c: 164:             }
  1684                           
  1685                           
  1686                           ;main.c: 163:             while (!PORTBbits.RB0) {
  1687     04B4  0020               	movlb	0	; select bank0
  1688     04B5  1C0D               	btfss	13,0	;volatile
  1689     04B6  2CB8               	goto	u2271
  1690     04B7  2CB9               	goto	u2270
  1691     04B8                     u2271:
  1692     04B8  2CB4               	goto	l115
  1693     04B9                     u2270:
  1694     04B9                     l2098:
  1695                           
  1696                           ;main.c: 168:         int value = ad_read();
  1697     04B9  318F  276D  3184   	fcall	_ad_read
  1698     04BC  0020               	movlb	0	; select bank0
  1699     04BD  0821               	movf	?_ad_read+1,w
  1700     04BE  00D6               	movwf	main@value+1
  1701     04BF  0820               	movf	?_ad_read,w
  1702     04C0  00D5               	movwf	main@value
  1703     04C1                     l2100:
  1704                           
  1705                           ;main.c: 169:         if ((int)(value / 7) != (int)offset) {
  1706     04C1  3007               	movlw	7
  1707     04C2  00A0               	movwf	___awdiv@divisor
  1708     04C3  3000               	movlw	0
  1709     04C4  00A1               	movwf	___awdiv@divisor+1
  1710     04C5  0856               	movf	main@value+1,w
  1711     04C6  00A3               	movwf	___awdiv@dividend+1
  1712     04C7  0855               	movf	main@value,w
  1713     04C8  00A2               	movwf	___awdiv@dividend
  1714     04C9  3185  25E5  3184   	fcall	___awdiv
  1715     04CC  0020               	movlb	0	; select bank0
  1716     04CD  085F               	movf	_offset+1,w
  1717     04CE  0621               	xorwf	?___awdiv+1,w
  1718     04CF  1D03               	skipz
  1719     04D0  2CD3               	goto	u2285
  1720     04D1  085E               	movf	_offset,w
  1721     04D2  0620               	xorwf	?___awdiv,w
  1722     04D3                     u2285:
  1723     04D3  1903               	skipnz
  1724     04D4  2CD6               	goto	u2281
  1725     04D5  2CD7               	goto	u2280
  1726     04D6                     u2281:
  1727     04D6  2CDA               	goto	l2104
  1728     04D7                     u2280:
  1729     04D7                     l2102:
  1730                           
  1731                           ;main.c: 170:             setTexteLed();
  1732     04D7  3187  2735  3184   	fcall	_setTexteLed
  1733     04DA                     l2104:
  1734                           
  1735                           ;main.c: 172:         offset = (int)((double)value / 7.5)+1;
  1736     04DA  0020               	movlb	0	; select bank0
  1737     04DB  0855               	movf	main@value,w
  1738     04DC  00A0               	movwf	___xxtofl@val
  1739     04DD  0856               	movf	main@value+1,w
  1740     04DE  00A1               	movwf	___xxtofl@val+1
  1741     04DF  0D89               	rlf	9,f
  1742     04E0  3B89               	subwfb	9,f
  1743     04E1  0989               	comf	9,f
  1744     04E2  00A2               	movwf	___xxtofl@val+2
  1745     04E3  00A3               	movwf	___xxtofl@val+3
  1746     04E4  3001               	movlw	1
  1747     04E5  3183  23E8  3184   	fcall	___xxtofl
  1748     04E8  0020               	movlb	0	; select bank0
  1749     04E9  0823               	movf	?___xxtofl+3,w
  1750     04EA  00B5               	movwf	___fldiv@b+3
  1751     04EB  0822               	movf	?___xxtofl+2,w
  1752     04EC  00B4               	movwf	___fldiv@b+2
  1753     04ED  0821               	movf	?___xxtofl+1,w
  1754     04EE  00B3               	movwf	___fldiv@b+1
  1755     04EF  0820               	movf	?___xxtofl,w
  1756     04F0  00B2               	movwf	___fldiv@b
  1757     04F1  3040               	movlw	64
  1758     04F2  00B1               	movwf	___fldiv@a+3
  1759     04F3  30F0               	movlw	240
  1760     04F4  00B0               	movwf	___fldiv@a+2
  1761     04F5  3000               	movlw	0
  1762     04F6  00AF               	movwf	___fldiv@a+1
  1763     04F7  3000               	movlw	0
  1764     04F8  00AE               	movwf	___fldiv@a
  1765     04F9  3180  206F  3184   	fcall	___fldiv
  1766     04FC  0020               	movlb	0	; select bank0
  1767     04FD  0831               	movf	?___fldiv+3,w
  1768     04FE  00CB               	movwf	___fltol@f1+3
  1769     04FF  0830               	movf	?___fldiv+2,w
  1770     0500  00CA               	movwf	___fltol@f1+2
  1771     0501  082F               	movf	?___fldiv+1,w
  1772     0502  00C9               	movwf	___fltol@f1+1
  1773     0503  082E               	movf	?___fldiv,w
  1774     0504  00C8               	movwf	___fltol@f1
  1775     0505  3185  2512  3184   	fcall	___fltol
  1776     0508  0020               	movlb	0	; select bank0
  1777     0509  0848               	movf	?___fltol,w
  1778     050A  3E01               	addlw	1
  1779     050B  00DE               	movwf	_offset
  1780     050C  3000               	movlw	0
  1781     050D  3D49               	addwfc	?___fltol+1,w
  1782     050E  00DF               	movwf	_offset+1
  1783     050F  2C9E               	goto	l2086
  1784     0510  3180  2844         	ljmp	start
  1785     0512                     __end_of_main:
  1786                           
  1787                           	psect	text1
  1788     0735                     __ptext1:	
  1789 ;; *************** function _setTexteLed *****************
  1790 ;; Defined at:
  1791 ;;		line 73 in file "main.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;		None
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1809 ;;Total ram usage:        0 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: unknown (due to recursion)
  1812 ;; This function calls:
  1813 ;;		_LCD_Clear
  1814 ;;		_LCD_GoTo
  1815 ;;		_LCD_WriteString
  1816 ;;		_sprintf
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     0735                     _setTexteLed:	
  1823                           ;psect for function _setTexteLed
  1824                           
  1825     0735                     l1826:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _setTexteLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1828                           
  1829                           
  1830                           ;main.c: 74:     LCD_Clear();
  1831     0735  318F  2756  3187   	fcall	_LCD_Clear
  1832                           
  1833                           ;main.c: 75:     LCD_GoTo(0,0);
  1834     0738  0020               	movlb	0	; select bank0
  1835     0739  01A4               	clrf	LCD_GoTo@column
  1836     073A  3000               	movlw	0
  1837     073B  3187  27D9  3187   	fcall	_LCD_GoTo
  1838     073E                     l1828:
  1839                           
  1840                           ;main.c: 76:     if (isChiffrement == 1) {
  1841     073E  0020               	movlb	0	; select bank0
  1842     073F  035B               	decf	_isChiffrement,w
  1843     0740  045C               	iorwf	_isChiffrement+1,w
  1844     0741  1D03               	btfss	3,2
  1845     0742  2F44               	goto	u1641
  1846     0743  2F45               	goto	u1640
  1847     0744                     u1641:
  1848     0744  2F5D               	goto	l1834
  1849     0745                     u1640:
  1850     0745                     l1830:
  1851                           
  1852                           ;main.c: 77:         sprintf(texte, "Chiffre : %d", offset);
  1853     0745  308C               	movlw	140
  1854     0746  00C3               	movwf	sprintf@s
  1855     0747  3027               	movlw	39
  1856     0748  00C4               	movwf	sprintf@s+1
  1857     0749  300F               	movlw	low (STR_1| (0+32768))
  1858     074A  00C5               	movwf	sprintf@fmt
  1859     074B  3090               	movlw	high (STR_1| (0+32768))
  1860     074C  00C6               	movwf	sprintf@fmt+1
  1861     074D  085F               	movf	_offset+1,w
  1862     074E  00C8               	movwf	?_sprintf+5
  1863     074F  085E               	movf	_offset,w
  1864     0750  00C7               	movwf	?_sprintf+4
  1865     0751  3187  276E  3187   	fcall	_sprintf
  1866     0754                     l1832:
  1867                           
  1868                           ;main.c: 78:         LCD_WriteString(texte);
  1869     0754  308C               	movlw	140
  1870     0755  0020               	movlb	0	; select bank0
  1871     0756  00A4               	movwf	LCD_WriteString@data
  1872     0757  3027               	movlw	39
  1873     0758  00A5               	movwf	LCD_WriteString@data+1
  1874     0759  3187  2794  3187   	fcall	_LCD_WriteString
  1875                           
  1876                           ;main.c: 79:     } else {
  1877     075C  2F6D               	goto	l74
  1878     075D                     l1834:
  1879                           
  1880                           ;main.c: 80:         sprintf(texte, "Dechiffre : %d", offset);
  1881     075D  308C               	movlw	140
  1882     075E  00C3               	movwf	sprintf@s
  1883     075F  3027               	movlw	39
  1884     0760  00C4               	movwf	sprintf@s+1
  1885     0761  3000               	movlw	low (STR_2| (0+32768))
  1886     0762  00C5               	movwf	sprintf@fmt
  1887     0763  3090               	movlw	high (STR_2| (0+32768))
  1888     0764  00C6               	movwf	sprintf@fmt+1
  1889     0765  085F               	movf	_offset+1,w
  1890     0766  00C8               	movwf	?_sprintf+5
  1891     0767  085E               	movf	_offset,w
  1892     0768  00C7               	movwf	?_sprintf+4
  1893     0769  3187  276E  3187   	fcall	_sprintf
  1894     076C  2F54               	goto	l1832
  1895     076D                     l74:
  1896     076D  0008               	return
  1897     076E                     __end_of_setTexteLed:
  1898                           
  1899                           	psect	text2
  1900     076E                     __ptext2:	
  1901 ;; *************** function _sprintf *****************
  1902 ;; Defined at:
  1903 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  s               2   35[BANK0 ] PTR unsigned char 
  1906 ;;		 -> texte(100), 
  1907 ;;  fmt             2   37[BANK0 ] PTR const unsigned char 
  1908 ;;		 -> STR_2(15), STR_1(13), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  f              11   42[BANK0 ] struct _IO_FILE
  1911 ;;  ret             2    0        int 
  1912 ;;  ap              1   41[BANK0 ] PTR void [1]
  1913 ;;		 -> ?_sprintf(2), 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  2   35[BANK0 ] int 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1923 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1924 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1926 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1927 ;;Total ram usage:       18 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: unknown (due to recursion)
  1930 ;; This function calls:
  1931 ;;		_vfprintf
  1932 ;; This function is called by:
  1933 ;;		_setTexteLed
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937     076E                     _sprintf:	
  1938                           ;psect for function _sprintf
  1939                           
  1940     076E                     l1714:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1943                           
  1944     076E  3047               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  1945     076F  0020               	movlb	0	; select bank0
  1946     0770  00C9               	movwf	sprintf@ap
  1947     0771  0844               	movf	sprintf@s+1,w
  1948     0772  00CB               	movwf	sprintf@f+1
  1949     0773  0843               	movf	sprintf@s,w
  1950     0774  00CA               	movwf	sprintf@f
  1951     0775                     l1716:
  1952     0775  01CC               	clrf	sprintf@f+2
  1953     0776  01CD               	clrf	sprintf@f+3
  1954     0777                     l1718:
  1955     0777  01D3               	clrf	sprintf@f+9
  1956     0778  01D4               	clrf	sprintf@f+10
  1957     0779                     l1720:
  1958     0779  304A               	movlw	low sprintf@f
  1959     077A  00BB               	movwf	vfprintf@fp
  1960     077B  3000               	movlw	high sprintf@f
  1961     077C  00BC               	movwf	vfprintf@fp+1
  1962     077D  0846               	movf	sprintf@fmt+1,w
  1963     077E  00BE               	movwf	vfprintf@fmt+1
  1964     077F  0845               	movf	sprintf@fmt,w
  1965     0780  00BD               	movwf	vfprintf@fmt
  1966     0781  3049               	movlw	(low (sprintf@ap| 0))& (0+255)
  1967     0782  00BF               	movwf	vfprintf@ap
  1968     0783  318F  27E2  3187   	fcall	_vfprintf
  1969     0786                     l1722:
  1970     0786  304A               	movlw	low sprintf@f
  1971     0787  0086               	movwf	6
  1972     0788  3000               	movlw	high sprintf@f
  1973     0789  0087               	movwf	7
  1974     078A  3142               	addfsr 1,2
  1975     078B  3F40               	moviw [0]fsr1
  1976     078C  0020               	movlb	0	; select bank0
  1977     078D  0743               	addwf	sprintf@s,w
  1978     078E  0084               	movwf	4
  1979     078F  3F41               	moviw [1]fsr1
  1980     0790  3D44               	addwfc	sprintf@s+1,w
  1981     0791  0085               	movwf	5
  1982     0792  0180               	clrf	0
  1983     0793                     l756:
  1984     0793  0008               	return
  1985     0794                     __end_of_sprintf:
  1986                           
  1987                           	psect	text3
  1988     0FE2                     __ptext3:	
  1989 ;; *************** function _vfprintf *****************
  1990 ;; Defined at:
  1991 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1994 ;;		 -> sprintf@f(11), 
  1995 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  1996 ;;		 -> STR_2(15), STR_1(13), 
  1997 ;;  ap              1   31[BANK0 ] PTR PTR void 
  1998 ;;		 -> sprintf@ap(1), 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  cfmt            2   33[BANK0 ] PTR unsigned char 
  2001 ;;		 -> STR_2(15), STR_1(13), 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  2   27[BANK0 ] int 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2011 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2014 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2015 ;;Total ram usage:        8 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: unknown (due to recursion)
  2018 ;; This function calls:
  2019 ;;		_vfpfcnvrt
  2020 ;; This function is called by:
  2021 ;;		_sprintf
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     0FE2                     _vfprintf:	
  2026                           ;psect for function _vfprintf
  2027                           
  2028     0FE2                     l1674:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2034     0FE2  0020               	movlb	0	; select bank0
  2035     0FE3  083E               	movf	vfprintf@fmt+1,w
  2036     0FE4  00C2               	movwf	vfprintf@cfmt+1
  2037     0FE5  083D               	movf	vfprintf@fmt,w
  2038     0FE6  00C1               	movwf	vfprintf@cfmt
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2041     0FE7  2FF3               	goto	l1678
  2042     0FE8                     l1676:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2045     0FE8  083C               	movf	vfprintf@fp+1,w
  2046     0FE9  00AC               	movwf	vfpfcnvrt@fp+1
  2047     0FEA  083B               	movf	vfprintf@fp,w
  2048     0FEB  00AB               	movwf	vfpfcnvrt@fp
  2049     0FEC  3041               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2050     0FED  00AD               	movwf	vfpfcnvrt@fmt
  2051     0FEE  083F               	movf	vfprintf@ap,w
  2052     0FEF  00AE               	movwf	vfpfcnvrt@ap
  2053     0FF0  3182  2219  318F   	fcall	_vfpfcnvrt
  2054     0FF3                     l1678:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2057     0FF3  0020               	movlb	0	; select bank0
  2058     0FF4  0841               	movf	vfprintf@cfmt,w
  2059     0FF5  0084               	movwf	4
  2060     0FF6  0842               	movf	vfprintf@cfmt+1,w
  2061     0FF7  0085               	movwf	5
  2062     0FF8  0012               	moviw fsr0++
  2063     0FF9  1D03               	btfss	3,2
  2064     0FFA  2FFC               	goto	u1551
  2065     0FFB  2FFD               	goto	u1550
  2066     0FFC                     u1551:
  2067     0FFC  2FE8               	goto	l1676
  2068     0FFD                     u1550:
  2069     0FFD                     l1680:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2072     0FFD  01BB               	clrf	?_vfprintf
  2073     0FFE  01BC               	clrf	?_vfprintf+1
  2074     0FFF                     l800:
  2075     0FFF  0008               	return
  2076     1000                     __end_of_vfprintf:
  2077                           
  2078                           	psect	text4
  2079     0219                     __ptext4:	
  2080 ;; *************** function _vfpfcnvrt *****************
  2081 ;; Defined at:
  2082 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2085 ;;		 -> sprintf@f(11), 
  2086 ;;  fmt             1   13[BANK0 ] PTR PTR unsigned char 
  2087 ;;		 -> vfprintf@cfmt(2), 
  2088 ;;  ap              1   14[BANK0 ] PTR PTR void 
  2089 ;;		 -> sprintf@ap(1), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  convarg         4   22[BANK0 ] struct .
  2092 ;;  cp              2   20[BANK0 ] PTR unsigned char 
  2093 ;;		 -> STR_2(15), STR_1(13), 
  2094 ;;  c               1   26[BANK0 ] unsigned char 
  2095 ;;  done            1   19[BANK0 ] _Bool 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2106 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2108 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2109 ;;Total ram usage:       16 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: unknown (due to recursion)
  2112 ;; This function calls:
  2113 ;;		___awdiv
  2114 ;;		___awmod
  2115 ;;		_abs
  2116 ;;		_fputc
  2117 ;; This function is called by:
  2118 ;;		_vfprintf
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     0219                     _vfpfcnvrt:	
  2123                           ;psect for function _vfpfcnvrt
  2124                           
  2125     0219                     l1610:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2128                           
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2131     0219  0020               	movlb	0	; select bank0
  2132     021A  082D               	movf	vfpfcnvrt@fmt,w
  2133     021B  0086               	movwf	6
  2134     021C  0187               	clrf	7
  2135     021D  3F40               	moviw [0]fsr1
  2136     021E  00AF               	movwf	??_vfpfcnvrt
  2137     021F  3F41               	moviw [1]fsr1
  2138     0220  00B0               	movwf	??_vfpfcnvrt+1
  2139     0221  082F               	movf	??_vfpfcnvrt,w
  2140     0222  0084               	movwf	4
  2141     0223  0830               	movf	??_vfpfcnvrt+1,w
  2142     0224  0085               	movwf	5
  2143     0225  0012               	moviw fsr0++
  2144     0226  3A25               	xorlw	37
  2145     0227  1D03               	btfss	3,2
  2146     0228  2A2A               	goto	u1431
  2147     0229  2A2B               	goto	u1430
  2148     022A                     u1431:
  2149     022A  2AEE               	goto	l1656
  2150     022B                     u1430:
  2151     022B                     l1612:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2154     022B  082D               	movf	vfpfcnvrt@fmt,w
  2155     022C  0086               	movwf	6
  2156     022D  0187               	clrf	7
  2157     022E  3001               	movlw	1
  2158     022F  0781               	addwf	1,f
  2159     0230  3141               	addfsr 1,1
  2160     0231  1803               	skipnc
  2161     0232  0A81               	incf	1,f
  2162     0233                     l1614:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2165     0233  01D7               	clrf	_width
  2166     0234  01D8               	clrf	_width+1
  2167     0235  1003               	clrc
  2168     0236  3000               	movlw	0
  2169     0237  1803               	btfsc	3,0
  2170     0238  3001               	movlw	1
  2171     0239  00DD               	movwf	_flags
  2172     023A                     l1616:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2175     023A  30FF               	movlw	255
  2176     023B  00D9               	movwf	_prec
  2177     023C  30FF               	movlw	255
  2178     023D  00DA               	movwf	_prec+1
  2179     023E                     l1618:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2182     023E  082D               	movf	vfpfcnvrt@fmt,w
  2183     023F  0086               	movwf	6
  2184     0240  0187               	clrf	7
  2185     0241  3F40               	moviw [0]fsr1
  2186     0242  00B4               	movwf	vfpfcnvrt@cp
  2187     0243  3F41               	moviw [1]fsr1
  2188     0244  00B5               	movwf	vfpfcnvrt@cp+1
  2189     0245                     l1620:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2192     0245  0834               	movf	vfpfcnvrt@cp,w
  2193     0246  0084               	movwf	4
  2194     0247  0835               	movf	vfpfcnvrt@cp+1,w
  2195     0248  0085               	movwf	5
  2196     0249  0012               	moviw fsr0++
  2197     024A  3A64               	xorlw	100
  2198     024B  1903               	btfsc	3,2
  2199     024C  2A4E               	goto	u1441
  2200     024D  2A4F               	goto	u1440
  2201     024E                     u1441:
  2202     024E  2A59               	goto	l1624
  2203     024F                     u1440:
  2204     024F                     l1622:
  2205     024F  0834               	movf	vfpfcnvrt@cp,w
  2206     0250  0084               	movwf	4
  2207     0251  0835               	movf	vfpfcnvrt@cp+1,w
  2208     0252  0085               	movwf	5
  2209     0253  0012               	moviw fsr0++
  2210     0254  3A69               	xorlw	105
  2211     0255  1D03               	btfss	3,2
  2212     0256  2A58               	goto	u1451
  2213     0257  2A59               	goto	u1450
  2214     0258                     u1451:
  2215     0258  2AE4               	goto	l1652
  2216     0259                     u1450:
  2217     0259                     l1624:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2220     0259  082E               	movf	vfpfcnvrt@ap,w
  2221     025A  0086               	movwf	6
  2222     025B  0187               	clrf	7
  2223     025C  0801               	movf	1,w
  2224     025D  0084               	movwf	4
  2225     025E  0185               	clrf	5
  2226     025F  3002               	movlw	2
  2227     0260  0781               	addwf	1,f
  2228     0261  3F00               	moviw [0]fsr0
  2229     0262  00B6               	movwf	vfpfcnvrt@convarg
  2230     0263  3F01               	moviw [1]fsr0
  2231     0264  00B7               	movwf	vfpfcnvrt@convarg+1
  2232     0265                     l1626:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2235     0265  0834               	movf	vfpfcnvrt@cp,w
  2236     0266  3E01               	addlw	1
  2237     0267  00AF               	movwf	??_vfpfcnvrt
  2238     0268  3000               	movlw	0
  2239     0269  3D35               	addwfc	vfpfcnvrt@cp+1,w
  2240     026A  00B0               	movwf	??_vfpfcnvrt+1
  2241     026B  082D               	movf	vfpfcnvrt@fmt,w
  2242     026C  0086               	movwf	6
  2243     026D  0187               	clrf	7
  2244     026E  082F               	movf	??_vfpfcnvrt,w
  2245     026F  3FC0               	movwi [0]fsr1
  2246     0270  0830               	movf	??_vfpfcnvrt+1,w
  2247     0271  3FC1               	movwi [1]fsr1
  2248     0272                     l1628:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2251     0272  3020               	movlw	32
  2252     0273  00BA               	movwf	vfpfcnvrt@c
  2253     0274                     l1630:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2256     0274  1BB7               	btfsc	vfpfcnvrt@convarg+1,7
  2257     0275  2A77               	goto	u1461
  2258     0276  2A79               	goto	u1460
  2259     0277                     u1461:
  2260     0277  3001               	movlw	1
  2261     0278  2A7A               	goto	u1470
  2262     0279                     u1460:
  2263     0279  3000               	movlw	0
  2264     027A                     u1470:
  2265     027A  00B3               	movwf	vfpfcnvrt@done
  2266     027B                     l1632:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2269     027B  3001               	movlw	1
  2270     027C  02BA               	subwf	vfpfcnvrt@c,f
  2271     027D  083A               	movf	vfpfcnvrt@c,w
  2272     027E  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2273     027F  0086               	movwf	6
  2274     0280  0187               	clrf	7
  2275     0281  300A               	movlw	10
  2276     0282  00A0               	movwf	___awmod@divisor
  2277     0283  3000               	movlw	0
  2278     0284  00A1               	movwf	___awmod@divisor+1
  2279     0285  0837               	movf	vfpfcnvrt@convarg+1,w
  2280     0286  00A3               	movwf	___awmod@dividend+1
  2281     0287  0836               	movf	vfpfcnvrt@convarg,w
  2282     0288  00A2               	movwf	___awmod@dividend
  2283     0289  3186  26A4  3182   	fcall	___awmod
  2284     028C  0020               	movlb	0	; select bank0
  2285     028D  0821               	movf	?___awmod+1,w
  2286     028E  00A8               	movwf	abs@a+1
  2287     028F  0820               	movf	?___awmod,w
  2288     0290  00A7               	movwf	abs@a
  2289     0291  318F  278D  3182   	fcall	_abs
  2290     0294  0020               	movlb	0	; select bank0
  2291     0295  0827               	movf	?_abs,w
  2292     0296  3E30               	addlw	48
  2293     0297  0081               	movwf	1
  2294     0298                     l1634:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2297     0298  300A               	movlw	10
  2298     0299  00A0               	movwf	___awdiv@divisor
  2299     029A  3000               	movlw	0
  2300     029B  00A1               	movwf	___awdiv@divisor+1
  2301     029C  0837               	movf	vfpfcnvrt@convarg+1,w
  2302     029D  00A3               	movwf	___awdiv@dividend+1
  2303     029E  0836               	movf	vfpfcnvrt@convarg,w
  2304     029F  00A2               	movwf	___awdiv@dividend
  2305     02A0  3185  25E5  3182   	fcall	___awdiv
  2306     02A3  0020               	movlb	0	; select bank0
  2307     02A4  0821               	movf	?___awdiv+1,w
  2308     02A5  00B7               	movwf	vfpfcnvrt@convarg+1
  2309     02A6  0820               	movf	?___awdiv,w
  2310     02A7  00B6               	movwf	vfpfcnvrt@convarg
  2311     02A8                     l1636:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2314     02A8  0836               	movf	vfpfcnvrt@convarg,w
  2315     02A9  0437               	iorwf	vfpfcnvrt@convarg+1,w
  2316     02AA  1903               	btfsc	3,2
  2317     02AB  2AAD               	goto	u1481
  2318     02AC  2AAE               	goto	u1480
  2319     02AD                     u1481:
  2320     02AD  2AB3               	goto	l1640
  2321     02AE                     u1480:
  2322     02AE                     l1638:
  2323     02AE  083A               	movf	vfpfcnvrt@c,w
  2324     02AF  1D03               	btfss	3,2
  2325     02B0  2AB2               	goto	u1491
  2326     02B1  2AB3               	goto	u1490
  2327     02B2                     u1491:
  2328     02B2  2A7B               	goto	l1632
  2329     02B3                     u1490:
  2330     02B3                     l1640:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2333     02B3  083A               	movf	vfpfcnvrt@c,w
  2334     02B4  1903               	btfsc	3,2
  2335     02B5  2AB7               	goto	u1501
  2336     02B6  2AB8               	goto	u1500
  2337     02B7                     u1501:
  2338     02B7  2ADD               	goto	l1650
  2339     02B8                     u1500:
  2340     02B8                     l1642:
  2341     02B8  0833               	movf	vfpfcnvrt@done,w
  2342     02B9  1903               	btfsc	3,2
  2343     02BA  2ABC               	goto	u1511
  2344     02BB  2ABD               	goto	u1510
  2345     02BC                     u1511:
  2346     02BC  2ADD               	goto	l1650
  2347     02BD                     u1510:
  2348     02BD                     l1644:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2351     02BD  3001               	movlw	1
  2352     02BE  02BA               	subwf	vfpfcnvrt@c,f
  2353     02BF  083A               	movf	vfpfcnvrt@c,w
  2354     02C0  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2355     02C1  0086               	movwf	6
  2356     02C2  0187               	clrf	7
  2357     02C3  302D               	movlw	45
  2358     02C4  0081               	movwf	1
  2359     02C5  2ADD               	goto	l1650
  2360     02C6                     l1646:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2363     02C6  083A               	movf	vfpfcnvrt@c,w
  2364     02C7  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2365     02C8  0086               	movwf	6
  2366     02C9  0187               	clrf	7
  2367     02CA  0801               	movf	1,w
  2368     02CB  00AF               	movwf	??_vfpfcnvrt
  2369     02CC  01B0               	clrf	??_vfpfcnvrt+1
  2370     02CD  082F               	movf	??_vfpfcnvrt,w
  2371     02CE  00A0               	movwf	fputc@c
  2372     02CF  0830               	movf	??_vfpfcnvrt+1,w
  2373     02D0  00A1               	movwf	fputc@c+1
  2374     02D1  082C               	movf	vfpfcnvrt@fp+1,w
  2375     02D2  00A3               	movwf	fputc@fp+1
  2376     02D3  082B               	movf	vfpfcnvrt@fp,w
  2377     02D4  00A2               	movwf	fputc@fp
  2378     02D5  3186  2645  3182   	fcall	_fputc
  2379     02D8                     l1648:
  2380     02D8  3001               	movlw	1
  2381     02D9  0020               	movlb	0	; select bank0
  2382     02DA  00AF               	movwf	??_vfpfcnvrt
  2383     02DB  082F               	movf	??_vfpfcnvrt,w
  2384     02DC  07BA               	addwf	vfpfcnvrt@c,f
  2385     02DD                     l1650:
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2388     02DD  3020               	movlw	32
  2389     02DE  063A               	xorwf	vfpfcnvrt@c,w
  2390     02DF  1D03               	btfss	3,2
  2391     02E0  2AE2               	goto	u1521
  2392     02E1  2AE3               	goto	u1520
  2393     02E2                     u1521:
  2394     02E2  2AC6               	goto	l1646
  2395     02E3                     u1520:
  2396     02E3  2B08               	goto	l794
  2397     02E4                     l1652:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2400     02E4  0020               	movlb	0	; select bank0
  2401     02E5  082D               	movf	vfpfcnvrt@fmt,w
  2402     02E6  0086               	movwf	6
  2403     02E7  0187               	clrf	7
  2404     02E8  3001               	movlw	1
  2405     02E9  0781               	addwf	1,f
  2406     02EA  3141               	addfsr 1,1
  2407     02EB  1803               	skipnc
  2408     02EC  0A81               	incf	1,f
  2409     02ED  2B08               	goto	l794
  2410     02EE                     l1656:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2413     02EE  082D               	movf	vfpfcnvrt@fmt,w
  2414     02EF  0086               	movwf	6
  2415     02F0  0187               	clrf	7
  2416     02F1  3F40               	moviw [0]fsr1
  2417     02F2  00AF               	movwf	??_vfpfcnvrt
  2418     02F3  3F41               	moviw [1]fsr1
  2419     02F4  00B0               	movwf	??_vfpfcnvrt+1
  2420     02F5  082F               	movf	??_vfpfcnvrt,w
  2421     02F6  0084               	movwf	4
  2422     02F7  0830               	movf	??_vfpfcnvrt+1,w
  2423     02F8  0085               	movwf	5
  2424     02F9  0800               	movf	0,w	;code access
  2425     02FA  00B1               	movwf	??_vfpfcnvrt+2
  2426     02FB  01B2               	clrf	??_vfpfcnvrt+3
  2427     02FC  0831               	movf	??_vfpfcnvrt+2,w
  2428     02FD  00A0               	movwf	fputc@c
  2429     02FE  0832               	movf	??_vfpfcnvrt+3,w
  2430     02FF  00A1               	movwf	fputc@c+1
  2431     0300  082C               	movf	vfpfcnvrt@fp+1,w
  2432     0301  00A3               	movwf	fputc@fp+1
  2433     0302  082B               	movf	vfpfcnvrt@fp,w
  2434     0303  00A2               	movwf	fputc@fp
  2435     0304  3186  2645  3182   	fcall	_fputc
  2436     0307  2AE4               	goto	l1652
  2437     0308                     l794:
  2438     0308  0008               	return
  2439     0309                     __end_of_vfpfcnvrt:
  2440                           
  2441                           	psect	text5
  2442     0645                     __ptext5:	
  2443 ;; *************** function _fputc *****************
  2444 ;; Defined at:
  2445 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  c               2    0[BANK0 ] int 
  2448 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2449 ;;		 -> sprintf@f(11), 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2    0[BANK0 ] int 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2463 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2464 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2465 ;;Total ram usage:        9 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: unknown (due to recursion)
  2468 ;; This function calls:
  2469 ;;		_putch
  2470 ;; This function is called by:
  2471 ;;		_vfpfcnvrt
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475     0645                     _fputc:	
  2476                           ;psect for function _fputc
  2477                           
  2478     0645                     l1584:	
  2479                           ;incstack = 0
  2480                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2481                           
  2482     0645  0020               	movlb	0	; select bank0
  2483     0646  0822               	movf	fputc@fp,w
  2484     0647  0423               	iorwf	fputc@fp+1,w
  2485     0648  1903               	btfsc	3,2
  2486     0649  2E4B               	goto	u1381
  2487     064A  2E4C               	goto	u1380
  2488     064B                     u1381:
  2489     064B  2E52               	goto	l1588
  2490     064C                     u1380:
  2491     064C                     l1586:
  2492     064C  0822               	movf	fputc@fp,w
  2493     064D  0423               	iorwf	fputc@fp+1,w
  2494     064E  1D03               	btfss	3,2
  2495     064F  2E51               	goto	u1391
  2496     0650  2E52               	goto	u1390
  2497     0651                     u1391:
  2498     0651  2E57               	goto	l1590
  2499     0652                     u1390:
  2500     0652                     l1588:
  2501     0652  0820               	movf	fputc@c,w
  2502     0653  3187  27FF  3186   	fcall	_putch
  2503     0656  2EA3               	goto	l819
  2504     0657                     l1590:
  2505     0657  0822               	movf	fputc@fp,w
  2506     0658  0086               	movwf	6
  2507     0659  0823               	movf	fputc@fp+1,w
  2508     065A  0087               	movwf	7
  2509     065B  3149               	addfsr 1,9
  2510     065C  0016               	moviw fsr1++
  2511     065D  0401               	iorwf	1,w
  2512     065E  1903               	btfsc	3,2
  2513     065F  2E61               	goto	u1401
  2514     0660  2E62               	goto	u1400
  2515     0661                     u1401:
  2516     0661  2E82               	goto	l1594
  2517     0662                     u1400:
  2518     0662                     l1592:
  2519     0662  0822               	movf	fputc@fp,w
  2520     0663  0086               	movwf	6
  2521     0664  0823               	movf	fputc@fp+1,w
  2522     0665  0087               	movwf	7
  2523     0666  3149               	addfsr 1,9
  2524     0667  3F40               	moviw [0]fsr1
  2525     0668  00A4               	movwf	??_fputc
  2526     0669  3F41               	moviw [1]fsr1
  2527     066A  00A5               	movwf	??_fputc+1
  2528     066B  0822               	movf	fputc@fp,w
  2529     066C  0086               	movwf	6
  2530     066D  0823               	movf	fputc@fp+1,w
  2531     066E  0087               	movwf	7
  2532     066F  3142               	addfsr 1,2
  2533     0670  3F40               	moviw [0]fsr1
  2534     0671  00A6               	movwf	??_fputc+2
  2535     0672  3F41               	moviw [1]fsr1
  2536     0673  00A7               	movwf	??_fputc+3
  2537     0674  0827               	movf	??_fputc+3,w
  2538     0675  3A80               	xorlw	128
  2539     0676  00A8               	movwf	??_fputc+4
  2540     0677  0825               	movf	??_fputc+1,w
  2541     0678  3A80               	xorlw	128
  2542     0679  0228               	subwf	??_fputc+4,w
  2543     067A  1D03               	skipz
  2544     067B  2E7E               	goto	u1415
  2545     067C  0824               	movf	??_fputc,w
  2546     067D  0226               	subwf	??_fputc+2,w
  2547     067E                     u1415:
  2548     067E  1803               	skipnc
  2549     067F  2E81               	goto	u1411
  2550     0680  2E82               	goto	u1410
  2551     0681                     u1411:
  2552     0681  2EA3               	goto	l819
  2553     0682                     u1410:
  2554     0682                     l1594:
  2555     0682  0020               	movlb	0	; select bank0
  2556     0683  0822               	movf	fputc@fp,w
  2557     0684  0086               	movwf	6
  2558     0685  0823               	movf	fputc@fp+1,w
  2559     0686  0087               	movwf	7
  2560     0687  3142               	addfsr 1,2
  2561     0688  0822               	movf	fputc@fp,w
  2562     0689  0084               	movwf	4
  2563     068A  0823               	movf	fputc@fp+1,w
  2564     068B  0085               	movwf	5
  2565     068C  3F40               	moviw [0]fsr1
  2566     068D  0700               	addwf	0,w
  2567     068E  00A4               	movwf	??_fputc
  2568     068F  3101               	addfsr 0,1
  2569     0690  3F41               	moviw [1]fsr1
  2570     0691  3D00               	addwfc	0,w
  2571     0692  00A5               	movwf	??_fputc+1
  2572     0693  0824               	movf	??_fputc,w
  2573     0694  0086               	movwf	6
  2574     0695  0825               	movf	??_fputc+1,w
  2575     0696  0087               	movwf	7
  2576     0697  0820               	movf	fputc@c,w
  2577     0698  0081               	movwf	1
  2578     0699                     l1596:
  2579     0699  0822               	movf	fputc@fp,w
  2580     069A  0086               	movwf	6
  2581     069B  0823               	movf	fputc@fp+1,w
  2582     069C  0087               	movwf	7
  2583     069D  3142               	addfsr 1,2
  2584     069E  3001               	movlw	1
  2585     069F  0781               	addwf	1,f
  2586     06A0  3141               	addfsr 1,1
  2587     06A1  1803               	skipnc
  2588     06A2  0A81               	incf	1,f
  2589     06A3                     l819:
  2590     06A3  0008               	return
  2591     06A4                     __end_of_fputc:
  2592                           
  2593                           	psect	text6
  2594     07FF                     __ptext6:	
  2595 ;; *************** function _putch *****************
  2596 ;; Defined at:
  2597 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  c               1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  c               1    0[COMMON] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: unknown (due to recursion)
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_fputc
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625     07FF                     _putch:	
  2626                           ;psect for function _putch
  2627                           
  2628     07FF                     l830:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _putch: [wreg]
  2631                           
  2632     07FF  0008               	return
  2633     0800                     __end_of_putch:
  2634                           
  2635                           	psect	text7
  2636     0F8D                     __ptext7:	
  2637 ;; *************** function _abs *****************
  2638 ;; Defined at:
  2639 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  a               2    7[BANK0 ] int 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    7[BANK0 ] int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2656 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2657 ;;Total ram usage:        4 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: unknown (due to recursion)
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_vfpfcnvrt
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667     0F8D                     _abs:	
  2668                           ;psect for function _abs
  2669                           
  2670     0F8D                     l1600:	
  2671                           ;incstack = 0
  2672                           ; Regs used in _abs: [wreg+status,2+status,0]
  2673                           
  2674     0F8D  0020               	movlb	0	; select bank0
  2675     0F8E  1BA8               	btfsc	abs@a+1,7
  2676     0F8F  2F91               	goto	u1421
  2677     0F90  2F92               	goto	u1420
  2678     0F91                     u1421:
  2679     0F91  2F93               	goto	l1604
  2680     0F92                     u1420:
  2681     0F92                     l1602:
  2682     0F92  2F9E               	goto	l807
  2683     0F93                     l1604:
  2684     0F93  0927               	comf	abs@a,w
  2685     0F94  00A9               	movwf	??_abs
  2686     0F95  0928               	comf	abs@a+1,w
  2687     0F96  00AA               	movwf	??_abs+1
  2688     0F97  0AA9               	incf	??_abs,f
  2689     0F98  1903               	skipnz
  2690     0F99  0AAA               	incf	??_abs+1,f
  2691     0F9A  0829               	movf	??_abs,w
  2692     0F9B  00A7               	movwf	?_abs
  2693     0F9C  082A               	movf	??_abs+1,w
  2694     0F9D  00A8               	movwf	?_abs+1
  2695     0F9E                     l807:
  2696     0F9E  0008               	return
  2697     0F9F                     __end_of_abs:
  2698                           
  2699                           	psect	text8
  2700     06A4                     __ptext8:	
  2701 ;; *************** function ___awmod *****************
  2702 ;; Defined at:
  2703 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  divisor         2    0[BANK0 ] int 
  2706 ;;  dividend        2    2[BANK0 ] int 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  sign            1    6[BANK0 ] unsigned char 
  2709 ;;  counter         1    5[BANK0 ] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  2    0[BANK0 ] int 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2722 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2723 ;;Total ram usage:        7 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: unknown (due to recursion)
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_vfpfcnvrt
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733     06A4                     ___awmod:	
  2734                           ;psect for function ___awmod
  2735                           
  2736     06A4                     l1546:	
  2737                           ;incstack = 0
  2738                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2739                           
  2740     06A4  0020               	movlb	0	; select bank0
  2741     06A5  01A6               	clrf	___awmod@sign
  2742     06A6                     l1548:
  2743     06A6  1FA3               	btfss	___awmod@dividend+1,7
  2744     06A7  2EA9               	goto	u1291
  2745     06A8  2EAA               	goto	u1290
  2746     06A9                     u1291:
  2747     06A9  2EB1               	goto	l1554
  2748     06AA                     u1290:
  2749     06AA                     l1550:
  2750     06AA  09A2               	comf	___awmod@dividend,f
  2751     06AB  09A3               	comf	___awmod@dividend+1,f
  2752     06AC  0AA2               	incf	___awmod@dividend,f
  2753     06AD  1903               	skipnz
  2754     06AE  0AA3               	incf	___awmod@dividend+1,f
  2755     06AF                     l1552:
  2756     06AF  01A6               	clrf	___awmod@sign
  2757     06B0  0AA6               	incf	___awmod@sign,f
  2758     06B1                     l1554:
  2759     06B1  1FA1               	btfss	___awmod@divisor+1,7
  2760     06B2  2EB4               	goto	u1301
  2761     06B3  2EB5               	goto	u1300
  2762     06B4                     u1301:
  2763     06B4  2EBA               	goto	l1558
  2764     06B5                     u1300:
  2765     06B5                     l1556:
  2766     06B5  09A0               	comf	___awmod@divisor,f
  2767     06B6  09A1               	comf	___awmod@divisor+1,f
  2768     06B7  0AA0               	incf	___awmod@divisor,f
  2769     06B8  1903               	skipnz
  2770     06B9  0AA1               	incf	___awmod@divisor+1,f
  2771     06BA                     l1558:
  2772     06BA  0820               	movf	___awmod@divisor,w
  2773     06BB  0421               	iorwf	___awmod@divisor+1,w
  2774     06BC  1903               	btfsc	3,2
  2775     06BD  2EBF               	goto	u1311
  2776     06BE  2EC0               	goto	u1310
  2777     06BF                     u1311:
  2778     06BF  2EE9               	goto	l1576
  2779     06C0                     u1310:
  2780     06C0                     l1560:
  2781     06C0  01A5               	clrf	___awmod@counter
  2782     06C1  0AA5               	incf	___awmod@counter,f
  2783     06C2  2ECC               	goto	l1566
  2784     06C3                     l1562:
  2785     06C3  3001               	movlw	1
  2786     06C4                     u1325:
  2787     06C4  35A0               	lslf	___awmod@divisor,f
  2788     06C5  0DA1               	rlf	___awmod@divisor+1,f
  2789     06C6  0B89               	decfsz	9,f
  2790     06C7  2EC4               	goto	u1325
  2791     06C8                     l1564:
  2792     06C8  3001               	movlw	1
  2793     06C9  00A4               	movwf	??___awmod
  2794     06CA  0824               	movf	??___awmod,w
  2795     06CB  07A5               	addwf	___awmod@counter,f
  2796     06CC                     l1566:
  2797     06CC  1FA1               	btfss	___awmod@divisor+1,7
  2798     06CD  2ECF               	goto	u1331
  2799     06CE  2ED0               	goto	u1330
  2800     06CF                     u1331:
  2801     06CF  2EC3               	goto	l1562
  2802     06D0                     u1330:
  2803     06D0                     l1568:
  2804     06D0  0821               	movf	___awmod@divisor+1,w
  2805     06D1  0223               	subwf	___awmod@dividend+1,w
  2806     06D2  1D03               	skipz
  2807     06D3  2ED6               	goto	u1345
  2808     06D4  0820               	movf	___awmod@divisor,w
  2809     06D5  0222               	subwf	___awmod@dividend,w
  2810     06D6                     u1345:
  2811     06D6  1C03               	skipc
  2812     06D7  2ED9               	goto	u1341
  2813     06D8  2EDA               	goto	u1340
  2814     06D9                     u1341:
  2815     06D9  2EDE               	goto	l1572
  2816     06DA                     u1340:
  2817     06DA                     l1570:
  2818     06DA  0820               	movf	___awmod@divisor,w
  2819     06DB  02A2               	subwf	___awmod@dividend,f
  2820     06DC  0821               	movf	___awmod@divisor+1,w
  2821     06DD  3BA3               	subwfb	___awmod@dividend+1,f
  2822     06DE                     l1572:
  2823     06DE  3001               	movlw	1
  2824     06DF                     u1355:
  2825     06DF  36A1               	lsrf	___awmod@divisor+1,f
  2826     06E0  0CA0               	rrf	___awmod@divisor,f
  2827     06E1  0B89               	decfsz	9,f
  2828     06E2  2EDF               	goto	u1355
  2829     06E3                     l1574:
  2830     06E3  3001               	movlw	1
  2831     06E4  02A5               	subwf	___awmod@counter,f
  2832     06E5  1D03               	btfss	3,2
  2833     06E6  2EE8               	goto	u1361
  2834     06E7  2EE9               	goto	u1360
  2835     06E8                     u1361:
  2836     06E8  2ED0               	goto	l1568
  2837     06E9                     u1360:
  2838     06E9                     l1576:
  2839     06E9  0826               	movf	___awmod@sign,w
  2840     06EA  1903               	btfsc	3,2
  2841     06EB  2EED               	goto	u1371
  2842     06EC  2EEE               	goto	u1370
  2843     06ED                     u1371:
  2844     06ED  2EF3               	goto	l1580
  2845     06EE                     u1370:
  2846     06EE                     l1578:
  2847     06EE  09A2               	comf	___awmod@dividend,f
  2848     06EF  09A3               	comf	___awmod@dividend+1,f
  2849     06F0  0AA2               	incf	___awmod@dividend,f
  2850     06F1  1903               	skipnz
  2851     06F2  0AA3               	incf	___awmod@dividend+1,f
  2852     06F3                     l1580:
  2853     06F3  0823               	movf	___awmod@dividend+1,w
  2854     06F4  00A1               	movwf	?___awmod+1
  2855     06F5  0822               	movf	___awmod@dividend,w
  2856     06F6  00A0               	movwf	?___awmod
  2857     06F7                     l459:
  2858     06F7  0008               	return
  2859     06F8                     __end_of___awmod:
  2860                           
  2861                           	psect	text9
  2862     05E5                     __ptext9:	
  2863 ;; *************** function ___awdiv *****************
  2864 ;; Defined at:
  2865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  divisor         2    0[BANK0 ] int 
  2868 ;;  dividend        2    2[BANK0 ] int 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  quotient        2    7[BANK0 ] int 
  2871 ;;  sign            1    6[BANK0 ] unsigned char 
  2872 ;;  counter         1    5[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2    0[BANK0 ] int 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        9 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: unknown (due to recursion)
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;;		_vfpfcnvrt
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897     05E5                     ___awdiv:	
  2898                           ;psect for function ___awdiv
  2899                           
  2900     05E5                     l1502:	
  2901                           ;incstack = 0
  2902                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2903                           
  2904     05E5  0020               	movlb	0	; select bank0
  2905     05E6  01A6               	clrf	___awdiv@sign
  2906     05E7                     l1504:
  2907     05E7  1FA1               	btfss	___awdiv@divisor+1,7
  2908     05E8  2DEA               	goto	u1191
  2909     05E9  2DEB               	goto	u1190
  2910     05EA                     u1191:
  2911     05EA  2DF2               	goto	l1510
  2912     05EB                     u1190:
  2913     05EB                     l1506:
  2914     05EB  09A0               	comf	___awdiv@divisor,f
  2915     05EC  09A1               	comf	___awdiv@divisor+1,f
  2916     05ED  0AA0               	incf	___awdiv@divisor,f
  2917     05EE  1903               	skipnz
  2918     05EF  0AA1               	incf	___awdiv@divisor+1,f
  2919     05F0                     l1508:
  2920     05F0  01A6               	clrf	___awdiv@sign
  2921     05F1  0AA6               	incf	___awdiv@sign,f
  2922     05F2                     l1510:
  2923     05F2  1FA3               	btfss	___awdiv@dividend+1,7
  2924     05F3  2DF5               	goto	u1201
  2925     05F4  2DF6               	goto	u1200
  2926     05F5                     u1201:
  2927     05F5  2DFF               	goto	l1516
  2928     05F6                     u1200:
  2929     05F6                     l1512:
  2930     05F6  09A2               	comf	___awdiv@dividend,f
  2931     05F7  09A3               	comf	___awdiv@dividend+1,f
  2932     05F8  0AA2               	incf	___awdiv@dividend,f
  2933     05F9  1903               	skipnz
  2934     05FA  0AA3               	incf	___awdiv@dividend+1,f
  2935     05FB                     l1514:
  2936     05FB  3001               	movlw	1
  2937     05FC  00A4               	movwf	??___awdiv
  2938     05FD  0824               	movf	??___awdiv,w
  2939     05FE  06A6               	xorwf	___awdiv@sign,f
  2940     05FF                     l1516:
  2941     05FF  01A7               	clrf	___awdiv@quotient
  2942     0600  01A8               	clrf	___awdiv@quotient+1
  2943     0601                     l1518:
  2944     0601  0820               	movf	___awdiv@divisor,w
  2945     0602  0421               	iorwf	___awdiv@divisor+1,w
  2946     0603  1903               	btfsc	3,2
  2947     0604  2E06               	goto	u1211
  2948     0605  2E07               	goto	u1210
  2949     0606                     u1211:
  2950     0606  2E36               	goto	l1538
  2951     0607                     u1210:
  2952     0607                     l1520:
  2953     0607  01A5               	clrf	___awdiv@counter
  2954     0608  0AA5               	incf	___awdiv@counter,f
  2955     0609  2E13               	goto	l1526
  2956     060A                     l1522:
  2957     060A  3001               	movlw	1
  2958     060B                     u1225:
  2959     060B  35A0               	lslf	___awdiv@divisor,f
  2960     060C  0DA1               	rlf	___awdiv@divisor+1,f
  2961     060D  0B89               	decfsz	9,f
  2962     060E  2E0B               	goto	u1225
  2963     060F                     l1524:
  2964     060F  3001               	movlw	1
  2965     0610  00A4               	movwf	??___awdiv
  2966     0611  0824               	movf	??___awdiv,w
  2967     0612  07A5               	addwf	___awdiv@counter,f
  2968     0613                     l1526:
  2969     0613  1FA1               	btfss	___awdiv@divisor+1,7
  2970     0614  2E16               	goto	u1231
  2971     0615  2E17               	goto	u1230
  2972     0616                     u1231:
  2973     0616  2E0A               	goto	l1522
  2974     0617                     u1230:
  2975     0617                     l1528:
  2976     0617  3001               	movlw	1
  2977     0618                     u1245:
  2978     0618  35A7               	lslf	___awdiv@quotient,f
  2979     0619  0DA8               	rlf	___awdiv@quotient+1,f
  2980     061A  0B89               	decfsz	9,f
  2981     061B  2E18               	goto	u1245
  2982     061C  0821               	movf	___awdiv@divisor+1,w
  2983     061D  0223               	subwf	___awdiv@dividend+1,w
  2984     061E  1D03               	skipz
  2985     061F  2E22               	goto	u1255
  2986     0620  0820               	movf	___awdiv@divisor,w
  2987     0621  0222               	subwf	___awdiv@dividend,w
  2988     0622                     u1255:
  2989     0622  1C03               	skipc
  2990     0623  2E25               	goto	u1251
  2991     0624  2E26               	goto	u1250
  2992     0625                     u1251:
  2993     0625  2E2B               	goto	l1534
  2994     0626                     u1250:
  2995     0626                     l1530:
  2996     0626  0820               	movf	___awdiv@divisor,w
  2997     0627  02A2               	subwf	___awdiv@dividend,f
  2998     0628  0821               	movf	___awdiv@divisor+1,w
  2999     0629  3BA3               	subwfb	___awdiv@dividend+1,f
  3000     062A                     l1532:
  3001     062A  1427               	bsf	___awdiv@quotient,0
  3002     062B                     l1534:
  3003     062B  3001               	movlw	1
  3004     062C                     u1265:
  3005     062C  36A1               	lsrf	___awdiv@divisor+1,f
  3006     062D  0CA0               	rrf	___awdiv@divisor,f
  3007     062E  0B89               	decfsz	9,f
  3008     062F  2E2C               	goto	u1265
  3009     0630                     l1536:
  3010     0630  3001               	movlw	1
  3011     0631  02A5               	subwf	___awdiv@counter,f
  3012     0632  1D03               	btfss	3,2
  3013     0633  2E35               	goto	u1271
  3014     0634  2E36               	goto	u1270
  3015     0635                     u1271:
  3016     0635  2E17               	goto	l1528
  3017     0636                     u1270:
  3018     0636                     l1538:
  3019     0636  0826               	movf	___awdiv@sign,w
  3020     0637  1903               	btfsc	3,2
  3021     0638  2E3A               	goto	u1281
  3022     0639  2E3B               	goto	u1280
  3023     063A                     u1281:
  3024     063A  2E40               	goto	l1542
  3025     063B                     u1280:
  3026     063B                     l1540:
  3027     063B  09A7               	comf	___awdiv@quotient,f
  3028     063C  09A8               	comf	___awdiv@quotient+1,f
  3029     063D  0AA7               	incf	___awdiv@quotient,f
  3030     063E  1903               	skipnz
  3031     063F  0AA8               	incf	___awdiv@quotient+1,f
  3032     0640                     l1542:
  3033     0640  0828               	movf	___awdiv@quotient+1,w
  3034     0641  00A1               	movwf	?___awdiv+1
  3035     0642  0827               	movf	___awdiv@quotient,w
  3036     0643  00A0               	movwf	?___awdiv
  3037     0644                     l446:
  3038     0644  0008               	return
  3039     0645                     __end_of___awdiv:
  3040                           
  3041                           	psect	text10
  3042     0794                     __ptext10:	
  3043 ;; *************** function _LCD_WriteString *****************
  3044 ;; Defined at:
  3045 ;;		line 73 in file "lcd.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  data            2    4[BANK0 ] PTR const unsigned char 
  3048 ;;		 -> texte(100), 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  i               1    8[BANK0 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3063 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3064 ;;Total ram usage:        5 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: unknown (due to recursion)
  3067 ;; This function calls:
  3068 ;;		_LCD_WriteByte
  3069 ;; This function is called by:
  3070 ;;		_setTexteLed
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074     0794                     _LCD_WriteString:	
  3075                           ;psect for function _LCD_WriteString
  3076                           
  3077     0794                     l1726:	
  3078                           ;incstack = 0
  3079                           ; Regs used in _LCD_WriteString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3080                           
  3081                           
  3082                           ;lcd.c: 74:     char i = 0;
  3083     0794  0020               	movlb	0	; select bank0
  3084     0795  01A8               	clrf	LCD_WriteString@i
  3085                           
  3086                           ;lcd.c: 75:     while (data[i]) {
  3087     0796  2FA9               	goto	l1732
  3088     0797                     l1728:
  3089                           
  3090                           ;lcd.c: 76:         LCD_WriteByte(data[i++]);
  3091     0797  0828               	movf	LCD_WriteString@i,w
  3092     0798  00A6               	movwf	??_LCD_WriteString
  3093     0799  01A7               	clrf	??_LCD_WriteString+1
  3094     079A  0826               	movf	??_LCD_WriteString,w
  3095     079B  0724               	addwf	LCD_WriteString@data,w
  3096     079C  0086               	movwf	6
  3097     079D  0827               	movf	??_LCD_WriteString+1,w
  3098     079E  3D25               	addwfc	LCD_WriteString@data+1,w
  3099     079F  0087               	movwf	7
  3100     07A0  0801               	movf	1,w
  3101     07A1  318F  27CB  3187   	fcall	_LCD_WriteByte
  3102     07A4                     l1730:
  3103     07A4  3001               	movlw	1
  3104     07A5  0020               	movlb	0	; select bank0
  3105     07A6  00A6               	movwf	??_LCD_WriteString
  3106     07A7  0826               	movf	??_LCD_WriteString,w
  3107     07A8  07A8               	addwf	LCD_WriteString@i,f
  3108     07A9                     l1732:
  3109                           
  3110                           ;lcd.c: 75:     while (data[i]) {
  3111     07A9  0828               	movf	LCD_WriteString@i,w
  3112     07AA  00A6               	movwf	??_LCD_WriteString
  3113     07AB  01A7               	clrf	??_LCD_WriteString+1
  3114     07AC  0826               	movf	??_LCD_WriteString,w
  3115     07AD  0724               	addwf	LCD_WriteString@data,w
  3116     07AE  0086               	movwf	6
  3117     07AF  0827               	movf	??_LCD_WriteString+1,w
  3118     07B0  3D25               	addwfc	LCD_WriteString@data+1,w
  3119     07B1  0087               	movwf	7
  3120     07B2  0801               	movf	1,w
  3121     07B3  1D03               	btfss	3,2
  3122     07B4  2FB6               	goto	u1561
  3123     07B5  2FB7               	goto	u1560
  3124     07B6                     u1561:
  3125     07B6  2F97               	goto	l1728
  3126     07B7                     u1560:
  3127     07B7                     l154:
  3128     07B7  0008               	return
  3129     07B8                     __end_of_LCD_WriteString:
  3130                           
  3131                           	psect	text11
  3132     0FCB                     __ptext11:	
  3133 ;; *************** function _LCD_WriteByte *****************
  3134 ;; Defined at:
  3135 ;;		line 67 in file "lcd.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  data            1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  data            1    3[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3152 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        1 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: unknown (due to recursion)
  3156 ;; This function calls:
  3157 ;;		_LCD_WriteIOExpander
  3158 ;; This function is called by:
  3159 ;;		_LCD_WriteString
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163     0FCB                     _LCD_WriteByte:	
  3164                           ;psect for function _LCD_WriteByte
  3165                           
  3166                           
  3167                           ;incstack = 0
  3168                           ; Regs used in _LCD_WriteByte: [wreg+status,2+status,0+pclath+cstack]
  3169                           ;LCD_WriteByte@data stored from wreg
  3170     0FCB  0020               	movlb	0	; select bank0
  3171     0FCC  00A3               	movwf	LCD_WriteByte@data
  3172     0FCD                     l1672:
  3173                           
  3174                           ;lcd.c: 68:     LCD_WriteIOExpander(0x12, 0xE0);
  3175     0FCD  30E0               	movlw	224
  3176     0FCE  00A1               	movwf	LCD_WriteIOExpander@data
  3177     0FCF  3012               	movlw	18
  3178     0FD0  318F  279F  318F   	fcall	_LCD_WriteIOExpander
  3179                           
  3180                           ;lcd.c: 69:     LCD_WriteIOExpander(0x13, data);
  3181     0FD3  0020               	movlb	0	; select bank0
  3182     0FD4  0823               	movf	LCD_WriteByte@data,w
  3183     0FD5  00A1               	movwf	LCD_WriteIOExpander@data
  3184     0FD6  3013               	movlw	19
  3185     0FD7  318F  279F  318F   	fcall	_LCD_WriteIOExpander
  3186                           
  3187                           ;lcd.c: 70:     LCD_WriteIOExpander(0x12, 0xA0);
  3188     0FDA  30A0               	movlw	160
  3189     0FDB  0020               	movlb	0	; select bank0
  3190     0FDC  00A1               	movwf	LCD_WriteIOExpander@data
  3191     0FDD  3012               	movlw	18
  3192     0FDE  318F  279F  318F   	fcall	_LCD_WriteIOExpander
  3193     0FE1                     l148:
  3194     0FE1  0008               	return
  3195     0FE2                     __end_of_LCD_WriteByte:
  3196                           
  3197                           	psect	text12
  3198     0F56                     __ptext12:	
  3199 ;; *************** function _LCD_Clear *****************
  3200 ;; Defined at:
  3201 ;;		line 87 in file "lcd.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: unknown (due to recursion)
  3222 ;; This function calls:
  3223 ;;		_LCD_GoTo
  3224 ;;		_LCD_WriteCommand
  3225 ;; This function is called by:
  3226 ;;		_setTexteLed
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230     0F56                     _LCD_Clear:	
  3231                           ;psect for function _LCD_Clear
  3232                           
  3233     0F56                     l1712:	
  3234                           ;incstack = 0
  3235                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3236                           
  3237                           
  3238                           ;lcd.c: 88:     LCD_WriteCommand(0x01);
  3239     0F56  3001               	movlw	1
  3240     0F57  318F  27B4  318F   	fcall	_LCD_WriteCommand
  3241                           
  3242                           ;lcd.c: 89:     LCD_GoTo(0, 0);
  3243     0F5A  0020               	movlb	0	; select bank0
  3244     0F5B  01A4               	clrf	LCD_GoTo@column
  3245     0F5C  3000               	movlw	0
  3246     0F5D  3187  27D9  318F   	fcall	_LCD_GoTo
  3247     0F60                     l165:
  3248     0F60  0008               	return
  3249     0F61                     __end_of_LCD_Clear:
  3250                           
  3251                           	psect	text13
  3252     07D9                     __ptext13:	
  3253 ;; *************** function _LCD_GoTo *****************
  3254 ;; Defined at:
  3255 ;;		line 80 in file "lcd.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  row             1    wreg     unsigned char 
  3258 ;;  column          1    4[BANK0 ] unsigned char 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  row             1    8[BANK0 ] unsigned char 
  3261 ;;  pos             1    7[BANK0 ] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3272 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3274 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3275 ;;Total ram usage:        5 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: unknown (due to recursion)
  3278 ;; This function calls:
  3279 ;;		_LCD_WriteCommand
  3280 ;; This function is called by:
  3281 ;;		_setTexteLed
  3282 ;;		_LCD_Clear
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286     07D9                     _LCD_GoTo:	
  3287                           ;psect for function _LCD_GoTo
  3288                           
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _LCD_GoTo: [wreg+status,2+status,0+pclath+cstack]
  3292                           ;LCD_GoTo@row stored from wreg
  3293     07D9  0020               	movlb	0	; select bank0
  3294     07DA  00A8               	movwf	LCD_GoTo@row
  3295     07DB                     l1662:
  3296                           
  3297                           ;lcd.c: 81:     if (row < 2) {
  3298     07DB  3002               	movlw	2
  3299     07DC  0228               	subwf	LCD_GoTo@row,w
  3300     07DD  1803               	skipnc
  3301     07DE  2FE0               	goto	u1531
  3302     07DF  2FE1               	goto	u1530
  3303     07E0                     u1531:
  3304     07E0  2FF7               	goto	l162
  3305     07E1                     u1530:
  3306     07E1                     l1664:
  3307                           
  3308                           ;lcd.c: 82:         char pos = (row == 0) ? (0x80 | column) : (0xC0 | column);
  3309     07E1  0828               	movf	LCD_GoTo@row,w
  3310     07E2  1903               	btfsc	3,2
  3311     07E3  2FE5               	goto	u1541
  3312     07E4  2FE6               	goto	u1540
  3313     07E5                     u1541:
  3314     07E5  2FEC               	goto	l1668
  3315     07E6                     u1540:
  3316     07E6                     l1666:
  3317     07E6  30C0               	movlw	192
  3318     07E7  0424               	iorwf	LCD_GoTo@column,w
  3319     07E8  00A5               	movwf	_LCD_GoTo$664
  3320     07E9  3000               	movlw	0
  3321     07EA  00A6               	movwf	_LCD_GoTo$664+1
  3322     07EB  2FF1               	goto	l161
  3323     07EC                     l1668:
  3324     07EC  3080               	movlw	128
  3325     07ED  0424               	iorwf	LCD_GoTo@column,w
  3326     07EE  00A5               	movwf	_LCD_GoTo$664
  3327     07EF  3000               	movlw	0
  3328     07F0  00A6               	movwf	_LCD_GoTo$664+1
  3329     07F1                     l161:
  3330     07F1  0825               	movf	_LCD_GoTo$664,w
  3331     07F2  00A7               	movwf	LCD_GoTo@pos
  3332     07F3                     l1670:
  3333                           
  3334                           ;lcd.c: 83:         LCD_WriteCommand(pos);
  3335     07F3  0827               	movf	LCD_GoTo@pos,w
  3336     07F4  318F  27B4  3187   	fcall	_LCD_WriteCommand
  3337     07F7                     l162:
  3338     07F7  0008               	return
  3339     07F8                     __end_of_LCD_GoTo:
  3340                           
  3341                           	psect	text14
  3342     06F8                     __ptext14:	
  3343 ;; *************** function _init *****************
  3344 ;; Defined at:
  3345 ;;		line 27 in file "main.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: unknown (due to recursion)
  3366 ;; This function calls:
  3367 ;;		_LCD_Initialize
  3368 ;;		_LCD_InitializePins
  3369 ;;		_SPI_Initialize
  3370 ;;		_SPI_InitializePins
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376     06F8                     _init:	
  3377                           ;psect for function _init
  3378                           
  3379     06F8                     l1776:	
  3380                           ;incstack = 0
  3381                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3382                           
  3383                           
  3384                           ;main.c: 29:     TRISBbits.TRISB0 = 1;
  3385     06F8  0021               	movlb	1	; select bank1
  3386     06F9  140D               	bsf	13,0	;volatile
  3387                           
  3388                           ;main.c: 30:     PORTAbits.RA0 = 1;
  3389     06FA  0020               	movlb	0	; select bank0
  3390     06FB  140C               	bsf	12,0	;volatile
  3391                           
  3392                           ;main.c: 31:     TRISDbits.TRISD0 = 0;
  3393     06FC  0021               	movlb	1	; select bank1
  3394     06FD  100F               	bcf	15,0	;volatile
  3395                           
  3396                           ;main.c: 32:     ANSELBbits.ANSB0 = 0;
  3397     06FE  0023               	movlb	3	; select bank3
  3398     06FF  100D               	bcf	13,0	;volatile
  3399                           
  3400                           ;main.c: 35:     ANSELAbits.ANSA0 = 1;
  3401     0700  140C               	bsf	12,0	;volatile
  3402                           
  3403                           ;main.c: 36:     ADCON0bits.ADON = 1;
  3404     0701  0021               	movlb	1	; select bank1
  3405     0702  141D               	bsf	29,0	;volatile
  3406     0703                     l1778:
  3407                           
  3408                           ;main.c: 37:     ADCON0bits.CHS = 0;
  3409     0703  3083               	movlw	-125
  3410     0704  059D               	andwf	29,f	;volatile
  3411                           
  3412                           ;main.c: 38:     ADCON1bits.ADCS = 0;
  3413     0705  308F               	movlw	-113
  3414     0706  059E               	andwf	30,f	;volatile
  3415     0707                     l1780:
  3416                           
  3417                           ;main.c: 39:     ADCON1bits.ADNREF = 0;
  3418     0707  111E               	bcf	30,2	;volatile
  3419                           
  3420                           ;main.c: 40:     ADCON1bits.ADPREF = 0;
  3421     0708  30FC               	movlw	-4
  3422     0709  059E               	andwf	30,f	;volatile
  3423     070A                     l1782:
  3424                           
  3425                           ;main.c: 41:     ADCON1bits.ADFM = 0;
  3426     070A  139E               	bcf	30,7	;volatile
  3427     070B                     l1784:
  3428                           
  3429                           ;main.c: 42:     ADCON0bits.GO_nDONE = 1;
  3430     070B  149D               	bsf	29,1	;volatile
  3431     070C                     l1786:
  3432                           
  3433                           ;main.c: 45:     SPI_InitializePins();
  3434     070C  3187  27B8  3186   	fcall	_SPI_InitializePins
  3435     070F                     l1788:
  3436                           
  3437                           ;main.c: 46:     LCD_InitializePins();
  3438     070F  318F  2751  3186   	fcall	_LCD_InitializePins
  3439     0712                     l1790:
  3440                           
  3441                           ;main.c: 47:     SPI_Initialize();
  3442     0712  3187  27F8  3186   	fcall	_SPI_Initialize
  3443     0715                     l1792:
  3444                           
  3445                           ;main.c: 48:     LCD_Initialize();
  3446     0715  3185  2583  3186   	fcall	_LCD_Initialize
  3447     0718                     l1794:
  3448                           
  3449                           ;main.c: 51:     RC6PPSbits.RC6PPS = 20;
  3450     0718  003D               	movlb	29	; select bank29
  3451     0719  0826               	movf	38,w	;volatile
  3452     071A  39E0               	andlw	-32
  3453     071B  3814               	iorlw	20
  3454     071C  00A6               	movwf	38	;volatile
  3455     071D                     l1796:
  3456                           
  3457                           ;main.c: 52:     RXPPSbits.RXPPS = 23;
  3458     071D  003C               	movlb	28	; select bank28
  3459     071E  0824               	movf	36,w	;volatile
  3460     071F  39E0               	andlw	-32
  3461     0720  3817               	iorlw	23
  3462     0721  00A4               	movwf	36	;volatile
  3463     0722                     l1798:
  3464                           
  3465                           ;main.c: 54:     TRISCbits.TRISC6 = 0;
  3466     0722  0021               	movlb	1	; select bank1
  3467     0723  130E               	bcf	14,6	;volatile
  3468     0724                     l1800:
  3469                           
  3470                           ;main.c: 55:     TRISCbits.TRISC7 = 1;
  3471     0724  178E               	bsf	14,7	;volatile
  3472     0725                     l1802:
  3473                           
  3474                           ;main.c: 56:     ANSELCbits.ANSC7 = 0;
  3475     0725  0023               	movlb	3	; select bank3
  3476     0726  138E               	bcf	14,7	;volatile
  3477     0727                     l1804:
  3478                           
  3479                           ;main.c: 58:     TX1STAbits.SYNC = 0;
  3480     0727  121E               	bcf	30,4	;volatile
  3481     0728                     l1806:
  3482                           
  3483                           ;main.c: 59:     TX1STAbits.BRGH = 0;
  3484     0728  111E               	bcf	30,2	;volatile
  3485     0729                     l1808:
  3486                           
  3487                           ;main.c: 60:     BAUD1CONbits.BRG16 = 1;
  3488     0729  159F               	bsf	31,3	;volatile
  3489     072A                     l1810:
  3490                           
  3491                           ;main.c: 61:     SP1BRGHbits.SP1BRGH = 0;
  3492     072A  019C               	clrf	28	;volatile
  3493     072B                     l1812:
  3494                           
  3495                           ;main.c: 62:     SP1BRGLbits.SP1BRGL = 51;
  3496     072B  3033               	movlw	51
  3497     072C  009B               	movwf	27	;volatile
  3498     072D                     l1814:
  3499                           
  3500                           ;main.c: 64:     TX1STAbits.TXEN = 1;
  3501     072D  169E               	bsf	30,5	;volatile
  3502     072E                     l1816:
  3503                           
  3504                           ;main.c: 65:     RC1STAbits.CREN = 1;
  3505     072E  161D               	bsf	29,4	;volatile
  3506     072F                     l1818:
  3507                           
  3508                           ;main.c: 66:     RC1STAbits.SPEN = 1;
  3509     072F  179D               	bsf	29,7	;volatile
  3510     0730                     l1820:
  3511                           
  3512                           ;main.c: 68:     INTCONbits.GIE = 1;
  3513     0730  178B               	bsf	11,7	;volatile
  3514     0731                     l1822:
  3515                           
  3516                           ;main.c: 69:     INTCONbits.PEIE = 1;
  3517     0731  170B               	bsf	11,6	;volatile
  3518     0732                     l1824:
  3519                           
  3520                           ;main.c: 70:     PIE1bits.RCIE = 1;
  3521     0732  0021               	movlb	1	; select bank1
  3522     0733  1691               	bsf	17,5	;volatile
  3523     0734                     l69:
  3524     0734  0008               	return
  3525     0735                     __end_of_init:
  3526                           
  3527                           	psect	text15
  3528     07B8                     __ptext15:	
  3529 ;; *************** function _SPI_InitializePins *****************
  3530 ;; Defined at:
  3531 ;;		line 40 in file "spi.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: unknown (due to recursion)
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_init
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559     07B8                     _SPI_InitializePins:	
  3560                           ;psect for function _SPI_InitializePins
  3561                           
  3562     07B8                     l1684:	
  3563                           ;incstack = 0
  3564                           ; Regs used in _SPI_InitializePins: [wreg+status,2+status,0]
  3565                           
  3566                           
  3567                           ;spi.c: 42:     LATCbits.LATC3 = 0;
  3568     07B8  0022               	movlb	2	; select bank2
  3569     07B9  118E               	bcf	14,3	;volatile
  3570                           
  3571                           ;spi.c: 43:     TRISCbits.TRISC3 = 0;
  3572     07BA  0021               	movlb	1	; select bank1
  3573     07BB  118E               	bcf	14,3	;volatile
  3574                           
  3575                           ;spi.c: 46:     LATCbits.LATC4 = 0;
  3576     07BC  0022               	movlb	2	; select bank2
  3577     07BD  120E               	bcf	14,4	;volatile
  3578                           
  3579                           ;spi.c: 47:     TRISCbits.TRISC4 = 1;
  3580     07BE  0021               	movlb	1	; select bank1
  3581     07BF  160E               	bsf	14,4	;volatile
  3582                           
  3583                           ;spi.c: 50:     LATCbits.LATC5 = 0;
  3584     07C0  0022               	movlb	2	; select bank2
  3585     07C1  128E               	bcf	14,5	;volatile
  3586                           
  3587                           ;spi.c: 51:     TRISCbits.TRISC5 = 0;
  3588     07C2  0021               	movlb	1	; select bank1
  3589     07C3  128E               	bcf	14,5	;volatile
  3590     07C4                     l1686:
  3591                           
  3592                           ;spi.c: 53:     SSPDATPPSbits.SSPDATPPS = 0x14;
  3593     07C4  003C               	movlb	28	; select bank28
  3594     07C5  0821               	movf	33,w	;volatile
  3595     07C6  39E0               	andlw	-32
  3596     07C7  3814               	iorlw	20
  3597     07C8  00A1               	movwf	33	;volatile
  3598                           
  3599                           ;spi.c: 54:     RC3PPSbits.RC3PPS = 0x10;
  3600     07C9  003D               	movlb	29	; select bank29
  3601     07CA  0823               	movf	35,w	;volatile
  3602     07CB  39E0               	andlw	-32
  3603     07CC  3810               	iorlw	16
  3604     07CD  00A3               	movwf	35	;volatile
  3605                           
  3606                           ;spi.c: 55:     SSPCLKPPSbits.SSPCLKPPS = 0x13;
  3607     07CE  003C               	movlb	28	; select bank28
  3608     07CF  0820               	movf	32,w	;volatile
  3609     07D0  39E0               	andlw	-32
  3610     07D1  3813               	iorlw	19
  3611     07D2  00A0               	movwf	32	;volatile
  3612                           
  3613                           ;spi.c: 56:     RC5PPSbits.RC5PPS = 0x11;
  3614     07D3  003D               	movlb	29	; select bank29
  3615     07D4  0825               	movf	37,w	;volatile
  3616     07D5  39E0               	andlw	-32
  3617     07D6  3811               	iorlw	17
  3618     07D7  00A5               	movwf	37	;volatile
  3619     07D8                     l192:
  3620     07D8  0008               	return
  3621     07D9                     __end_of_SPI_InitializePins:
  3622                           
  3623                           	psect	text16
  3624     07F8                     __ptext16:	
  3625 ;; *************** function _SPI_Initialize *****************
  3626 ;; Defined at:
  3627 ;;		line 59 in file "spi.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: unknown (due to recursion)
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_init
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655     07F8                     _SPI_Initialize:	
  3656                           ;psect for function _SPI_Initialize
  3657                           
  3658     07F8                     l1690:	
  3659                           ;incstack = 0
  3660                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3661                           
  3662                           
  3663                           ;spi.c: 61:     SSP1STAT = 0x40;
  3664     07F8  3040               	movlw	64
  3665     07F9  0024               	movlb	4	; select bank4
  3666     07FA  0094               	movwf	20	;volatile
  3667                           
  3668                           ;spi.c: 62:     SSP1CON1 = 0x22;
  3669     07FB  3022               	movlw	34
  3670     07FC  0095               	movwf	21	;volatile
  3671     07FD                     l1692:
  3672                           
  3673                           ;spi.c: 63:     SSP1ADD = 0x00;
  3674     07FD  0192               	clrf	18	;volatile
  3675     07FE                     l195:
  3676     07FE  0008               	return
  3677     07FF                     __end_of_SPI_Initialize:
  3678                           
  3679                           	psect	text17
  3680     0F51                     __ptext17:	
  3681 ;; *************** function _LCD_InitializePins *****************
  3682 ;; Defined at:
  3683 ;;		line 31 in file "lcd.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		None
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: unknown (due to recursion)
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_init
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711     0F51                     _LCD_InitializePins:	
  3712                           ;psect for function _LCD_InitializePins
  3713                           
  3714     0F51                     l1688:	
  3715                           ;incstack = 0
  3716                           ; Regs used in _LCD_InitializePins: []
  3717                           
  3718                           
  3719                           ;lcd.c: 32:     LATAbits.LATA2 = 1;
  3720     0F51  0022               	movlb	2	; select bank2
  3721     0F52  150C               	bsf	12,2	;volatile
  3722                           
  3723                           ;lcd.c: 33:     TRISAbits.TRISA2 = 0;
  3724     0F53  0021               	movlb	1	; select bank1
  3725     0F54  110C               	bcf	12,2	;volatile
  3726     0F55                     l136:
  3727     0F55  0008               	return
  3728     0F56                     __end_of_LCD_InitializePins:
  3729                           
  3730                           	psect	text18
  3731     0583                     __ptext18:	
  3732 ;; *************** function _LCD_Initialize *****************
  3733 ;; Defined at:
  3734 ;;		line 36 in file "lcd.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: unknown (due to recursion)
  3755 ;; This function calls:
  3756 ;;		_LCD_WriteCommand
  3757 ;;		_LCD_WriteIOExpander
  3758 ;; This function is called by:
  3759 ;;		_init
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763     0583                     _LCD_Initialize:	
  3764                           ;psect for function _LCD_Initialize
  3765                           
  3766     0583                     l1694:	
  3767                           ;incstack = 0
  3768                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3769                           
  3770                           
  3771                           ;lcd.c: 37:     LCD_WriteIOExpander(0x00, 0x00);
  3772     0583  0020               	movlb	0	; select bank0
  3773     0584  01A1               	clrf	LCD_WriteIOExpander@data
  3774     0585  3000               	movlw	0
  3775     0586  318F  279F  3185   	fcall	_LCD_WriteIOExpander
  3776                           
  3777                           ;lcd.c: 38:     LCD_WriteIOExpander(0x01, 0x00);
  3778     0589  0020               	movlb	0	; select bank0
  3779     058A  01A1               	clrf	LCD_WriteIOExpander@data
  3780     058B  3001               	movlw	1
  3781     058C  318F  279F  3185   	fcall	_LCD_WriteIOExpander
  3782                           
  3783                           ;lcd.c: 39:     LCD_WriteIOExpander(0x12, 0x20);
  3784     058F  3020               	movlw	32
  3785     0590  0020               	movlb	0	; select bank0
  3786     0591  00A1               	movwf	LCD_WriteIOExpander@data
  3787     0592  3012               	movlw	18
  3788     0593  318F  279F  3185   	fcall	_LCD_WriteIOExpander
  3789     0596                     l1696:
  3790                           
  3791                           ;lcd.c: 40:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3792     0596  301A               	movlw	26
  3793     0597  0020               	movlb	0	; select bank0
  3794     0598  00A4               	movwf	??_LCD_Initialize
  3795     0599  30F8               	movlw	248
  3796     059A                     u2357:
  3797     059A  0B89               	decfsz	9,f
  3798     059B  2D9A               	goto	u2357
  3799     059C  0BA4               	decfsz	??_LCD_Initialize,f
  3800     059D  2D9A               	goto	u2357
  3801     059E  0000               	nop
  3802     059F                     l1698:
  3803                           
  3804                           ;lcd.c: 41:     LCD_WriteCommand(0x3C);
  3805     059F  303C               	movlw	60
  3806     05A0  318F  27B4  3185   	fcall	_LCD_WriteCommand
  3807                           
  3808                           ;lcd.c: 42:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3809     05A3  301A               	movlw	26
  3810     05A4  0020               	movlb	0	; select bank0
  3811     05A5  00A4               	movwf	??_LCD_Initialize
  3812     05A6  30F8               	movlw	248
  3813     05A7                     u2367:
  3814     05A7  0B89               	decfsz	9,f
  3815     05A8  2DA7               	goto	u2367
  3816     05A9  0BA4               	decfsz	??_LCD_Initialize,f
  3817     05AA  2DA7               	goto	u2367
  3818     05AB  0000               	nop
  3819     05AC                     l1700:
  3820                           
  3821                           ;lcd.c: 43:     LCD_WriteCommand(0x0C);
  3822     05AC  300C               	movlw	12
  3823     05AD  318F  27B4  3185   	fcall	_LCD_WriteCommand
  3824     05B0                     l1702:
  3825                           
  3826                           ;lcd.c: 44:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3827     05B0  301A               	movlw	26
  3828     05B1  0020               	movlb	0	; select bank0
  3829     05B2  00A4               	movwf	??_LCD_Initialize
  3830     05B3  30F8               	movlw	248
  3831     05B4                     u2377:
  3832     05B4  0B89               	decfsz	9,f
  3833     05B5  2DB4               	goto	u2377
  3834     05B6  0BA4               	decfsz	??_LCD_Initialize,f
  3835     05B7  2DB4               	goto	u2377
  3836     05B8  0000               	nop
  3837                           
  3838                           ;lcd.c: 45:     LCD_WriteCommand(0x01);
  3839     05B9  3001               	movlw	1
  3840     05BA  318F  27B4  3185   	fcall	_LCD_WriteCommand
  3841     05BD                     l1704:
  3842                           
  3843                           ;lcd.c: 46:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3844     05BD  301A               	movlw	26
  3845     05BE  0020               	movlb	0	; select bank0
  3846     05BF  00A4               	movwf	??_LCD_Initialize
  3847     05C0  30F8               	movlw	248
  3848     05C1                     u2387:
  3849     05C1  0B89               	decfsz	9,f
  3850     05C2  2DC1               	goto	u2387
  3851     05C3  0BA4               	decfsz	??_LCD_Initialize,f
  3852     05C4  2DC1               	goto	u2387
  3853     05C5  0000               	nop
  3854     05C6                     l1706:
  3855                           
  3856                           ;lcd.c: 47:     LCD_WriteCommand(0x0C);
  3857     05C6  300C               	movlw	12
  3858     05C7  318F  27B4  3185   	fcall	_LCD_WriteCommand
  3859                           
  3860                           ;lcd.c: 48:     _delay((unsigned long)((130)*(8000000/4000.0)));
  3861     05CA  3002               	movlw	2
  3862     05CB  0020               	movlb	0	; select bank0
  3863     05CC  00A5               	movwf	??_LCD_Initialize+1
  3864     05CD  3052               	movlw	82
  3865     05CE  00A4               	movwf	??_LCD_Initialize
  3866     05CF  30A6               	movlw	166
  3867     05D0                     u2397:
  3868     05D0  0B89               	decfsz	9,f
  3869     05D1  2DD0               	goto	u2397
  3870     05D2  0BA4               	decfsz	??_LCD_Initialize,f
  3871     05D3  2DD0               	goto	u2397
  3872     05D4  0BA5               	decfsz	??_LCD_Initialize+1,f
  3873     05D5  2DD0               	goto	u2397
  3874     05D6  0000               	nop
  3875     05D7                     l1708:
  3876                           
  3877                           ;lcd.c: 49:     LCD_WriteCommand(0x80);
  3878     05D7  3080               	movlw	128
  3879     05D8  318F  27B4  3185   	fcall	_LCD_WriteCommand
  3880     05DB                     l1710:
  3881                           
  3882                           ;lcd.c: 50:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3883     05DB  3003               	movlw	3
  3884     05DC  0020               	movlb	0	; select bank0
  3885     05DD  00A4               	movwf	??_LCD_Initialize
  3886     05DE  3097               	movlw	151
  3887     05DF                     u2407:
  3888     05DF  0B89               	decfsz	9,f
  3889     05E0  2DDF               	goto	u2407
  3890     05E1  0BA4               	decfsz	??_LCD_Initialize,f
  3891     05E2  2DDF               	goto	u2407
  3892     05E3  3200               	nop2
  3893     05E4                     l139:
  3894     05E4  0008               	return
  3895     05E5                     __end_of_LCD_Initialize:
  3896                           
  3897                           	psect	text19
  3898     0FB4                     __ptext19:	
  3899 ;; *************** function _LCD_WriteCommand *****************
  3900 ;; Defined at:
  3901 ;;		line 61 in file "lcd.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  cmd             1    wreg     unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  cmd             1    3[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3919 ;;Total ram usage:        1 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: unknown (due to recursion)
  3922 ;; This function calls:
  3923 ;;		_LCD_WriteIOExpander
  3924 ;; This function is called by:
  3925 ;;		_LCD_Initialize
  3926 ;;		_LCD_GoTo
  3927 ;;		_LCD_Clear
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931     0FB4                     _LCD_WriteCommand:	
  3932                           ;psect for function _LCD_WriteCommand
  3933                           
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  3937                           ;LCD_WriteCommand@cmd stored from wreg
  3938     0FB4  0020               	movlb	0	; select bank0
  3939     0FB5  00A3               	movwf	LCD_WriteCommand@cmd
  3940     0FB6                     l1608:
  3941                           
  3942                           ;lcd.c: 62:     LCD_WriteIOExpander(0x12, 0x60);
  3943     0FB6  3060               	movlw	96
  3944     0FB7  00A1               	movwf	LCD_WriteIOExpander@data
  3945     0FB8  3012               	movlw	18
  3946     0FB9  318F  279F  318F   	fcall	_LCD_WriteIOExpander
  3947                           
  3948                           ;lcd.c: 63:     LCD_WriteIOExpander(0x13, cmd);
  3949     0FBC  0020               	movlb	0	; select bank0
  3950     0FBD  0823               	movf	LCD_WriteCommand@cmd,w
  3951     0FBE  00A1               	movwf	LCD_WriteIOExpander@data
  3952     0FBF  3013               	movlw	19
  3953     0FC0  318F  279F  318F   	fcall	_LCD_WriteIOExpander
  3954                           
  3955                           ;lcd.c: 64:     LCD_WriteIOExpander(0x12, 0x20);
  3956     0FC3  3020               	movlw	32
  3957     0FC4  0020               	movlb	0	; select bank0
  3958     0FC5  00A1               	movwf	LCD_WriteIOExpander@data
  3959     0FC6  3012               	movlw	18
  3960     0FC7  318F  279F  318F   	fcall	_LCD_WriteIOExpander
  3961     0FCA                     l145:
  3962     0FCA  0008               	return
  3963     0FCB                     __end_of_LCD_WriteCommand:
  3964                           
  3965                           	psect	text20
  3966     0F9F                     __ptext20:	
  3967 ;; *************** function _LCD_WriteIOExpander *****************
  3968 ;; Defined at:
  3969 ;;		line 53 in file "lcd.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  reg             1    wreg     unsigned char 
  3972 ;;  data            1    1[BANK0 ] unsigned char 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  reg             1    2[BANK0 ] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0, pclath, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3984 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        2 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: unknown (due to recursion)
  3991 ;; This function calls:
  3992 ;;		_SPI_Exchange8bit
  3993 ;; This function is called by:
  3994 ;;		_LCD_Initialize
  3995 ;;		_LCD_WriteCommand
  3996 ;;		_LCD_WriteByte
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000     0F9F                     _LCD_WriteIOExpander:	
  4001                           ;psect for function _LCD_WriteIOExpander
  4002                           
  4003                           
  4004                           ;incstack = 0
  4005                           ; Regs used in _LCD_WriteIOExpander: [wreg+status,2+status,0+pclath+cstack]
  4006                           ;LCD_WriteIOExpander@reg stored from wreg
  4007     0F9F  0020               	movlb	0	; select bank0
  4008     0FA0  00A2               	movwf	LCD_WriteIOExpander@reg
  4009     0FA1                     l1496:
  4010                           
  4011                           ;lcd.c: 54:     LATAbits.LATA2 = 0;
  4012     0FA1  0022               	movlb	2	; select bank2
  4013     0FA2  110C               	bcf	12,2	;volatile
  4014     0FA3                     l1498:
  4015                           
  4016                           ;lcd.c: 55:     SPI_Exchange8bit(0x40);
  4017     0FA3  3040               	movlw	64
  4018     0FA4  318F  277C  318F   	fcall	_SPI_Exchange8bit
  4019                           
  4020                           ;lcd.c: 56:     SPI_Exchange8bit(reg);
  4021     0FA7  0020               	movlb	0	; select bank0
  4022     0FA8  0822               	movf	LCD_WriteIOExpander@reg,w
  4023     0FA9  318F  277C  318F   	fcall	_SPI_Exchange8bit
  4024                           
  4025                           ;lcd.c: 57:     SPI_Exchange8bit(data);
  4026     0FAC  0020               	movlb	0	; select bank0
  4027     0FAD  0821               	movf	LCD_WriteIOExpander@data,w
  4028     0FAE  318F  277C  318F   	fcall	_SPI_Exchange8bit
  4029     0FB1                     l1500:
  4030                           
  4031                           ;lcd.c: 58:     LATAbits.LATA2 = 1;
  4032     0FB1  0022               	movlb	2	; select bank2
  4033     0FB2  150C               	bsf	12,2	;volatile
  4034     0FB3                     l142:
  4035     0FB3  0008               	return
  4036     0FB4                     __end_of_LCD_WriteIOExpander:
  4037                           
  4038                           	psect	text21
  4039     0F7C                     __ptext21:	
  4040 ;; *************** function _SPI_Exchange8bit *****************
  4041 ;; Defined at:
  4042 ;;		line 66 in file "spi.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  data            1    wreg     unsigned char 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  data            1    0[BANK0 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      unsigned char 
  4049 ;; Registers used:
  4050 ;;		wreg
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        1 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: unknown (due to recursion)
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_LCD_WriteIOExpander
  4067 ;;		_SPI_Exchange8bitBuffer
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071     0F7C                     _SPI_Exchange8bit:	
  4072                           ;psect for function _SPI_Exchange8bit
  4073                           
  4074                           
  4075                           ;incstack = 0
  4076                           ; Regs used in _SPI_Exchange8bit: [wreg]
  4077                           ;SPI_Exchange8bit@data stored from wreg
  4078     0F7C  0020               	movlb	0	; select bank0
  4079     0F7D  00A0               	movwf	SPI_Exchange8bit@data
  4080     0F7E                     l1488:
  4081                           
  4082                           ;spi.c: 66: char SPI_Exchange8bit(char data);spi.c: 67: {;spi.c: 69:     SSP1CON1bits.WC
      +                          OL = 0;
  4083     0F7E  0024               	movlb	4	; select bank4
  4084     0F7F  1395               	bcf	21,7	;volatile
  4085     0F80                     l1490:
  4086                           
  4087                           ;spi.c: 71:     SSP1BUF = data;
  4088     0F80  0020               	movlb	0	; select bank0
  4089     0F81  0820               	movf	SPI_Exchange8bit@data,w
  4090     0F82  0024               	movlb	4	; select bank4
  4091     0F83  0091               	movwf	17	;volatile
  4092                           
  4093                           ;spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  4094     0F84  2F86               	goto	l198
  4095     0F85                     l199:
  4096     0F85  0064               	clrwdt	;# 
  4097     0F86                     l198:	
  4098                           ;spi.c: 76:     }
  4099                           
  4100                           
  4101                           ;spi.c: 73:     while(SSP1STATbits.BF == 0x0)
  4102     0F86  0024               	movlb	4	; select bank4
  4103     0F87  1C14               	btfss	20,0	;volatile
  4104     0F88  2F8A               	goto	u1181
  4105     0F89  2F8B               	goto	u1180
  4106     0F8A                     u1181:
  4107     0F8A  2F85               	goto	l199
  4108     0F8B                     u1180:
  4109     0F8B                     l1492:
  4110                           
  4111                           ;spi.c: 78:     return (SSP1BUF);
  4112     0F8B  0811               	movf	17,w	;volatile
  4113     0F8C                     l201:
  4114     0F8C  0008               	return
  4115     0F8D                     __end_of_SPI_Exchange8bit:
  4116                           
  4117                           	psect	text22
  4118     0F6D                     __ptext22:	
  4119 ;; *************** function _ad_read *****************
  4120 ;; Defined at:
  4121 ;;		line 140 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2    0[BANK0 ] int 
  4128 ;; Registers used:
  4129 ;;		wreg
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4139 ;;Total ram usage:        4 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: unknown (due to recursion)
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149     0F6D                     _ad_read:	
  4150                           ;psect for function _ad_read
  4151                           
  4152     0F6D                     l1838:	
  4153                           ;incstack = 0
  4154                           ; Regs used in _ad_read: [wreg]
  4155                           
  4156                           
  4157                           ;main.c: 141:     ADCON0bits.ADGO = 1;
  4158     0F6D  0021               	movlb	1	; select bank1
  4159     0F6E  149D               	bsf	29,1	;volatile
  4160     0F6F                     l103:	
  4161                           ;main.c: 142:     while(ADCON0bits.ADGO);
  4162                           
  4163     0F6F  189D               	btfsc	29,1	;volatile
  4164     0F70  2F72               	goto	u1651
  4165     0F71  2F73               	goto	u1650
  4166     0F72                     u1651:
  4167     0F72  2F6F               	goto	l103
  4168     0F73                     u1650:
  4169     0F73                     l1840:
  4170                           
  4171                           ;main.c: 143:     return ADRESH;
  4172     0F73  081C               	movf	28,w	;volatile
  4173     0F74  0020               	movlb	0	; select bank0
  4174     0F75  00A2               	movwf	??_ad_read
  4175     0F76  01A3               	clrf	??_ad_read+1
  4176     0F77  0822               	movf	??_ad_read,w
  4177     0F78  00A0               	movwf	?_ad_read
  4178     0F79  0823               	movf	??_ad_read+1,w
  4179     0F7A  00A1               	movwf	?_ad_read+1
  4180     0F7B                     l106:
  4181     0F7B  0008               	return
  4182     0F7C                     __end_of_ad_read:
  4183                           
  4184                           	psect	text23
  4185     03E8                     __ptext23:	
  4186 ;; *************** function ___xxtofl *****************
  4187 ;; Defined at:
  4188 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  sign            1    wreg     unsigned char 
  4191 ;;  val             4    0[BANK0 ] long 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  sign            1    8[BANK0 ] unsigned char 
  4194 ;;  arg             4   10[BANK0 ] unsigned long 
  4195 ;;  exp             1    9[BANK0 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  4    0[BANK0 ] unsigned char 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4206 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4208 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:       14 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: unknown (due to recursion)
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219     03E8                     ___xxtofl:	
  4220                           ;psect for function ___xxtofl
  4221                           
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4225                           ;___xxtofl@sign stored from wreg
  4226     03E8  0020               	movlb	0	; select bank0
  4227     03E9  00A8               	movwf	___xxtofl@sign
  4228     03EA                     l2020:
  4229     03EA  0828               	movf	___xxtofl@sign,w
  4230     03EB  1903               	btfsc	3,2
  4231     03EC  2BEE               	goto	u2051
  4232     03ED  2BEF               	goto	u2050
  4233     03EE                     u2051:
  4234     03EE  2C03               	goto	l2026
  4235     03EF                     u2050:
  4236     03EF                     l2022:
  4237     03EF  1FA3               	btfss	___xxtofl@val+3,7
  4238     03F0  2BF2               	goto	u2061
  4239     03F1  2BF3               	goto	u2060
  4240     03F2                     u2061:
  4241     03F2  2C03               	goto	l2026
  4242     03F3                     u2060:
  4243     03F3                     l2024:
  4244     03F3  0920               	comf	___xxtofl@val,w
  4245     03F4  00AA               	movwf	___xxtofl@arg
  4246     03F5  0921               	comf	___xxtofl@val+1,w
  4247     03F6  00AB               	movwf	___xxtofl@arg+1
  4248     03F7  0922               	comf	___xxtofl@val+2,w
  4249     03F8  00AC               	movwf	___xxtofl@arg+2
  4250     03F9  0923               	comf	___xxtofl@val+3,w
  4251     03FA  00AD               	movwf	___xxtofl@arg+3
  4252     03FB  0AAA               	incf	___xxtofl@arg,f
  4253     03FC  1903               	skipnz
  4254     03FD  0AAB               	incf	___xxtofl@arg+1,f
  4255     03FE  1903               	skipnz
  4256     03FF  0AAC               	incf	___xxtofl@arg+2,f
  4257     0400  1903               	skipnz
  4258     0401  0AAD               	incf	___xxtofl@arg+3,f
  4259     0402  2C0B               	goto	l734
  4260     0403                     l2026:
  4261     0403  0823               	movf	___xxtofl@val+3,w
  4262     0404  00AD               	movwf	___xxtofl@arg+3
  4263     0405  0822               	movf	___xxtofl@val+2,w
  4264     0406  00AC               	movwf	___xxtofl@arg+2
  4265     0407  0821               	movf	___xxtofl@val+1,w
  4266     0408  00AB               	movwf	___xxtofl@arg+1
  4267     0409  0820               	movf	___xxtofl@val,w
  4268     040A  00AA               	movwf	___xxtofl@arg
  4269     040B                     l734:
  4270     040B  0823               	movf	___xxtofl@val+3,w
  4271     040C  0422               	iorwf	___xxtofl@val+2,w
  4272     040D  0421               	iorwf	___xxtofl@val+1,w
  4273     040E  0420               	iorwf	___xxtofl@val,w
  4274     040F  1D03               	skipz
  4275     0410  2C12               	goto	u2071
  4276     0411  2C13               	goto	u2070
  4277     0412                     u2071:
  4278     0412  2C1C               	goto	l2032
  4279     0413                     u2070:
  4280     0413                     l2028:
  4281     0413  3000               	movlw	0
  4282     0414  00A3               	movwf	?___xxtofl+3
  4283     0415  3000               	movlw	0
  4284     0416  00A2               	movwf	?___xxtofl+2
  4285     0417  3000               	movlw	0
  4286     0418  00A1               	movwf	?___xxtofl+1
  4287     0419  3000               	movlw	0
  4288     041A  00A0               	movwf	?___xxtofl
  4289     041B  2C92               	goto	l736
  4290     041C                     l2032:
  4291     041C  3096               	movlw	150
  4292     041D  00A9               	movwf	___xxtofl@exp
  4293     041E  2C2A               	goto	l2036
  4294     041F                     l2034:
  4295     041F  3001               	movlw	1
  4296     0420  00A4               	movwf	??___xxtofl
  4297     0421  0824               	movf	??___xxtofl,w
  4298     0422  07A9               	addwf	___xxtofl@exp,f
  4299     0423  3001               	movlw	1
  4300     0424                     u2085:
  4301     0424  36AD               	lsrf	___xxtofl@arg+3,f
  4302     0425  0CAC               	rrf	___xxtofl@arg+2,f
  4303     0426  0CAB               	rrf	___xxtofl@arg+1,f
  4304     0427  0CAA               	rrf	___xxtofl@arg,f
  4305     0428  0B89               	decfsz	9,f
  4306     0429  2C24               	goto	u2085
  4307     042A                     l2036:
  4308     042A  30FE               	movlw	254
  4309     042B  052D               	andwf	___xxtofl@arg+3,w
  4310     042C  1D03               	btfss	3,2
  4311     042D  2C2F               	goto	u2091
  4312     042E  2C30               	goto	u2090
  4313     042F                     u2091:
  4314     042F  2C1F               	goto	l2034
  4315     0430                     u2090:
  4316     0430  2C44               	goto	l740
  4317     0431                     l2038:
  4318     0431  3001               	movlw	1
  4319     0432  00A4               	movwf	??___xxtofl
  4320     0433  0824               	movf	??___xxtofl,w
  4321     0434  07A9               	addwf	___xxtofl@exp,f
  4322     0435                     l2040:
  4323     0435  3001               	movlw	1
  4324     0436  07AA               	addwf	___xxtofl@arg,f
  4325     0437  3000               	movlw	0
  4326     0438  3DAB               	addwfc	___xxtofl@arg+1,f
  4327     0439  3000               	movlw	0
  4328     043A  3DAC               	addwfc	___xxtofl@arg+2,f
  4329     043B  3000               	movlw	0
  4330     043C  3DAD               	addwfc	___xxtofl@arg+3,f
  4331     043D                     l2042:
  4332     043D  3001               	movlw	1
  4333     043E                     u2105:
  4334     043E  36AD               	lsrf	___xxtofl@arg+3,f
  4335     043F  0CAC               	rrf	___xxtofl@arg+2,f
  4336     0440  0CAB               	rrf	___xxtofl@arg+1,f
  4337     0441  0CAA               	rrf	___xxtofl@arg,f
  4338     0442  0B89               	decfsz	9,f
  4339     0443  2C3E               	goto	u2105
  4340     0444                     l740:
  4341     0444  30FF               	movlw	255
  4342     0445  052D               	andwf	___xxtofl@arg+3,w
  4343     0446  1D03               	btfss	3,2
  4344     0447  2C49               	goto	u2111
  4345     0448  2C4A               	goto	u2110
  4346     0449                     u2111:
  4347     0449  2C31               	goto	l2038
  4348     044A                     u2110:
  4349     044A  2C54               	goto	l2046
  4350     044B                     l2044:
  4351     044B  3001               	movlw	1
  4352     044C  02A9               	subwf	___xxtofl@exp,f
  4353     044D  3001               	movlw	1
  4354     044E                     u2125:
  4355     044E  35AA               	lslf	___xxtofl@arg,f
  4356     044F  0DAB               	rlf	___xxtofl@arg+1,f
  4357     0450  0DAC               	rlf	___xxtofl@arg+2,f
  4358     0451  0DAD               	rlf	___xxtofl@arg+3,f
  4359     0452  0B89               	decfsz	9,f
  4360     0453  2C4E               	goto	u2125
  4361     0454                     l2046:
  4362     0454  1BAC               	btfsc	___xxtofl@arg+2,7
  4363     0455  2C57               	goto	u2131
  4364     0456  2C58               	goto	u2130
  4365     0457                     u2131:
  4366     0457  2C5E               	goto	l747
  4367     0458                     u2130:
  4368     0458                     l2048:
  4369     0458  3002               	movlw	2
  4370     0459  0229               	subwf	___xxtofl@exp,w
  4371     045A  1803               	skipnc
  4372     045B  2C5D               	goto	u2141
  4373     045C  2C5E               	goto	u2140
  4374     045D                     u2141:
  4375     045D  2C4B               	goto	l2044
  4376     045E                     u2140:
  4377     045E                     l747:
  4378     045E  1829               	btfsc	___xxtofl@exp,0
  4379     045F  2C61               	goto	u2151
  4380     0460  2C62               	goto	u2150
  4381     0461                     u2151:
  4382     0461  2C6A               	goto	l748
  4383     0462                     u2150:
  4384     0462                     l2050:
  4385     0462  30FF               	movlw	255
  4386     0463  05AA               	andwf	___xxtofl@arg,f
  4387     0464  30FF               	movlw	255
  4388     0465  05AB               	andwf	___xxtofl@arg+1,f
  4389     0466  307F               	movlw	127
  4390     0467  05AC               	andwf	___xxtofl@arg+2,f
  4391     0468  30FF               	movlw	255
  4392     0469  05AD               	andwf	___xxtofl@arg+3,f
  4393     046A                     l748:
  4394     046A  1003               	clrc
  4395     046B  0CA9               	rrf	___xxtofl@exp,f
  4396     046C                     l2052:
  4397     046C  0829               	movf	___xxtofl@exp,w
  4398     046D  00A4               	movwf	??___xxtofl
  4399     046E  01A5               	clrf	??___xxtofl+1
  4400     046F  01A6               	clrf	??___xxtofl+2
  4401     0470  01A7               	clrf	??___xxtofl+3
  4402     0471  3018               	movlw	24
  4403     0472                     u2165:
  4404     0472  35A4               	lslf	??___xxtofl,f
  4405     0473  0DA5               	rlf	??___xxtofl+1,f
  4406     0474  0DA6               	rlf	??___xxtofl+2,f
  4407     0475  0DA7               	rlf	??___xxtofl+3,f
  4408     0476                     u2160:
  4409     0476  0B89               	decfsz	9,f
  4410     0477  2C72               	goto	u2165
  4411     0478  0824               	movf	??___xxtofl,w
  4412     0479  04AA               	iorwf	___xxtofl@arg,f
  4413     047A  0825               	movf	??___xxtofl+1,w
  4414     047B  04AB               	iorwf	___xxtofl@arg+1,f
  4415     047C  0826               	movf	??___xxtofl+2,w
  4416     047D  04AC               	iorwf	___xxtofl@arg+2,f
  4417     047E  0827               	movf	??___xxtofl+3,w
  4418     047F  04AD               	iorwf	___xxtofl@arg+3,f
  4419     0480                     l2054:
  4420     0480  0828               	movf	___xxtofl@sign,w
  4421     0481  1903               	btfsc	3,2
  4422     0482  2C84               	goto	u2171
  4423     0483  2C85               	goto	u2170
  4424     0484                     u2171:
  4425     0484  2C8A               	goto	l2060
  4426     0485                     u2170:
  4427     0485                     l2056:
  4428     0485  1FA3               	btfss	___xxtofl@val+3,7
  4429     0486  2C88               	goto	u2181
  4430     0487  2C89               	goto	u2180
  4431     0488                     u2181:
  4432     0488  2C8A               	goto	l2060
  4433     0489                     u2180:
  4434     0489                     l2058:
  4435     0489  17AD               	bsf	___xxtofl@arg+3,7
  4436     048A                     l2060:
  4437     048A  082D               	movf	___xxtofl@arg+3,w
  4438     048B  00A3               	movwf	?___xxtofl+3
  4439     048C  082C               	movf	___xxtofl@arg+2,w
  4440     048D  00A2               	movwf	?___xxtofl+2
  4441     048E  082B               	movf	___xxtofl@arg+1,w
  4442     048F  00A1               	movwf	?___xxtofl+1
  4443     0490  082A               	movf	___xxtofl@arg,w
  4444     0491  00A0               	movwf	?___xxtofl
  4445     0492                     l736:
  4446     0492  0008               	return
  4447     0493                     __end_of___xxtofl:
  4448                           
  4449                           	psect	text24
  4450     0512                     __ptext24:	
  4451 ;; *************** function ___fltol *****************
  4452 ;; Defined at:
  4453 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  f1              4   40[BANK0 ] unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  exp1            1   49[BANK0 ] unsigned char 
  4458 ;;  sign1           1   48[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  4   40[BANK0 ] long 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4471 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:       10 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: unknown (due to recursion)
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0512                     ___fltol:	
  4483                           ;psect for function ___fltol
  4484                           
  4485     0512                     l1844:	
  4486                           ;incstack = 0
  4487                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4488                           
  4489     0512  1003               	clrc
  4490     0513  0020               	movlb	0	; select bank0
  4491     0514  0D4A               	rlf	___fltol@f1+2,w
  4492     0515  0D4B               	rlf	___fltol@f1+3,w
  4493     0516  00D1               	movwf	___fltol@exp1
  4494     0517  0851               	movf	___fltol@exp1,w
  4495     0518  1D03               	btfss	3,2
  4496     0519  2D1B               	goto	u1661
  4497     051A  2D1C               	goto	u1660
  4498     051B                     u1661:
  4499     051B  2D25               	goto	l1850
  4500     051C                     u1660:
  4501     051C                     l1846:
  4502     051C  3000               	movlw	0
  4503     051D  00CB               	movwf	?___fltol+3
  4504     051E  3000               	movlw	0
  4505     051F  00CA               	movwf	?___fltol+2
  4506     0520  3000               	movlw	0
  4507     0521  00C9               	movwf	?___fltol+1
  4508     0522  3000               	movlw	0
  4509     0523  00C8               	movwf	?___fltol
  4510     0524  2D82               	goto	l487
  4511     0525                     l1850:
  4512     0525  0848               	movf	___fltol@f1,w
  4513     0526  00CC               	movwf	??___fltol
  4514     0527  0849               	movf	___fltol@f1+1,w
  4515     0528  00CD               	movwf	??___fltol+1
  4516     0529  084A               	movf	___fltol@f1+2,w
  4517     052A  00CE               	movwf	??___fltol+2
  4518     052B  084B               	movf	___fltol@f1+3,w
  4519     052C  00CF               	movwf	??___fltol+3
  4520     052D  301F               	movlw	31
  4521     052E                     u1675:
  4522     052E  36CF               	lsrf	??___fltol+3,f
  4523     052F  0CCE               	rrf	??___fltol+2,f
  4524     0530  0CCD               	rrf	??___fltol+1,f
  4525     0531  0CCC               	rrf	??___fltol,f
  4526     0532                     u1670:
  4527     0532  0B89               	decfsz	9,f
  4528     0533  2D2E               	goto	u1675
  4529     0534  084C               	movf	??___fltol,w
  4530     0535  00D0               	movwf	___fltol@sign1
  4531     0536                     l1852:
  4532     0536  17CA               	bsf	___fltol@f1+2,7
  4533     0537                     l1854:
  4534     0537  30FF               	movlw	255
  4535     0538  05C8               	andwf	___fltol@f1,f
  4536     0539  30FF               	movlw	255
  4537     053A  05C9               	andwf	___fltol@f1+1,f
  4538     053B  30FF               	movlw	255
  4539     053C  05CA               	andwf	___fltol@f1+2,f
  4540     053D  3000               	movlw	0
  4541     053E  05CB               	andwf	___fltol@f1+3,f
  4542     053F                     l1856:
  4543     053F  3096               	movlw	150
  4544     0540  02D1               	subwf	___fltol@exp1,f
  4545     0541                     l1858:
  4546     0541  1FD1               	btfss	___fltol@exp1,7
  4547     0542  2D44               	goto	u1681
  4548     0543  2D45               	goto	u1680
  4549     0544                     u1681:
  4550     0544  2D5D               	goto	l1868
  4551     0545                     u1680:
  4552     0545                     l1860:
  4553     0545  0851               	movf	___fltol@exp1,w
  4554     0546  3A80               	xorlw	128
  4555     0547  3E97               	addlw	151
  4556     0548  1803               	skipnc
  4557     0549  2D4B               	goto	u1691
  4558     054A  2D4C               	goto	u1690
  4559     054B                     u1691:
  4560     054B  2D4D               	goto	l1866
  4561     054C                     u1690:
  4562     054C  2D1C               	goto	l1846
  4563     054D                     l1866:
  4564     054D  3001               	movlw	1
  4565     054E                     u1705:
  4566     054E  36CB               	lsrf	___fltol@f1+3,f
  4567     054F  0CCA               	rrf	___fltol@f1+2,f
  4568     0550  0CC9               	rrf	___fltol@f1+1,f
  4569     0551  0CC8               	rrf	___fltol@f1,f
  4570     0552  0B89               	decfsz	9,f
  4571     0553  2D4E               	goto	u1705
  4572     0554  3001               	movlw	1
  4573     0555  00CC               	movwf	??___fltol
  4574     0556  084C               	movf	??___fltol,w
  4575     0557  07D1               	addwf	___fltol@exp1,f
  4576     0558  1D03               	btfss	3,2
  4577     0559  2D5B               	goto	u1711
  4578     055A  2D5C               	goto	u1710
  4579     055B                     u1711:
  4580     055B  2D4D               	goto	l1866
  4581     055C                     u1710:
  4582     055C  2D72               	goto	l1876
  4583     055D                     l1868:
  4584     055D  3020               	movlw	32
  4585     055E  0251               	subwf	___fltol@exp1,w
  4586     055F  1C03               	skipc
  4587     0560  2D62               	goto	u1721
  4588     0561  2D63               	goto	u1720
  4589     0562                     u1721:
  4590     0562  2D6D               	goto	l494
  4591     0563                     u1720:
  4592     0563  2D1C               	goto	l1846
  4593     0564                     l1874:
  4594     0564  3001               	movlw	1
  4595     0565                     u1735:
  4596     0565  35C8               	lslf	___fltol@f1,f
  4597     0566  0DC9               	rlf	___fltol@f1+1,f
  4598     0567  0DCA               	rlf	___fltol@f1+2,f
  4599     0568  0DCB               	rlf	___fltol@f1+3,f
  4600     0569  0B89               	decfsz	9,f
  4601     056A  2D65               	goto	u1735
  4602     056B  3001               	movlw	1
  4603     056C  02D1               	subwf	___fltol@exp1,f
  4604     056D                     l494:
  4605     056D  0851               	movf	___fltol@exp1,w
  4606     056E  1D03               	btfss	3,2
  4607     056F  2D71               	goto	u1741
  4608     0570  2D72               	goto	u1740
  4609     0571                     u1741:
  4610     0571  2D64               	goto	l1874
  4611     0572                     u1740:
  4612     0572                     l1876:
  4613     0572  0850               	movf	___fltol@sign1,w
  4614     0573  1903               	btfsc	3,2
  4615     0574  2D76               	goto	u1751
  4616     0575  2D77               	goto	u1750
  4617     0576                     u1751:
  4618     0576  2D82               	goto	l497
  4619     0577                     u1750:
  4620     0577                     l1878:
  4621     0577  09C8               	comf	___fltol@f1,f
  4622     0578  09C9               	comf	___fltol@f1+1,f
  4623     0579  09CA               	comf	___fltol@f1+2,f
  4624     057A  09CB               	comf	___fltol@f1+3,f
  4625     057B  0AC8               	incf	___fltol@f1,f
  4626     057C  1903               	skipnz
  4627     057D  0AC9               	incf	___fltol@f1+1,f
  4628     057E  1903               	skipnz
  4629     057F  0ACA               	incf	___fltol@f1+2,f
  4630     0580  1903               	skipnz
  4631     0581  0ACB               	incf	___fltol@f1+3,f
  4632     0582                     l497:
  4633     0582                     l487:
  4634     0582  0008               	return
  4635     0583                     __end_of___fltol:
  4636                           
  4637                           	psect	text25
  4638     006F                     __ptext25:	
  4639 ;; *************** function ___fldiv *****************
  4640 ;; Defined at:
  4641 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  a               4   14[BANK0 ] long 
  4644 ;;  b               4   18[BANK0 ] long 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  grs             4   34[BANK0 ] unsigned long 
  4647 ;;  rem             4   27[BANK0 ] unsigned long 
  4648 ;;  new_exp         2   32[BANK0 ] short 
  4649 ;;  aexp            1   39[BANK0 ] unsigned char 
  4650 ;;  bexp            1   38[BANK0 ] unsigned char 
  4651 ;;  sign            1   31[BANK0 ] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  4   14[BANK0 ] unsigned char 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4661 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4662 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4663 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4664 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4665 ;;Total ram usage:       26 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: unknown (due to recursion)
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675     006F                     ___fldiv:	
  4676                           ;psect for function ___fldiv
  4677                           
  4678     006F                     l1880:	
  4679                           ;incstack = 0
  4680                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  4681                           
  4682     006F  0020               	movlb	0	; select bank0
  4683     0070  0835               	movf	___fldiv@b+3,w
  4684     0071  3980               	andlw	128
  4685     0072  00BF               	movwf	___fldiv@sign
  4686     0073                     l1882:
  4687     0073  3535               	lslf	___fldiv@b+3,w
  4688     0074  00C6               	movwf	___fldiv@bexp
  4689     0075                     l1884:
  4690     0075  1FB4               	btfss	___fldiv@b+2,7
  4691     0076  2878               	goto	u1761
  4692     0077  2879               	goto	u1760
  4693     0078                     u1761:
  4694     0078  287A               	goto	l1888
  4695     0079                     u1760:
  4696     0079                     l1886:
  4697     0079  1446               	bsf	___fldiv@bexp,0
  4698     007A                     l1888:
  4699     007A  0846               	movf	___fldiv@bexp,w
  4700     007B  1903               	btfsc	3,2
  4701     007C  287E               	goto	u1771
  4702     007D  287F               	goto	u1770
  4703     007E                     u1771:
  4704     007E  288F               	goto	l1898
  4705     007F                     u1770:
  4706     007F                     l1890:
  4707     007F  0A46               	incf	___fldiv@bexp,w
  4708     0080  1D03               	btfss	3,2
  4709     0081  2883               	goto	u1781
  4710     0082  2884               	goto	u1780
  4711     0083                     u1781:
  4712     0083  288C               	goto	l1894
  4713     0084                     u1780:
  4714     0084                     l1892:
  4715     0084  3000               	movlw	0
  4716     0085  00B5               	movwf	___fldiv@b+3
  4717     0086  3000               	movlw	0
  4718     0087  00B4               	movwf	___fldiv@b+2
  4719     0088  3000               	movlw	0
  4720     0089  00B3               	movwf	___fldiv@b+1
  4721     008A  3000               	movlw	0
  4722     008B  00B2               	movwf	___fldiv@b
  4723     008C                     l1894:
  4724     008C  17B4               	bsf	___fldiv@b+2,7
  4725     008D                     l1896:
  4726     008D  01B5               	clrf	___fldiv@b+3
  4727     008E  2897               	goto	l1900
  4728     008F                     l1898:
  4729     008F  3000               	movlw	0
  4730     0090  00B5               	movwf	___fldiv@b+3
  4731     0091  3000               	movlw	0
  4732     0092  00B4               	movwf	___fldiv@b+2
  4733     0093  3000               	movlw	0
  4734     0094  00B3               	movwf	___fldiv@b+1
  4735     0095  3000               	movlw	0
  4736     0096  00B2               	movwf	___fldiv@b
  4737     0097                     l1900:
  4738     0097  0831               	movf	___fldiv@a+3,w
  4739     0098  3980               	andlw	128
  4740     0099  00B6               	movwf	??___fldiv
  4741     009A  0836               	movf	??___fldiv,w
  4742     009B  06BF               	xorwf	___fldiv@sign,f
  4743     009C                     l1902:
  4744     009C  3531               	lslf	___fldiv@a+3,w
  4745     009D  00C7               	movwf	___fldiv@aexp
  4746     009E                     l1904:
  4747     009E  1FB0               	btfss	___fldiv@a+2,7
  4748     009F  28A1               	goto	u1791
  4749     00A0  28A2               	goto	u1790
  4750     00A1                     u1791:
  4751     00A1  28A3               	goto	l1908
  4752     00A2                     u1790:
  4753     00A2                     l1906:
  4754     00A2  1447               	bsf	___fldiv@aexp,0
  4755     00A3                     l1908:
  4756     00A3  0847               	movf	___fldiv@aexp,w
  4757     00A4  1903               	btfsc	3,2
  4758     00A5  28A7               	goto	u1801
  4759     00A6  28A8               	goto	u1800
  4760     00A7                     u1801:
  4761     00A7  28B8               	goto	l1918
  4762     00A8                     u1800:
  4763     00A8                     l1910:
  4764     00A8  0A47               	incf	___fldiv@aexp,w
  4765     00A9  1D03               	btfss	3,2
  4766     00AA  28AC               	goto	u1811
  4767     00AB  28AD               	goto	u1810
  4768     00AC                     u1811:
  4769     00AC  28B5               	goto	l1914
  4770     00AD                     u1810:
  4771     00AD                     l1912:
  4772     00AD  3000               	movlw	0
  4773     00AE  00B1               	movwf	___fldiv@a+3
  4774     00AF  3000               	movlw	0
  4775     00B0  00B0               	movwf	___fldiv@a+2
  4776     00B1  3000               	movlw	0
  4777     00B2  00AF               	movwf	___fldiv@a+1
  4778     00B3  3000               	movlw	0
  4779     00B4  00AE               	movwf	___fldiv@a
  4780     00B5                     l1914:
  4781     00B5  17B0               	bsf	___fldiv@a+2,7
  4782     00B6                     l1916:
  4783     00B6  01B1               	clrf	___fldiv@a+3
  4784     00B7  28C0               	goto	l650
  4785     00B8                     l1918:
  4786     00B8  3000               	movlw	0
  4787     00B9  00B1               	movwf	___fldiv@a+3
  4788     00BA  3000               	movlw	0
  4789     00BB  00B0               	movwf	___fldiv@a+2
  4790     00BC  3000               	movlw	0
  4791     00BD  00AF               	movwf	___fldiv@a+1
  4792     00BE  3000               	movlw	0
  4793     00BF  00AE               	movwf	___fldiv@a
  4794     00C0                     l650:
  4795     00C0  0831               	movf	___fldiv@a+3,w
  4796     00C1  0430               	iorwf	___fldiv@a+2,w
  4797     00C2  042F               	iorwf	___fldiv@a+1,w
  4798     00C3  042E               	iorwf	___fldiv@a,w
  4799     00C4  1D03               	skipz
  4800     00C5  28C7               	goto	u1821
  4801     00C6  28C8               	goto	u1820
  4802     00C7                     u1821:
  4803     00C7  28E1               	goto	l1928
  4804     00C8                     u1820:
  4805     00C8                     l1920:
  4806     00C8  3000               	movlw	0
  4807     00C9  00B5               	movwf	___fldiv@b+3
  4808     00CA  3000               	movlw	0
  4809     00CB  00B4               	movwf	___fldiv@b+2
  4810     00CC  3000               	movlw	0
  4811     00CD  00B3               	movwf	___fldiv@b+1
  4812     00CE  3000               	movlw	0
  4813     00CF  00B2               	movwf	___fldiv@b
  4814     00D0  3080               	movlw	128
  4815     00D1  04B4               	iorwf	___fldiv@b+2,f
  4816     00D2  307F               	movlw	127
  4817     00D3  04B5               	iorwf	___fldiv@b+3,f
  4818     00D4                     l1922:
  4819     00D4  083F               	movf	___fldiv@sign,w
  4820     00D5  00B6               	movwf	??___fldiv
  4821     00D6  0836               	movf	??___fldiv,w
  4822     00D7  04B5               	iorwf	___fldiv@b+3,f
  4823     00D8                     l1924:
  4824     00D8  0835               	movf	___fldiv@b+3,w
  4825     00D9  00B1               	movwf	?___fldiv+3
  4826     00DA  0834               	movf	___fldiv@b+2,w
  4827     00DB  00B0               	movwf	?___fldiv+2
  4828     00DC  0833               	movf	___fldiv@b+1,w
  4829     00DD  00AF               	movwf	?___fldiv+1
  4830     00DE  0832               	movf	___fldiv@b,w
  4831     00DF  00AE               	movwf	?___fldiv
  4832     00E0  2A18               	goto	l652
  4833     00E1                     l1928:
  4834     00E1  0846               	movf	___fldiv@bexp,w
  4835     00E2  1D03               	btfss	3,2
  4836     00E3  28E5               	goto	u1831
  4837     00E4  28E6               	goto	u1830
  4838     00E5                     u1831:
  4839     00E5  28EF               	goto	l1934
  4840     00E6                     u1830:
  4841     00E6                     l1930:
  4842     00E6  3000               	movlw	0
  4843     00E7  00B1               	movwf	?___fldiv+3
  4844     00E8  3000               	movlw	0
  4845     00E9  00B0               	movwf	?___fldiv+2
  4846     00EA  3000               	movlw	0
  4847     00EB  00AF               	movwf	?___fldiv+1
  4848     00EC  3000               	movlw	0
  4849     00ED  00AE               	movwf	?___fldiv
  4850     00EE  2A18               	goto	l652
  4851     00EF                     l1934:
  4852     00EF  0846               	movf	___fldiv@bexp,w
  4853     00F0  00B6               	movwf	??___fldiv
  4854     00F1  01B7               	clrf	??___fldiv+1
  4855     00F2  0837               	movf	??___fldiv+1,w
  4856     00F3  00B9               	movwf	??___fldiv+3
  4857     00F4  0847               	movf	___fldiv@aexp,w
  4858     00F5  0236               	subwf	??___fldiv,w
  4859     00F6  00B8               	movwf	??___fldiv+2
  4860     00F7  1C03               	skipc
  4861     00F8  03B9               	decf	??___fldiv+3,f
  4862     00F9  0838               	movf	??___fldiv+2,w
  4863     00FA  3E7F               	addlw	127
  4864     00FB  00C0               	movwf	___fldiv@new_exp
  4865     00FC  3000               	movlw	0
  4866     00FD  3D39               	addwfc	??___fldiv+3,w
  4867     00FE  00C1               	movwf	___fldiv@new_exp+1
  4868     00FF                     l1936:
  4869     00FF  0835               	movf	___fldiv@b+3,w
  4870     0100  00BE               	movwf	___fldiv@rem+3
  4871     0101  0834               	movf	___fldiv@b+2,w
  4872     0102  00BD               	movwf	___fldiv@rem+2
  4873     0103  0833               	movf	___fldiv@b+1,w
  4874     0104  00BC               	movwf	___fldiv@rem+1
  4875     0105  0832               	movf	___fldiv@b,w
  4876     0106  00BB               	movwf	___fldiv@rem
  4877     0107                     l1938:
  4878     0107  3000               	movlw	0
  4879     0108  00B5               	movwf	___fldiv@b+3
  4880     0109  3000               	movlw	0
  4881     010A  00B4               	movwf	___fldiv@b+2
  4882     010B  3000               	movlw	0
  4883     010C  00B3               	movwf	___fldiv@b+1
  4884     010D  3000               	movlw	0
  4885     010E  00B2               	movwf	___fldiv@b
  4886     010F                     l1940:
  4887     010F  3000               	movlw	0
  4888     0110  00C5               	movwf	___fldiv@grs+3
  4889     0111  3000               	movlw	0
  4890     0112  00C4               	movwf	___fldiv@grs+2
  4891     0113  3000               	movlw	0
  4892     0114  00C3               	movwf	___fldiv@grs+1
  4893     0115  3000               	movlw	0
  4894     0116  00C2               	movwf	___fldiv@grs
  4895     0117                     l1942:
  4896     0117  01C7               	clrf	___fldiv@aexp
  4897     0118  2957               	goto	l1962
  4898     0119                     l1944:
  4899     0119  0847               	movf	___fldiv@aexp,w
  4900     011A  1903               	btfsc	3,2
  4901     011B  291D               	goto	u1841
  4902     011C  291E               	goto	u1840
  4903     011D                     u1841:
  4904     011D  2938               	goto	l1954
  4905     011E                     u1840:
  4906     011E                     l1946:
  4907     011E  3001               	movlw	1
  4908     011F                     u1855:
  4909     011F  35BB               	lslf	___fldiv@rem,f
  4910     0120  0DBC               	rlf	___fldiv@rem+1,f
  4911     0121  0DBD               	rlf	___fldiv@rem+2,f
  4912     0122  0DBE               	rlf	___fldiv@rem+3,f
  4913     0123  0B89               	decfsz	9,f
  4914     0124  291F               	goto	u1855
  4915     0125  3001               	movlw	1
  4916     0126                     u1865:
  4917     0126  35B2               	lslf	___fldiv@b,f
  4918     0127  0DB3               	rlf	___fldiv@b+1,f
  4919     0128  0DB4               	rlf	___fldiv@b+2,f
  4920     0129  0DB5               	rlf	___fldiv@b+3,f
  4921     012A  0B89               	decfsz	9,f
  4922     012B  2926               	goto	u1865
  4923     012C                     l1948:
  4924     012C  1FC5               	btfss	___fldiv@grs+3,7
  4925     012D  292F               	goto	u1871
  4926     012E  2930               	goto	u1870
  4927     012F                     u1871:
  4928     012F  2931               	goto	l1952
  4929     0130                     u1870:
  4930     0130                     l1950:
  4931     0130  1432               	bsf	___fldiv@b,0
  4932     0131                     l1952:
  4933     0131  3001               	movlw	1
  4934     0132                     u1885:
  4935     0132  35C2               	lslf	___fldiv@grs,f
  4936     0133  0DC3               	rlf	___fldiv@grs+1,f
  4937     0134  0DC4               	rlf	___fldiv@grs+2,f
  4938     0135  0DC5               	rlf	___fldiv@grs+3,f
  4939     0136  0B89               	decfsz	9,f
  4940     0137  2932               	goto	u1885
  4941     0138                     l1954:
  4942     0138  0831               	movf	___fldiv@a+3,w
  4943     0139  023E               	subwf	___fldiv@rem+3,w
  4944     013A  1D03               	skipz
  4945     013B  2946               	goto	u1895
  4946     013C  0830               	movf	___fldiv@a+2,w
  4947     013D  023D               	subwf	___fldiv@rem+2,w
  4948     013E  1D03               	skipz
  4949     013F  2946               	goto	u1895
  4950     0140  082F               	movf	___fldiv@a+1,w
  4951     0141  023C               	subwf	___fldiv@rem+1,w
  4952     0142  1D03               	skipz
  4953     0143  2946               	goto	u1895
  4954     0144  082E               	movf	___fldiv@a,w
  4955     0145  023B               	subwf	___fldiv@rem,w
  4956     0146                     u1895:
  4957     0146  1C03               	skipc
  4958     0147  2949               	goto	u1891
  4959     0148  294A               	goto	u1890
  4960     0149                     u1891:
  4961     0149  2953               	goto	l1960
  4962     014A                     u1890:
  4963     014A                     l1956:
  4964     014A  1745               	bsf	___fldiv@grs+3,6
  4965     014B                     l1958:
  4966     014B  082E               	movf	___fldiv@a,w
  4967     014C  02BB               	subwf	___fldiv@rem,f
  4968     014D  082F               	movf	___fldiv@a+1,w
  4969     014E  3BBC               	subwfb	___fldiv@rem+1,f
  4970     014F  0830               	movf	___fldiv@a+2,w
  4971     0150  3BBD               	subwfb	___fldiv@rem+2,f
  4972     0151  0831               	movf	___fldiv@a+3,w
  4973     0152  3BBE               	subwfb	___fldiv@rem+3,f
  4974     0153                     l1960:
  4975     0153  3001               	movlw	1
  4976     0154  00B6               	movwf	??___fldiv
  4977     0155  0836               	movf	??___fldiv,w
  4978     0156  07C7               	addwf	___fldiv@aexp,f
  4979     0157                     l1962:
  4980     0157  301A               	movlw	26
  4981     0158  0247               	subwf	___fldiv@aexp,w
  4982     0159  1C03               	skipc
  4983     015A  295C               	goto	u1901
  4984     015B  295D               	goto	u1900
  4985     015C                     u1901:
  4986     015C  2919               	goto	l1944
  4987     015D                     u1900:
  4988     015D                     l1964:
  4989     015D  083E               	movf	___fldiv@rem+3,w
  4990     015E  043D               	iorwf	___fldiv@rem+2,w
  4991     015F  043C               	iorwf	___fldiv@rem+1,w
  4992     0160  043B               	iorwf	___fldiv@rem,w
  4993     0161  1903               	skipnz
  4994     0162  2964               	goto	u1911
  4995     0163  2965               	goto	u1910
  4996     0164                     u1911:
  4997     0164  297E               	goto	l1978
  4998     0165                     u1910:
  4999     0165                     l1966:
  5000     0165  1442               	bsf	___fldiv@grs,0
  5001     0166  297E               	goto	l1978
  5002     0167                     l1968:
  5003     0167  3001               	movlw	1
  5004     0168                     u1925:
  5005     0168  35B2               	lslf	___fldiv@b,f
  5006     0169  0DB3               	rlf	___fldiv@b+1,f
  5007     016A  0DB4               	rlf	___fldiv@b+2,f
  5008     016B  0DB5               	rlf	___fldiv@b+3,f
  5009     016C  0B89               	decfsz	9,f
  5010     016D  2968               	goto	u1925
  5011     016E                     l1970:
  5012     016E  1FC5               	btfss	___fldiv@grs+3,7
  5013     016F  2971               	goto	u1931
  5014     0170  2972               	goto	u1930
  5015     0171                     u1931:
  5016     0171  2973               	goto	l1974
  5017     0172                     u1930:
  5018     0172                     l1972:
  5019     0172  1432               	bsf	___fldiv@b,0
  5020     0173                     l1974:
  5021     0173  3001               	movlw	1
  5022     0174                     u1945:
  5023     0174  35C2               	lslf	___fldiv@grs,f
  5024     0175  0DC3               	rlf	___fldiv@grs+1,f
  5025     0176  0DC4               	rlf	___fldiv@grs+2,f
  5026     0177  0DC5               	rlf	___fldiv@grs+3,f
  5027     0178  0B89               	decfsz	9,f
  5028     0179  2974               	goto	u1945
  5029     017A                     l1976:
  5030     017A  30FF               	movlw	255
  5031     017B  07C0               	addwf	___fldiv@new_exp,f
  5032     017C  30FF               	movlw	255
  5033     017D  3DC1               	addwfc	___fldiv@new_exp+1,f
  5034     017E                     l1978:
  5035     017E  1FB4               	btfss	___fldiv@b+2,7
  5036     017F  2981               	goto	u1951
  5037     0180  2982               	goto	u1950
  5038     0181                     u1951:
  5039     0181  2967               	goto	l1968
  5040     0182                     u1950:
  5041     0182                     l1980:
  5042     0182  01C7               	clrf	___fldiv@aexp
  5043     0183                     l1982:
  5044     0183  1FC5               	btfss	___fldiv@grs+3,7
  5045     0184  2986               	goto	u1961
  5046     0185  2987               	goto	u1960
  5047     0186                     u1961:
  5048     0186  29A3               	goto	l1990
  5049     0187                     u1960:
  5050     0187                     l1984:
  5051     0187  30FF               	movlw	255
  5052     0188  0542               	andwf	___fldiv@grs,w
  5053     0189  00B6               	movwf	??___fldiv
  5054     018A  30FF               	movlw	255
  5055     018B  0543               	andwf	___fldiv@grs+1,w
  5056     018C  00B7               	movwf	??___fldiv+1
  5057     018D  30FF               	movlw	255
  5058     018E  0544               	andwf	___fldiv@grs+2,w
  5059     018F  00B8               	movwf	??___fldiv+2
  5060     0190  307F               	movlw	127
  5061     0191  0545               	andwf	___fldiv@grs+3,w
  5062     0192  00B9               	movwf	??___fldiv+3
  5063     0193  0839               	movf	??___fldiv+3,w
  5064     0194  0438               	iorwf	??___fldiv+2,w
  5065     0195  0437               	iorwf	??___fldiv+1,w
  5066     0196  0436               	iorwf	??___fldiv,w
  5067     0197  1903               	skipnz
  5068     0198  299A               	goto	u1971
  5069     0199  299B               	goto	u1970
  5070     019A                     u1971:
  5071     019A  299E               	goto	l666
  5072     019B                     u1970:
  5073     019B                     l1986:
  5074     019B  01C7               	clrf	___fldiv@aexp
  5075     019C  0AC7               	incf	___fldiv@aexp,f
  5076     019D  29A3               	goto	l1990
  5077     019E                     l666:
  5078     019E  1C32               	btfss	___fldiv@b,0
  5079     019F  29A1               	goto	u1981
  5080     01A0  29A2               	goto	u1980
  5081     01A1                     u1981:
  5082     01A1  29A3               	goto	l1990
  5083     01A2                     u1980:
  5084     01A2  299B               	goto	l1986
  5085     01A3                     l1990:
  5086     01A3  0847               	movf	___fldiv@aexp,w
  5087     01A4  1903               	btfsc	3,2
  5088     01A5  29A7               	goto	u1991
  5089     01A6  29A8               	goto	u1990
  5090     01A7                     u1991:
  5091     01A7  29D0               	goto	l2000
  5092     01A8                     u1990:
  5093     01A8                     l1992:
  5094     01A8  3001               	movlw	1
  5095     01A9  07B2               	addwf	___fldiv@b,f
  5096     01AA  3000               	movlw	0
  5097     01AB  3DB3               	addwfc	___fldiv@b+1,f
  5098     01AC  3000               	movlw	0
  5099     01AD  3DB4               	addwfc	___fldiv@b+2,f
  5100     01AE  3000               	movlw	0
  5101     01AF  3DB5               	addwfc	___fldiv@b+3,f
  5102     01B0                     l1994:
  5103     01B0  1C35               	btfss	___fldiv@b+3,0
  5104     01B1  29B3               	goto	u2001
  5105     01B2  29B4               	goto	u2000
  5106     01B3                     u2001:
  5107     01B3  29D0               	goto	l2000
  5108     01B4                     u2000:
  5109     01B4                     l1996:
  5110     01B4  0832               	movf	___fldiv@b,w
  5111     01B5  00B6               	movwf	??___fldiv
  5112     01B6  0833               	movf	___fldiv@b+1,w
  5113     01B7  00B7               	movwf	??___fldiv+1
  5114     01B8  0834               	movf	___fldiv@b+2,w
  5115     01B9  00B8               	movwf	??___fldiv+2
  5116     01BA  0835               	movf	___fldiv@b+3,w
  5117     01BB  00B9               	movwf	??___fldiv+3
  5118     01BC  3001               	movlw	1
  5119     01BD  00BA               	movwf	??___fldiv+4
  5120     01BE                     u2015:
  5121     01BE  37B9               	asrf	??___fldiv+3,f
  5122     01BF  0CB8               	rrf	??___fldiv+2,f
  5123     01C0  0CB7               	rrf	??___fldiv+1,f
  5124     01C1  0CB6               	rrf	??___fldiv,f
  5125     01C2                     u2010:
  5126     01C2  0BBA               	decfsz	??___fldiv+4,f
  5127     01C3  29BE               	goto	u2015
  5128     01C4  0839               	movf	??___fldiv+3,w
  5129     01C5  00B5               	movwf	___fldiv@b+3
  5130     01C6  0838               	movf	??___fldiv+2,w
  5131     01C7  00B4               	movwf	___fldiv@b+2
  5132     01C8  0837               	movf	??___fldiv+1,w
  5133     01C9  00B3               	movwf	___fldiv@b+1
  5134     01CA  0836               	movf	??___fldiv,w
  5135     01CB  00B2               	movwf	___fldiv@b
  5136     01CC                     l1998:
  5137     01CC  3001               	movlw	1
  5138     01CD  07C0               	addwf	___fldiv@new_exp,f
  5139     01CE  3000               	movlw	0
  5140     01CF  3DC1               	addwfc	___fldiv@new_exp+1,f
  5141     01D0                     l2000:
  5142     01D0  0841               	movf	___fldiv@new_exp+1,w
  5143     01D1  3A80               	xorlw	128
  5144     01D2  00B6               	movwf	??___fldiv
  5145     01D3  3080               	movlw	128
  5146     01D4  0236               	subwf	??___fldiv,w
  5147     01D5  1D03               	skipz
  5148     01D6  29D9               	goto	u2025
  5149     01D7  30FF               	movlw	255
  5150     01D8  0240               	subwf	___fldiv@new_exp,w
  5151     01D9                     u2025:
  5152     01D9  1C03               	skipc
  5153     01DA  29DC               	goto	u2021
  5154     01DB  29DD               	goto	u2020
  5155     01DC                     u2021:
  5156     01DC  29EA               	goto	l671
  5157     01DD                     u2020:
  5158     01DD                     l2002:
  5159     01DD  30FF               	movlw	255
  5160     01DE  0020               	movlb	0	; select bank0
  5161     01DF  00C0               	movwf	___fldiv@new_exp
  5162     01E0  3000               	movlw	0
  5163     01E1  00C1               	movwf	___fldiv@new_exp+1
  5164     01E2  3000               	movlw	0
  5165     01E3  00B5               	movwf	___fldiv@b+3
  5166     01E4  3000               	movlw	0
  5167     01E5  00B4               	movwf	___fldiv@b+2
  5168     01E6  3000               	movlw	0
  5169     01E7  00B3               	movwf	___fldiv@b+1
  5170     01E8  3000               	movlw	0
  5171     01E9  00B2               	movwf	___fldiv@b
  5172     01EA                     l671:
  5173     01EA  0020               	movlb	0	; select bank0
  5174     01EB  0841               	movf	___fldiv@new_exp+1,w
  5175     01EC  3A80               	xorlw	128
  5176     01ED  00B6               	movwf	??___fldiv
  5177     01EE  3080               	movlw	128
  5178     01EF  0236               	subwf	??___fldiv,w
  5179     01F0  1D03               	skipz
  5180     01F1  29F4               	goto	u2035
  5181     01F2  3001               	movlw	1
  5182     01F3  0240               	subwf	___fldiv@new_exp,w
  5183     01F4                     u2035:
  5184     01F4  1803               	skipnc
  5185     01F5  29F7               	goto	u2031
  5186     01F6  29F8               	goto	u2030
  5187     01F7                     u2031:
  5188     01F7  2A04               	goto	l672
  5189     01F8                     u2030:
  5190     01F8                     l2004:
  5191     01F8  0020               	movlb	0	; select bank0
  5192     01F9  01C0               	clrf	___fldiv@new_exp
  5193     01FA  01C1               	clrf	___fldiv@new_exp+1
  5194     01FB                     l2006:
  5195     01FB  3000               	movlw	0
  5196     01FC  00B5               	movwf	___fldiv@b+3
  5197     01FD  3000               	movlw	0
  5198     01FE  00B4               	movwf	___fldiv@b+2
  5199     01FF  3000               	movlw	0
  5200     0200  00B3               	movwf	___fldiv@b+1
  5201     0201  3000               	movlw	0
  5202     0202  00B2               	movwf	___fldiv@b
  5203     0203                     l2008:
  5204     0203  01BF               	clrf	___fldiv@sign
  5205     0204                     l672:
  5206     0204  0020               	movlb	0	; select bank0
  5207     0205  0840               	movf	___fldiv@new_exp,w
  5208     0206  00C6               	movwf	___fldiv@bexp
  5209     0207                     l2010:
  5210     0207  1C46               	btfss	___fldiv@bexp,0
  5211     0208  2A0A               	goto	u2041
  5212     0209  2A0B               	goto	u2040
  5213     020A                     u2041:
  5214     020A  2A0D               	goto	l2014
  5215     020B                     u2040:
  5216     020B                     l2012:
  5217     020B  17B4               	bsf	___fldiv@b+2,7
  5218     020C  2A11               	goto	l674
  5219     020D                     l2014:
  5220     020D  307F               	movlw	127
  5221     020E  00B6               	movwf	??___fldiv
  5222     020F  0836               	movf	??___fldiv,w
  5223     0210  05B4               	andwf	___fldiv@b+2,f
  5224     0211                     l674:
  5225     0211  3646               	lsrf	___fldiv@bexp,w
  5226     0212  00B5               	movwf	___fldiv@b+3
  5227     0213  083F               	movf	___fldiv@sign,w
  5228     0214  00B6               	movwf	??___fldiv
  5229     0215  0836               	movf	??___fldiv,w
  5230     0216  04B5               	iorwf	___fldiv@b+3,f
  5231     0217  28D8               	goto	l1924
  5232     0218                     l652:
  5233     0218  0008               	return
  5234     0219                     __end_of___fldiv:
  5235                           
  5236                           	psect	intentry
  5237     0004                     __pintentry:	
  5238 ;; *************** function _isr *****************
  5239 ;; Defined at:
  5240 ;;		line 125 in file "main.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  tmp             1   13[COMMON] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5258 ;;Total ram usage:        3 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: unknown (due to recursion)
  5261 ;; This function calls:
  5262 ;;		_transformCesar
  5263 ;; This function is called by:
  5264 ;;		Interrupt level 1
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268     0004                     _isr:
  5269                           
  5270                           ;incstack = 0
  5271     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5272                           
  5273                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5274     0005  3180               	pagesel	$
  5275     0006                     i1l2064:
  5276                           
  5277                           ;main.c: 127:     char tmp = RC1REG;
  5278     0006  0023               	movlb	3	; select bank3
  5279     0007  0819               	movf	25,w	;volatile
  5280     0008  00FD               	movwf	isr@tmp
  5281                           
  5282                           ;main.c: 130:     if ((int)tmp > 64 && (int)tmp < 91) {
  5283     0009  3041               	movlw	65
  5284     000A  027D               	subwf	isr@tmp,w
  5285     000B  1C03               	skipc
  5286     000C  280E               	goto	u219_21
  5287     000D  280F               	goto	u219_20
  5288     000E                     u219_21:
  5289     000E  2818               	goto	i1l2070
  5290     000F                     u219_20:
  5291     000F                     i1l2066:
  5292     000F  305B               	movlw	91
  5293     0010  027D               	subwf	isr@tmp,w
  5294     0011  1803               	skipnc
  5295     0012  2814               	goto	u220_21
  5296     0013  2815               	goto	u220_20
  5297     0014                     u220_21:
  5298     0014  2818               	goto	i1l2070
  5299     0015                     u220_20:
  5300     0015                     i1l2068:
  5301                           
  5302                           ;main.c: 131:         tmp = (char)((int)tmp + 32);
  5303     0015  087D               	movf	isr@tmp,w
  5304     0016  3E20               	addlw	32
  5305     0017  00FD               	movwf	isr@tmp
  5306     0018                     i1l2070:
  5307                           
  5308                           ;main.c: 134:     if (!((int)tmp < 48 || (int)tmp > 123 || ((int)tmp > 57 && (int)tmp < 
      +                          97))) {
  5309     0018  3030               	movlw	48
  5310     0019  027D               	subwf	isr@tmp,w
  5311     001A  1C03               	skipc
  5312     001B  281D               	goto	u221_21
  5313     001C  281E               	goto	u221_20
  5314     001D                     u221_21:
  5315     001D  2842               	goto	i1l100
  5316     001E                     u221_20:
  5317     001E                     i1l2072:
  5318     001E  307C               	movlw	124
  5319     001F  027D               	subwf	isr@tmp,w
  5320     0020  1803               	skipnc
  5321     0021  2823               	goto	u222_21
  5322     0022  2824               	goto	u222_20
  5323     0023                     u222_21:
  5324     0023  2842               	goto	i1l100
  5325     0024                     u222_20:
  5326     0024                     i1l2074:
  5327     0024  303A               	movlw	58
  5328     0025  027D               	subwf	isr@tmp,w
  5329     0026  1C03               	skipc
  5330     0027  2829               	goto	u223_21
  5331     0028  282A               	goto	u223_20
  5332     0029                     u223_21:
  5333     0029  2830               	goto	i1l2078
  5334     002A                     u223_20:
  5335     002A                     i1l2076:
  5336     002A  3061               	movlw	97
  5337     002B  027D               	subwf	isr@tmp,w
  5338     002C  1C03               	skipc
  5339     002D  282F               	goto	u224_21
  5340     002E  2830               	goto	u224_20
  5341     002F                     u224_21:
  5342     002F  2842               	goto	i1l100
  5343     0030                     u224_20:
  5344     0030                     i1l2078:
  5345                           
  5346                           ;main.c: 136:         TX1REG = (char)transformCesar((int)tmp, offset);
  5347     0030  087D               	movf	isr@tmp,w
  5348     0031  00FB               	movwf	??_isr
  5349     0032  01FC               	clrf	??_isr+1
  5350     0033  087B               	movf	??_isr,w
  5351     0034  00F0               	movwf	transformCesar@value
  5352     0035  087C               	movf	??_isr+1,w
  5353     0036  00F1               	movwf	transformCesar@value+1
  5354     0037  0020               	movlb	0	; select bank0
  5355     0038  085F               	movf	_offset+1,w
  5356     0039  00F3               	movwf	transformCesar@offsetBis+1
  5357     003A  085E               	movf	_offset,w
  5358     003B  00F2               	movwf	transformCesar@offsetBis
  5359     003C  3183  2309  3180   	fcall	_transformCesar
  5360     003F  0870               	movf	?_transformCesar,w
  5361     0040  0023               	movlb	3	; select bank3
  5362     0041  009A               	movwf	26	;volatile
  5363     0042                     i1l100:
  5364     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5365     0043  0009               	retfie
  5366     0044                     __end_of_isr:
  5367                           
  5368                           	psect	text27
  5369     0309                     __ptext27:	
  5370 ;; *************** function _transformCesar *****************
  5371 ;; Defined at:
  5372 ;;		line 85 in file "main.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  value           2    0[COMMON] int 
  5375 ;;  offsetBis       2    2[COMMON] int 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  retour          2    9[COMMON] int 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  2    0[COMMON] int 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0, pclath, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5390 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:       11 bytes
  5392 ;; Hardware stack levels used: 1
  5393 ;; This function calls:
  5394 ;;		_transformCesar
  5395 ;; This function is called by:
  5396 ;;		_isr
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400     0309                     _transformCesar:	
  5401                           ;psect for function _transformCesar
  5402                           
  5403     0309                     i1l1734:	
  5404                           ;incstack = 0
  5405 ;; hardware stack exceeded
  5406                           ; Regs used in _transformCesar: [wreg+status,2+status,0+pclath+cstack]
  5407                           
  5408                           
  5409                           ;main.c: 86:     int retour;;main.c: 87:     if (isChiffrement == 1) {
  5410     0309  0020               	movlb	0	; select bank0
  5411     030A  035B               	decf	_isChiffrement,w
  5412     030B  045C               	iorwf	_isChiffrement+1,w
  5413     030C  1D03               	btfss	3,2
  5414     030D  2B0F               	goto	u157_21
  5415     030E  2B10               	goto	u157_20
  5416     030F                     u157_21:
  5417     030F  2B7A               	goto	i1l1754
  5418     0310                     u157_20:
  5419     0310                     i1l1736:
  5420                           
  5421                           ;main.c: 88:         if (value < 58) {
  5422     0310  0871               	movf	transformCesar@value+1,w
  5423     0311  3A80               	xorlw	128
  5424     0312  00F4               	movwf	??_transformCesar
  5425     0313  3080               	movlw	128
  5426     0314  0274               	subwf	??_transformCesar,w
  5427     0315  1D03               	skipz
  5428     0316  2B19               	goto	u158_25
  5429     0317  303A               	movlw	58
  5430     0318  0270               	subwf	transformCesar@value,w
  5431     0319                     u158_25:
  5432     0319  1803               	skipnc
  5433     031A  2B1C               	goto	u158_21
  5434     031B  2B1D               	goto	u158_20
  5435     031C                     u158_21:
  5436     031C  2B4F               	goto	i1l1746
  5437     031D                     u158_20:
  5438     031D                     i1l1738:
  5439                           
  5440                           ;main.c: 89:             if (value + offsetBis >= 58) {
  5441     031D  0872               	movf	transformCesar@offsetBis,w
  5442     031E  0770               	addwf	transformCesar@value,w
  5443     031F  00F4               	movwf	??_transformCesar
  5444     0320  0873               	movf	transformCesar@offsetBis+1,w
  5445     0321  3D71               	addwfc	transformCesar@value+1,w
  5446     0322  00F5               	movwf	??_transformCesar+1
  5447     0323  0875               	movf	??_transformCesar+1,w
  5448     0324  3A80               	xorlw	128
  5449     0325  00F6               	movwf	??_transformCesar+2
  5450     0326  3080               	movlw	128
  5451     0327  0276               	subwf	??_transformCesar+2,w
  5452     0328  1D03               	skipz
  5453     0329  2B2C               	goto	u159_25
  5454     032A  303A               	movlw	58
  5455     032B  0274               	subwf	??_transformCesar,w
  5456     032C                     u159_25:
  5457     032C  1C03               	skipc
  5458     032D  2B2F               	goto	u159_21
  5459     032E  2B30               	goto	u159_20
  5460     032F                     u159_21:
  5461     032F  2B48               	goto	i1l1744
  5462     0330                     u159_20:
  5463     0330                     i1l1740:
  5464                           
  5465                           ;main.c: 90:                 offsetBis = offsetBis - (58 - value);
  5466     0330  0872               	movf	transformCesar@offsetBis,w
  5467     0331  0770               	addwf	transformCesar@value,w
  5468     0332  00F4               	movwf	??_transformCesar
  5469     0333  0873               	movf	transformCesar@offsetBis+1,w
  5470     0334  3D71               	addwfc	transformCesar@value+1,w
  5471     0335  00F5               	movwf	??_transformCesar+1
  5472     0336  0874               	movf	??_transformCesar,w
  5473     0337  3EC6               	addlw	198
  5474     0338  00F2               	movwf	transformCesar@offsetBis
  5475     0339  30FF               	movlw	255
  5476     033A  3D75               	addwfc	??_transformCesar+1,w
  5477     033B  00F3               	movwf	transformCesar@offsetBis+1
  5478     033C                     i1l1742:
  5479                           
  5480                           ;main.c: 91:                 retour = transformCesar(97, offsetBis);
  5481     033C  3061               	movlw	97
  5482     033D  00F0               	movwf	transformCesar@value
  5483     033E  3000               	movlw	0
  5484     033F  00F1               	movwf	transformCesar@value+1
  5485     0340  3183  2309  3183   	fcall	_transformCesar
  5486     0343  0871               	movf	?_transformCesar+1,w
  5487     0344  00FA               	movwf	transformCesar@retour+1
  5488     0345  0870               	movf	?_transformCesar,w
  5489     0346  00F9               	movwf	transformCesar@retour
  5490                           
  5491                           ;main.c: 92:             } else {
  5492     0347  2BE3               	goto	i1l1772
  5493     0348                     i1l1744:
  5494                           
  5495                           ;main.c: 93:                 retour = value + offsetBis;
  5496     0348  0872               	movf	transformCesar@offsetBis,w
  5497     0349  0770               	addwf	transformCesar@value,w
  5498     034A  00F9               	movwf	transformCesar@retour
  5499     034B  0873               	movf	transformCesar@offsetBis+1,w
  5500     034C  3D71               	addwfc	transformCesar@value+1,w
  5501     034D  00FA               	movwf	transformCesar@retour+1
  5502     034E  2BE3               	goto	i1l1772
  5503     034F                     i1l1746:
  5504                           
  5505                           ;main.c: 96:             if (value + offsetBis >= 123) {
  5506     034F  0872               	movf	transformCesar@offsetBis,w
  5507     0350  0770               	addwf	transformCesar@value,w
  5508     0351  00F4               	movwf	??_transformCesar
  5509     0352  0873               	movf	transformCesar@offsetBis+1,w
  5510     0353  3D71               	addwfc	transformCesar@value+1,w
  5511     0354  00F5               	movwf	??_transformCesar+1
  5512     0355  0875               	movf	??_transformCesar+1,w
  5513     0356  3A80               	xorlw	128
  5514     0357  00F6               	movwf	??_transformCesar+2
  5515     0358  3080               	movlw	128
  5516     0359  0276               	subwf	??_transformCesar+2,w
  5517     035A  1D03               	skipz
  5518     035B  2B5E               	goto	u160_25
  5519     035C  307B               	movlw	123
  5520     035D  0274               	subwf	??_transformCesar,w
  5521     035E                     u160_25:
  5522     035E  1C03               	skipc
  5523     035F  2B61               	goto	u160_21
  5524     0360  2B62               	goto	u160_20
  5525     0361                     u160_21:
  5526     0361  2B48               	goto	i1l1744
  5527     0362                     u160_20:
  5528     0362                     i1l1748:
  5529                           
  5530                           ;main.c: 97:                 offsetBis = offsetBis - (123 - value);
  5531     0362  0872               	movf	transformCesar@offsetBis,w
  5532     0363  0770               	addwf	transformCesar@value,w
  5533     0364  00F4               	movwf	??_transformCesar
  5534     0365  0873               	movf	transformCesar@offsetBis+1,w
  5535     0366  3D71               	addwfc	transformCesar@value+1,w
  5536     0367  00F5               	movwf	??_transformCesar+1
  5537     0368  0874               	movf	??_transformCesar,w
  5538     0369  3E85               	addlw	133
  5539     036A  00F2               	movwf	transformCesar@offsetBis
  5540     036B  30FF               	movlw	255
  5541     036C  3D75               	addwfc	??_transformCesar+1,w
  5542     036D  00F3               	movwf	transformCesar@offsetBis+1
  5543     036E                     i1l1750:
  5544                           
  5545                           ;main.c: 98:                 retour = transformCesar(48, offsetBis);
  5546     036E  3030               	movlw	48
  5547     036F  00F0               	movwf	transformCesar@value
  5548     0370  3000               	movlw	0
  5549     0371  00F1               	movwf	transformCesar@value+1
  5550     0372  3183  2309  3183   	fcall	_transformCesar
  5551     0375  0871               	movf	?_transformCesar+1,w
  5552     0376  00FA               	movwf	transformCesar@retour+1
  5553     0377  0870               	movf	?_transformCesar,w
  5554     0378  00F9               	movwf	transformCesar@retour
  5555                           
  5556                           ;main.c: 99:             } else {
  5557     0379  2BE3               	goto	i1l1772
  5558     037A                     i1l1754:
  5559                           
  5560                           ;main.c: 104:         if (value > 96) {
  5561     037A  0871               	movf	transformCesar@value+1,w
  5562     037B  3A80               	xorlw	128
  5563     037C  00F4               	movwf	??_transformCesar
  5564     037D  3080               	movlw	128
  5565     037E  0274               	subwf	??_transformCesar,w
  5566     037F  1D03               	skipz
  5567     0380  2B83               	goto	u161_25
  5568     0381  3061               	movlw	97
  5569     0382  0270               	subwf	transformCesar@value,w
  5570     0383                     u161_25:
  5571     0383  1C03               	skipc
  5572     0384  2B86               	goto	u161_21
  5573     0385  2B87               	goto	u161_20
  5574     0386                     u161_21:
  5575     0386  2BB9               	goto	i1l1764
  5576     0387                     u161_20:
  5577     0387                     i1l1756:
  5578                           
  5579                           ;main.c: 105:             if (value - offsetBis <= 96) {
  5580     0387  0872               	movf	transformCesar@offsetBis,w
  5581     0388  0270               	subwf	transformCesar@value,w
  5582     0389  00F4               	movwf	??_transformCesar
  5583     038A  0873               	movf	transformCesar@offsetBis+1,w
  5584     038B  3B71               	subwfb	transformCesar@value+1,w
  5585     038C  00F5               	movwf	??_transformCesar+1
  5586     038D  0875               	movf	??_transformCesar+1,w
  5587     038E  3A80               	xorlw	128
  5588     038F  00F6               	movwf	??_transformCesar+2
  5589     0390  3080               	movlw	128
  5590     0391  0276               	subwf	??_transformCesar+2,w
  5591     0392  1D03               	skipz
  5592     0393  2B96               	goto	u162_25
  5593     0394  3061               	movlw	97
  5594     0395  0274               	subwf	??_transformCesar,w
  5595     0396                     u162_25:
  5596     0396  1803               	skipnc
  5597     0397  2B99               	goto	u162_21
  5598     0398  2B9A               	goto	u162_20
  5599     0399                     u162_21:
  5600     0399  2BB2               	goto	i1l1762
  5601     039A                     u162_20:
  5602     039A                     i1l1758:
  5603                           
  5604                           ;main.c: 106:                 offsetBis = offsetBis - (value - 96);
  5605     039A  0870               	movf	transformCesar@value,w
  5606     039B  0272               	subwf	transformCesar@offsetBis,w
  5607     039C  00F4               	movwf	??_transformCesar
  5608     039D  0871               	movf	transformCesar@value+1,w
  5609     039E  3B73               	subwfb	transformCesar@offsetBis+1,w
  5610     039F  00F5               	movwf	??_transformCesar+1
  5611     03A0  0874               	movf	??_transformCesar,w
  5612     03A1  3E60               	addlw	96
  5613     03A2  00F2               	movwf	transformCesar@offsetBis
  5614     03A3  3000               	movlw	0
  5615     03A4  3D75               	addwfc	??_transformCesar+1,w
  5616     03A5  00F3               	movwf	transformCesar@offsetBis+1
  5617     03A6                     i1l1760:
  5618                           
  5619                           ;main.c: 107:                 retour = transformCesar(57, offsetBis);
  5620     03A6  3039               	movlw	57
  5621     03A7  00F0               	movwf	transformCesar@value
  5622     03A8  3000               	movlw	0
  5623     03A9  00F1               	movwf	transformCesar@value+1
  5624     03AA  3183  2309  3183   	fcall	_transformCesar
  5625     03AD  0871               	movf	?_transformCesar+1,w
  5626     03AE  00FA               	movwf	transformCesar@retour+1
  5627     03AF  0870               	movf	?_transformCesar,w
  5628     03B0  00F9               	movwf	transformCesar@retour
  5629                           
  5630                           ;main.c: 108:             } else {
  5631     03B1  2BE3               	goto	i1l1772
  5632     03B2                     i1l1762:
  5633                           
  5634                           ;main.c: 109:                 retour = value - offsetBis;
  5635     03B2  0872               	movf	transformCesar@offsetBis,w
  5636     03B3  0270               	subwf	transformCesar@value,w
  5637     03B4  00F9               	movwf	transformCesar@retour
  5638     03B5  0873               	movf	transformCesar@offsetBis+1,w
  5639     03B6  3B71               	subwfb	transformCesar@value+1,w
  5640     03B7  00FA               	movwf	transformCesar@retour+1
  5641     03B8  2BE3               	goto	i1l1772
  5642     03B9                     i1l1764:
  5643                           
  5644                           ;main.c: 112:             if (value - offsetBis <= 47) {
  5645     03B9  0872               	movf	transformCesar@offsetBis,w
  5646     03BA  0270               	subwf	transformCesar@value,w
  5647     03BB  00F4               	movwf	??_transformCesar
  5648     03BC  0873               	movf	transformCesar@offsetBis+1,w
  5649     03BD  3B71               	subwfb	transformCesar@value+1,w
  5650     03BE  00F5               	movwf	??_transformCesar+1
  5651     03BF  0875               	movf	??_transformCesar+1,w
  5652     03C0  3A80               	xorlw	128
  5653     03C1  00F6               	movwf	??_transformCesar+2
  5654     03C2  3080               	movlw	128
  5655     03C3  0276               	subwf	??_transformCesar+2,w
  5656     03C4  1D03               	skipz
  5657     03C5  2BC8               	goto	u163_25
  5658     03C6  3030               	movlw	48
  5659     03C7  0274               	subwf	??_transformCesar,w
  5660     03C8                     u163_25:
  5661     03C8  1803               	skipnc
  5662     03C9  2BCB               	goto	u163_21
  5663     03CA  2BCC               	goto	u163_20
  5664     03CB                     u163_21:
  5665     03CB  2BB2               	goto	i1l1762
  5666     03CC                     u163_20:
  5667     03CC                     i1l1766:
  5668                           
  5669                           ;main.c: 113:                 offsetBis = offsetBis - (value - 47);
  5670     03CC  0870               	movf	transformCesar@value,w
  5671     03CD  0272               	subwf	transformCesar@offsetBis,w
  5672     03CE  00F4               	movwf	??_transformCesar
  5673     03CF  0871               	movf	transformCesar@value+1,w
  5674     03D0  3B73               	subwfb	transformCesar@offsetBis+1,w
  5675     03D1  00F5               	movwf	??_transformCesar+1
  5676     03D2  0874               	movf	??_transformCesar,w
  5677     03D3  3E2F               	addlw	47
  5678     03D4  00F2               	movwf	transformCesar@offsetBis
  5679     03D5  3000               	movlw	0
  5680     03D6  3D75               	addwfc	??_transformCesar+1,w
  5681     03D7  00F3               	movwf	transformCesar@offsetBis+1
  5682     03D8                     i1l1768:
  5683                           
  5684                           ;main.c: 114:                 retour = transformCesar(122, offsetBis);
  5685     03D8  307A               	movlw	122
  5686     03D9  00F0               	movwf	transformCesar@value
  5687     03DA  3000               	movlw	0
  5688     03DB  00F1               	movwf	transformCesar@value+1
  5689     03DC  3183  2309  3183   	fcall	_transformCesar
  5690     03DF  0871               	movf	?_transformCesar+1,w
  5691     03E0  00FA               	movwf	transformCesar@retour+1
  5692     03E1  0870               	movf	?_transformCesar,w
  5693     03E2  00F9               	movwf	transformCesar@retour
  5694     03E3                     i1l1772:	
  5695                           ;main.c: 115:             } else {
  5696                           
  5697                           
  5698                           ;main.c: 121:     return retour;
  5699     03E3  087A               	movf	transformCesar@retour+1,w
  5700     03E4  00F1               	movwf	?_transformCesar+1
  5701     03E5  0879               	movf	transformCesar@retour,w
  5702     03E6  00F0               	movwf	?_transformCesar
  5703     03E7                     i1l91:
  5704     03E7  0008               	return
  5705     03E8                     __end_of_transformCesar:
  5706     007E                     btemp	set	126	;btemp
  5707     007E                     int$flags	set	126
  5708     007E                     wtemp0	set	126
  5709     278C                     
  5710                           	psect	config
  5711                           
  5712                           ;Config register CONFIG1 @ 0x8007
  5713                           ;	Oscillator Selection Bits
  5714                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  5715                           ;	Watchdog Timer Enable
  5716                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  5717                           ;	Power-up Timer Enable
  5718                           ;	PWRTE = OFF, PWRT disabled
  5719                           ;	MCLR Pin Function Select
  5720                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5721                           ;	Flash Program Memory Code Protection
  5722                           ;	CP = OFF, Program memory code protection is disabled
  5723                           ;	Brown-out Reset Enable
  5724                           ;	BOREN = ON, Brown-out Reset enabled
  5725                           ;	Clock Out Enable
  5726                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5727                           ;	Internal/External Switchover Mode
  5728                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5729                           ;	Fail-Safe Clock Monitor Enable
  5730                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5731     8007                     	org	32775
  5732     8007  3FEA               	dw	16362
  5733                           
  5734                           ;Config register CONFIG2 @ 0x8008
  5735                           ;	Flash Memory Self-Write Protection
  5736                           ;	WRT = OFF, Write protection off
  5737                           ;	Peripheral Pin Select one-way control
  5738                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  5739                           ;	Zero-cross detect disable
  5740                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5741                           ;	Phase Lock Loop enable
  5742                           ;	PLLEN = OFF, 4x PLL is disabled
  5743                           ;	Stack Overflow/Underflow Reset Enable
  5744                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5745                           ;	Brown-out Reset Voltage Selection
  5746                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5747                           ;	Low-Power Brown Out Reset
  5748                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5749                           ;	In-Circuit Debugger Mode
  5750                           ;	DEBUG = 0x1, unprogrammed default
  5751                           ;	Low-Voltage Programming Enable
  5752                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5753     8008                     	org	32776
  5754     8008  1EFB               	dw	7931

Data Sizes:
    Strings     28
    Constant    0
    Data        2
    BSS         39
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      64
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           12      0       0
    BANK25            0      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_WriteString@data	PTR const unsigned char  size(2) Largest target is 100
		 -> texte(BIGRAM[100]), 

    S1128$buffer	PTR unsigned char  size(2) Largest target is 0

    S1128$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> texte(BIGRAM[100]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_transformCesar

Critical Paths under _main in BANK0

    _setTexteLed->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_WriteString->_LCD_WriteByte
    _LCD_WriteByte->_LCD_WriteIOExpander
    _LCD_Clear->_LCD_GoTo
    _LCD_GoTo->_LCD_WriteCommand
    _init->_LCD_Initialize
    _LCD_Initialize->_LCD_WriteCommand
    _LCD_WriteCommand->_LCD_WriteIOExpander
    _LCD_WriteIOExpander->_SPI_Exchange8bit
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11608
                                             53 BANK0      2     2      0
                            ___awdiv
                            ___fldiv
                            ___fltol
                           ___xxtofl
                            _ad_read
                               _init
                        _setTexteLed
 ---------------------------------------------------------------------------------
 (1) _setTexteLed                                          0     0      0    7461
                          _LCD_Clear
                           _LCD_GoTo
                    _LCD_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6    3557
                                             35 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     3      5    3054
                                             27 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    2721
                                             11 BANK0     16    12      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     782
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteString                                      5     3      2    1014
                                              4 BANK0      5     3      2
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteByte                                        1     1      0     772
                                              3 BANK0      1     1      0
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1831
                           _LCD_GoTo
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_GoTo                                             5     4      1    1059
                                              4 BANK0      5     4      1
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1522
                     _LCD_Initialize
                 _LCD_InitializePins
                     _SPI_Initialize
                 _SPI_InitializePins
 ---------------------------------------------------------------------------------
 (2) _SPI_InitializePins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_InitializePins                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       2     2      0    1522
                                              4 BANK0      2     2      0
                   _LCD_WriteCommand
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteCommand                                     1     1      0     772
                                              3 BANK0      1     1      0
                _LCD_WriteIOExpander
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteIOExpander                                  2     1      1     750
                                              1 BANK0      2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ad_read                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             40 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0    5626
                                             11 COMMON     3     3      0
                     _transformCesar
 ---------------------------------------------------------------------------------
 (?) _transformCesar                                       9     5      4    5448
                                              0 COMMON    11     7      4
                     _transformCesar
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth unknown (due to recursion)
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _ad_read
   _init
     _LCD_Initialize
       _LCD_WriteCommand
         _LCD_WriteIOExpander
           _SPI_Exchange8bit
       _LCD_WriteIOExpander
     _LCD_InitializePins
     _SPI_Initialize
     _SPI_InitializePins
   _setTexteLed
     _LCD_Clear
       _LCD_GoTo
         _LCD_WriteCommand
       _LCD_WriteCommand
     _LCD_GoTo
     _LCD_WriteString
       _LCD_WriteByte
         _LCD_WriteIOExpander
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _isr (ROOT)
   _transformCesar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      6E      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      6E      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               C      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 14:18:29 2024

             _SPI_Initialize 07F8                 ___fldiv@aexp 0047                 ___fldiv@bexp 0046  
             _LCD_Initialize 0583                 ___fldiv@sign 003F                           l74 076D  
                         l69 0734                 ___awdiv@sign 0026                          l103 0F6F  
                        l201 0F8C                          l106 0F7B                          l115 04B4  
                        l142 0FB3                          l136 0F55                          l145 0FCA  
                        l161 07F1                          l162 07F7                          l154 07B7  
                        l139 05E4                          l148 0FE1                          l165 0F60  
                        l192 07D8                          l195 07FE                          l198 0F86  
                        l446 0644                          l199 0F85                          l800 0FFF  
                        l650 00C0                          l459 06F7                          l652 0218  
                        l740 0444                          l494 056D                          l734 040B  
                        l830 07FF                          l671 01EA                          l487 0582  
                        l807 0F9E                          l672 0204                          l736 0492  
                        l497 0582                          l674 0211                          l666 019E  
                        l747 045E                          l819 06A3                          l748 046A  
                        l756 0793                          l794 0308                          _abs 0F8D  
                        _isr 0004                 ___awmod@sign 0026                          wreg 0009  
          ??_LCD_WriteString 0026            ?_LCD_WriteCommand 0070                 _BAUD1CONbits 019F  
               ___fltol@exp1 0051           ??_LCD_WriteCommand 0023                         l2000 01D0  
                       l2010 0207                         l2002 01DD                         ?_abs 0027  
                       l2012 020B                         l2004 01F8                         l2020 03EA  
                       l2100 04C1                         l2014 020D                         l2006 01FB  
                       l2022 03EF                         l2102 04D7                         l2008 0203  
                       l2040 0435                         l2032 041C                         l2024 03F3  
                       l2104 04DA                         l2050 0462                         l2042 043D  
                       l2034 041F                         l2026 0403                         l2060 048A  
                       l2052 046C                         l2044 044B                         l2036 042A  
                       l2028 0413                         l1500 0FB1                         l2054 0480  
                       l2046 0454                         l2038 0431                         l1510 05F2  
                       l1502 05E5                         l2056 0485                         l2048 0458  
                       l1520 0607                         l1512 05F6                         l1504 05E7  
                       l1600 0F8D                         l2080 0493                         l2058 0489  
                       l1530 0626                         l1522 060A                         l1514 05FB  
                       l1506 05EB                         l1602 0F92                         l1610 0219  
                       l2090 04A9                         l2082 0496                         l1700 05AC  
                       l1540 063B                         l1532 062A                         l1524 060F  
                       l1516 05FF                         l1508 05F0                         l1604 0F93  
                       l1620 0245                         l1612 022B                         l2092 04AB  
                       l2084 049B                         l1710 05DB                         l1702 05B0  
                       l1542 0640                         l1534 062B                         l1526 0613  
                       l1518 0601                         l1550 06AA                         l1630 0274  
                       l1622 024F                         l1614 0233                         l2094 04AF  
                       l2086 049E                         l1608 0FB6                         l1704 05BD  
                       l1800 0724                         l1712 0F56                         l1536 0630  
                       l1528 0617                         l1560 06C0                         l1552 06AF  
                       l1640 02B3                         l1632 027B                         l1624 0259  
                       l1616 023A                         l1720 0779                         l2088 04A3  
                       l1490 0F80                         l1706 05C6                         l1810 072A  
                       l1802 0725                         l1730 07A4                         l1538 0636  
                       l1570 06DA                         l1562 06C3                         l1554 06B1  
                       l1546 06A4                         l1642 02B8                         l1650 02DD  
                       l1634 0298                         l1626 0265                         l1618 023E  
                       l1722 0786                         l1714 076E                         l2098 04B9  
                       l1900 0097                         l1492 0F8B                         l1708 05D7  
                       l1820 0730                         l1812 072B                         l1804 0727  
                       l1732 07A9                         l1580 06F3                         l1572 06DE  
                       l1564 06C8                         l1556 06B5                         l1548 06A6  
                       l1644 02BD                         l1636 02A8                         l1628 0272  
                       l1652 02E4                         l1716 0775                         l1910 00A8  
                       l1902 009C                         l1822 0731                         l1814 072D  
                       l1806 0728                         l1670 07F3                         l1662 07DB  
                       l1726 0794                         l1574 06E3                         l1566 06CC  
                       l1558 06BA                         l1590 0657                         l1646 02C6  
                       l1638 02AE                         l1718 0777                         l1830 0745  
                       l1920 00C8                         l1912 00AD                         l1904 009E  
                       l1840 0F73                         l1488 0F7E                         l1496 0FA1  
                       l1824 0732                         l1816 072E                         l1808 0729  
                       l1664 07E1                         l1672 0FCD                         l1728 0797  
                       l1568 06D0                         l1576 06E9                         l1592 0662  
                       l1584 0645                         l1648 02D8                         l1656 02EE  
                       l1680 0FFD                         l1832 0754                         l1930 00E6  
                       l1922 00D4                         l1914 00B5                         l1906 00A2  
                       l1850 0525                         l1498 0FA3                         l1690 07F8  
                       l1818 072F                         l1666 07E6                         l1578 06EE  
                       l1594 0682                         l1586 064C                         l1674 0FE2  
                       l1834 075D                         l1826 0735                         l1940 010F  
                       l1924 00D8                         l1916 00B6                         l1908 00A3  
                       l1860 0545                         l1852 0536                         l1844 0512  
                       l1692 07FD                         l1684 07B8                         l1780 0707  
                       l1668 07EC                         l1596 0699                         l1588 0652  
                       l1676 0FE8                         l1828 073E                         l1950 0130  
                       l1942 0117                         l1934 00EF                         l1918 00B8  
                       l1854 0537                         l1846 051C                         l1838 0F6D  
                       l1694 0583                         l1686 07C4                         l1790 0712  
                       l1782 070A                         l1678 0FF3                         l1960 0153  
                       l1952 0131                         l1944 0119                         l1936 00FF  
                       l1928 00E1                         l1880 006F                         l1856 053F  
                       l1696 0596                         l1688 0F51                         l1792 0715  
                       l1784 070B                         l1776 06F8                         l1970 016E  
                       l1946 011E                         l1954 0138                         l1962 0157  
                       l1938 0107                         l1890 007F                         l1882 0073  
                       l1874 0564                         l1866 054D                         l1858 0541  
                       l1698 059F                         l1794 0718                         l1786 070C  
                       l1778 0703                         l1980 0182                         l1972 0172  
                       l1964 015D                         l1956 014A                         l1948 012C  
                       l1892 0084                         l1884 0075                         l1876 0572  
                       l1868 055D                         l1796 071D                         l1788 070F  
                       l1990 01A3                         l1982 0183                         l1974 0173  
                       l1966 0165                         l1958 014B                         l1894 008C  
                       l1886 0079                         l1878 0577                         l1798 0722  
                       l1992 01A8                         l1984 0187                         l1976 017A  
                       l1968 0167                         l1896 008D                         l1888 007A  
                       l1994 01B0                         l1986 019B                         l1978 017E  
                       l1898 008F                         l1996 01B4                         l1998 01CC  
                       ?_isr 0070                         STR_1 100F                         STR_2 1000  
                       u2000 01B4                         u1200 05F6                         u2001 01B3  
                       u1201 05F5                         u2010 01C2                         u1210 0607  
                       u1211 0606                         u2020 01DD                         u1300 06B5  
                       u2021 01DC                         u1301 06B4                         u2030 01F8  
                       u2110 044A                         u1230 0617                         u1310 06C0  
                       u2031 01F7                         u2015 01BE                         u2111 0449  
                       u1231 0616                         u1311 06BF                         u2040 020B  
                       u1400 0662                         u2041 020A                         u2025 01D9  
                       u2105 043E                         u1225 060B                         u1401 0661  
                       u2130 0458                         u2050 03EF                         u1250 0626  
                       u1330 06D0                         u1410 0682                         u2035 01F4  
                       u2131 0457                         u2051 03EE                         u1251 0625  
                       u1331 06CF                         u1411 0681                         u2140 045E  
                       u2060 03F3                         u1180 0F8B                         u1340 06DA  
                       u1420 0F92                         u1500 02B8                         u2141 045D  
                       u2125 044E                         u2061 03F2                         u1181 0F8A  
                       u1245 0618                         u1341 06D9                         u1325 06C4  
                       u1421 0F91                         u1501 02B7                         u2150 0462  
                       u2070 0413                         u1270 0636                         u1190 05EB  
                       u1510 02BD                         u1430 022B                         u2151 0461  
                       u2071 0412                         u1271 0635                         u1255 0622  
                       u1191 05EA                         u1415 067E                         u1511 02BC  
                       u1431 022A                         u2160 0476                         u1280 063B  
                       u1360 06E9                         u1520 02E3                         u1440 024F  
                       u1281 063A                         u1265 062C                         u1361 06E8  
                       u1345 06D6                         u1521 02E2                         u1441 024E  
                       u2170 0485                         u2090 0430                         u1530 07E1  
                       u1370 06EE                         u1290 06AA                         u1450 0259  
                       u2250 04A3                         u2171 0484                         u2091 042F  
                       u1531 07E0                         u1371 06ED                         u1355 06DF  
                       u1291 06A9                         u1451 0258                         u2251 04A2  
                       u2180 0489                         u1540 07E6                         u1380 064C  
                       u1460 0279                         u2260 04A9                         u2181 0488  
                       u2165 0472                         u2085 0424                         u1541 07E5  
                       u1381 064B                         u1461 0277                         u2261 04A8  
                       u1710 055C                         u1390 0652                         u1470 027A  
                       u1550 0FFD                         u2270 04B9                         u1711 055B  
                       u2407 05DF                         u1391 0651                         u1551 0FFC  
                       u2271 04B8                         u1800 00A8                         u1720 0563  
                       u1560 07B7                         u1480 02AE                         u1640 0745  
                       u2280 04D7                         u1801 00A7                         u1721 0562  
                       u1705 054E                         u1561 07B6                         u1481 02AD  
                       u1641 0744                         u2281 04D6                         u1810 00AD  
                       u1650 0F73                         u1490 02B3                         u1811 00AC  
                       u1651 0F72                         u1491 02B2                         u1900 015D  
                       u1820 00C8                         u1740 0572                         u1660 051C  
                       u1901 015C                         u1821 00C7                         u1741 0571  
                       u1661 051B                         u2357 059A                         u2285 04D3  
                       u1910 0165                         u1830 00E6                         u1750 0577  
                       u1670 0532                         u1911 0164                         u1831 00E5  
                       u1751 0576                         u1735 0565                         u2367 05A7  
                       u1840 011E                         u1760 0079                         u1680 0545  
                       u1841 011D                         u1761 0078                         u1681 0544  
                       u2377 05B4                         u1930 0172                         u1770 007F  
                       u1690 054C                         u1931 0171                         u1771 007E  
                       u1691 054B                         u1675 052E                         u2387 05C1  
                       u1780 0084                         u1925 0168                         u1781 0083  
                       u2397 05D0                         u1950 0182                         u1870 0130  
                       u1790 00A2                         u1951 0181                         u1871 012F  
                       u1855 011F                         u1791 00A1                         u1960 0187  
                       u1961 0186                         u1945 0174                         u1865 0126  
                       u1970 019B                         u1890 014A                         u1971 019A  
                       u1891 0149                         u1980 01A2                         u1981 01A1  
                       u1885 0132                         u1990 01A8                         u1991 01A7  
                       u1895 0146                         i1l91 03E7                  LCD_GoTo@pos 0027  
                LCD_GoTo@row 0028                         abs@a 0027                         _dbuf 00A0  
                       _main 0493                         _init 06F8                         _prec 0059  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                         start 0044              ___fldiv@new_exp 0040  
     __end_of_SPI_Initialize 07FF       __end_of_LCD_Initialize 05E5           _SPI_InitializePins 07B8  
              _LCD_WriteByte 0FCB                        ??_abs 0029                        ??_isr 007B  
           __end_of_LCD_GoTo 07F8          ?_SPI_InitializePins 0070                ___fltol@sign1 0050  
        _LCD_WriteIOExpander 0F9F          LCD_WriteString@data 0024                        ?_main 0070  
                      ?_init 0070              __end_of___fldiv 0219              __end_of___awdiv 0645  
            __end_of___awmod 06F8              __end_of___fltol 0583              ___awdiv@divisor 0020  
                      i1l100 0042              __end_of_ad_read 0F7C              ___awdiv@counter 0025  
               vfpfcnvrt@fmt 002D                        _flags 005D                        _fputc 0645  
         _LCD_InitializePins 0F51                        _texte 278C                        _width 0057  
                      _putch 07FF         ??_SPI_InitializePins 0020         ?_LCD_WriteIOExpander 0021  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0794  
        ?_LCD_InitializePins 0070               ?_LCD_WriteByte 0070              ?_SPI_Initialize 0070  
            ?_LCD_Initialize 0070              __initialization 0046                 __end_of_main 0512  
               __end_of_init 0735                       ??_main 0055                       ??_init 0026  
       ??_LCD_InitializePins 0020            __end_of_LCD_Clear 0F61               _transformCesar 0309  
   __end_of_SPI_Exchange8bit 0F8D                       ?_fputc 0020                       _ADRESH 009C  
           ___awdiv@dividend 0022                       ?_putch 0070                 ?_setTexteLed 0070  
                     _RC1REG 0199                       i1l2070 0018                       i1l2072 001E  
                     i1l2064 0006                       i1l2074 0024                       i1l2066 000F  
                     i1l2076 002A                       i1l2068 0015                       i1l2078 0030  
                     i1l1740 0330                       i1l1750 036E                       i1l1742 033C  
                     i1l1734 0309                       i1l1760 03A6                       i1l1744 0348  
                     i1l1736 0310                       i1l1762 03B2                       i1l1738 031D  
                     i1l1746 034F                       i1l1754 037A                       i1l1756 0387  
                     i1l1764 03B9                       i1l1748 0362                       i1l1772 03E3  
                     i1l1766 03CC                       i1l1758 039A                       i1l1768 03D8  
                     u220_20 0015                       u220_21 0014                       u221_20 001E  
                     u221_21 001D                       u222_20 0024                       u222_21 0023  
                     u223_20 002A                       u223_21 0029                       u160_20 0362  
                     u224_20 0030                       u160_21 0361                       u224_21 002F  
                     u160_25 035E                       u161_20 0387                       u161_21 0386  
                     u161_25 0383                       u162_20 039A                       u162_21 0399  
                     u162_25 0396                       u163_20 03CC                       u219_20 000F  
                     u163_21 03CB                       u219_21 000E                       u163_25 03C8  
                     u157_20 0310                       u157_21 030F        ??_LCD_WriteIOExpander 0022  
                     u158_20 031D                       u158_21 031C                       u158_25 0319  
                     u159_20 0330                       u159_21 032F                       u159_25 032C  
              vfpfcnvrt@done 0033                       _TX1REG 019A             __end_of___xxtofl 0493  
               vfprintf@cfmt 0041                    ??___fldiv 0036                    ??___awdiv 0024  
                  ??___awmod 0024                    ??___fltol 004C                    ??_ad_read 0022  
                     _offset 005E             ___awdiv@quotient 0027              ___awmod@divisor 0020  
            ___awmod@counter 0025                       isr@tmp 007D                       fputc@c 0020  
     __end_of_transformCesar 03E8                       putch@c 0070             __end_of_vfprintf 1000  
                  ??_sprintf 0049                 ___xxtofl@arg 002A                 ___xxtofl@exp 0029  
               ___xxtofl@val 0020      __end_of__initialization 006B                    ?_LCD_GoTo 0024  
            ??_LCD_WriteByte 0023                   ___fltol@f1 0048             LCD_WriteString@i 0028  
             __pcstackCOMMON 0070                 __pidataBANK0 0002              _LCD_WriteString 0794  
              __end_of_fputc 06A4                __end_of_putch 0800              ?_transformCesar 0070  
    LCD_WriteIOExpander@data 0021                      ??_fputc 0024                      ??_putch 0020  
                 __pbssBANK0 0057                   __pbssBANK1 00A0                   ??_LCD_GoTo 0025  
                 __pmaintext 0493                   __pintentry 0004                    ?___xxtofl 0020  
                    _SSP1ADD 0212                      _SSP1BUF 0211             ??_SPI_Initialize 0020  
           ??_LCD_Initialize 0024               LCD_GoTo@column 0024      __end_of_LCD_WriteString 07B8  
                    ___fldiv 006F                      ___awdiv 05E5                      ___awmod 06A4  
                    ___fltol 0512                      _ad_read 0F6D                    ?_vfprintf 003B  
                    __ptext1 0735                      __ptext2 076E                      __ptext3 0FE2  
                    __ptext4 0219                      __ptext5 0645                      __ptext6 07FF  
                    __ptext7 0F8D                      __ptext8 06A4                      __ptext9 05E5  
                 ??___xxtofl 0024             ___awmod@dividend 0022                    _LCD_Clear 0F56  
          ?_SPI_Exchange8bit 0070                      _sprintf 076E                      clrloop0 0F62  
       end_of_initialization 006B           ??_SPI_Exchange8bit 0020         SPI_Exchange8bit@data 0020  
          LCD_WriteByte@data 0023                      fputc@fp 0022            __end_of_vfpfcnvrt 0309  
               _LCD_GoTo$664 0025             vfpfcnvrt@convarg 0036                   ??_vfprintf 0040  
                  _PORTAbits 000C                    _PORTBbits 000D                ___xxtofl@sign 0028  
                  _TRISAbits 008C                    _TRISBbits 008D                    _TRISCbits 008E  
                  _TRISDbits 008F  __end_of_LCD_WriteIOExpander 0FB4                   ?_LCD_Clear 0070  
                ___fldiv@grs 0042                  ___fldiv@rem 003B                    _RXPPSbits 0E24  
           ?_LCD_WriteString 0024             _LCD_WriteCommand 0FB4             ??_transformCesar 0074  
                vfpfcnvrt@ap 002E                  vfpfcnvrt@cp 0034                  vfpfcnvrt@fp 002B  
    transformCesar@offsetBis 0072          start_initialization 0046                  __end_of_abs 0F9F  
                __end_of_isr 0044        __end_of_LCD_WriteByte 0FE2                  vfprintf@fmt 003D  
                __pdataBANK0 005E                    ___fldiv@a 002E                    ___fldiv@b 0032  
                __pbssBIGRAM 278C                    ___latbits 0003                __pcstackBANK0 0020  
                ??_LCD_Clear 0029       LCD_WriteIOExpander@reg 0022                     ?___fldiv 002E  
                   ?___awdiv 0020                     ?___awmod 0020                     ?___fltol 0048  
                   ?_ad_read 0020                     ?_sprintf 0043                ??_setTexteLed 0055  
                   _LCD_GoTo 07D9                     _LATAbits 010C                     _LATCbits 010E  
                  clear_ram0 0F61                     _PIE1bits 0091                     _SSP1CON1 0215  
                   _SSP1STAT 0214                    _vfpfcnvrt 0219                   _ADCON0bits 009D  
                 _ADCON1bits 009E          LCD_WriteCommand@cmd 0023     __end_of_LCD_WriteCommand 0FCB  
                  main@value 0055                _isChiffrement 005B                   vfpfcnvrt@c 003A  
 __end_of_SPI_InitializePins 07D9          __end_of_setTexteLed 076E                   vfprintf@ap 003F  
                 vfprintf@fp 003B                   ?_vfpfcnvrt 002B   __end_of_LCD_InitializePins 0F56  
                _SP1BRGHbits 019C                  _SP1BRGLbits 019B                   _ANSELAbits 018C  
                 _ANSELBbits 018D                   _ANSELCbits 018E                   sprintf@fmt 0045  
                   ___xxtofl 03E8                     __ptext10 0794                     __ptext11 0FCB  
                   __ptext20 0F9F                     __ptext12 0F56                     __ptext21 0F7C  
                   __ptext13 07D9                     __ptext22 0F6D                     __ptext14 06F8  
                   __ptext23 03E8                     __ptext15 07B8                     __ptext24 0512  
                   __ptext16 07F8                     __ptext25 006F                     __ptext17 0F51  
                   __ptext18 0583                     __ptext27 0309                     __ptext19 0FB4  
               _SSP1CON1bits 0215                _SSPDATPPSbits 0E21                   _RC1STAbits 019D  
                 _RC3PPSbits 0EA3                _SSPCLKPPSbits 0E20                     int$flags 007E  
                 _RC5PPSbits 0EA5                   _RC6PPSbits 0EA6                     _vfprintf 0FE2  
               _SSP1STATbits 0214                   _INTCONbits 000B                     intlevel1 0000  
                _setTexteLed 0735                    sprintf@ap 0049             _SPI_Exchange8bit 0F7C  
                ??_vfpfcnvrt 002F         transformCesar@retour 0079                __pstringtext1 1000  
              __pstringtext2 100F                __pstringtext3 0000                     sprintf@f 004A  
                   sprintf@s 0043                   _TX1STAbits 019E          transformCesar@value 0070  
