

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 15:27:52 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 06/07/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1719 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     008C                     	;# 
    80     008D                     	;# 
    81     008E                     	;# 
    82     008F                     	;# 
    83     0090                     	;# 
    84     0091                     	;# 
    85     0092                     	;# 
    86     0093                     	;# 
    87     0095                     	;# 
    88     0096                     	;# 
    89     0097                     	;# 
    90     0098                     	;# 
    91     0099                     	;# 
    92     009A                     	;# 
    93     009B                     	;# 
    94     009B                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     0110                     	;# 
   104     0111                     	;# 
   105     0112                     	;# 
   106     0113                     	;# 
   107     0114                     	;# 
   108     0115                     	;# 
   109     0116                     	;# 
   110     0117                     	;# 
   111     0118                     	;# 
   112     0119                     	;# 
   113     011A                     	;# 
   114     011B                     	;# 
   115     011B                     	;# 
   116     011C                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     018E                     	;# 
   120     018F                     	;# 
   121     0190                     	;# 
   122     0191                     	;# 
   123     0191                     	;# 
   124     0192                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0197                     	;# 
   131     0199                     	;# 
   132     0199                     	;# 
   133     0199                     	;# 
   134     019A                     	;# 
   135     019A                     	;# 
   136     019A                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019C                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019D                     	;# 
   147     019D                     	;# 
   148     019E                     	;# 
   149     019E                     	;# 
   150     019E                     	;# 
   151     019F                     	;# 
   152     019F                     	;# 
   153     019F                     	;# 
   154     019F                     	;# 
   155     019F                     	;# 
   156     020C                     	;# 
   157     020D                     	;# 
   158     020E                     	;# 
   159     020F                     	;# 
   160     0210                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     0212                     	;# 
   164     0212                     	;# 
   165     0213                     	;# 
   166     0213                     	;# 
   167     0214                     	;# 
   168     0214                     	;# 
   169     0215                     	;# 
   170     0215                     	;# 
   171     0215                     	;# 
   172     0215                     	;# 
   173     0216                     	;# 
   174     0216                     	;# 
   175     0217                     	;# 
   176     0217                     	;# 
   177     028C                     	;# 
   178     028D                     	;# 
   179     028E                     	;# 
   180     028F                     	;# 
   181     0290                     	;# 
   182     0291                     	;# 
   183     0291                     	;# 
   184     0292                     	;# 
   185     0293                     	;# 
   186     0293                     	;# 
   187     0298                     	;# 
   188     0298                     	;# 
   189     0299                     	;# 
   190     029A                     	;# 
   191     029A                     	;# 
   192     029E                     	;# 
   193     030C                     	;# 
   194     030D                     	;# 
   195     030E                     	;# 
   196     030F                     	;# 
   197     0310                     	;# 
   198     038C                     	;# 
   199     038D                     	;# 
   200     038E                     	;# 
   201     038F                     	;# 
   202     0390                     	;# 
   203     0391                     	;# 
   204     0392                     	;# 
   205     0393                     	;# 
   206     0394                     	;# 
   207     0395                     	;# 
   208     0396                     	;# 
   209     0397                     	;# 
   210     0398                     	;# 
   211     0399                     	;# 
   212     039D                     	;# 
   213     039E                     	;# 
   214     039F                     	;# 
   215     0415                     	;# 
   216     0416                     	;# 
   217     0417                     	;# 
   218     041C                     	;# 
   219     041D                     	;# 
   220     041E                     	;# 
   221     0498                     	;# 
   222     0498                     	;# 
   223     0499                     	;# 
   224     049A                     	;# 
   225     049B                     	;# 
   226     049B                     	;# 
   227     049C                     	;# 
   228     049D                     	;# 
   229     049E                     	;# 
   230     049F                     	;# 
   231     0511                     	;# 
   232     0515                     	;# 
   233     0617                     	;# 
   234     0618                     	;# 
   235     0619                     	;# 
   236     0619                     	;# 
   237     061A                     	;# 
   238     061B                     	;# 
   239     061C                     	;# 
   240     061C                     	;# 
   241     0691                     	;# 
   242     0692                     	;# 
   243     0693                     	;# 
   244     0694                     	;# 
   245     0695                     	;# 
   246     0696                     	;# 
   247     0697                     	;# 
   248     0698                     	;# 
   249     0699                     	;# 
   250     069A                     	;# 
   251     069B                     	;# 
   252     069C                     	;# 
   253     069D                     	;# 
   254     069E                     	;# 
   255     069F                     	;# 
   256     0E0F                     	;# 
   257     0E10                     	;# 
   258     0E11                     	;# 
   259     0E12                     	;# 
   260     0E13                     	;# 
   261     0E14                     	;# 
   262     0E15                     	;# 
   263     0E17                     	;# 
   264     0E20                     	;# 
   265     0E21                     	;# 
   266     0E22                     	;# 
   267     0E24                     	;# 
   268     0E25                     	;# 
   269     0E28                     	;# 
   270     0E29                     	;# 
   271     0E2A                     	;# 
   272     0E2B                     	;# 
   273     0E90                     	;# 
   274     0E91                     	;# 
   275     0E92                     	;# 
   276     0E93                     	;# 
   277     0E94                     	;# 
   278     0E95                     	;# 
   279     0E96                     	;# 
   280     0E97                     	;# 
   281     0E98                     	;# 
   282     0E99                     	;# 
   283     0E9A                     	;# 
   284     0E9B                     	;# 
   285     0E9C                     	;# 
   286     0E9D                     	;# 
   287     0E9E                     	;# 
   288     0E9F                     	;# 
   289     0EA0                     	;# 
   290     0EA1                     	;# 
   291     0EA2                     	;# 
   292     0EA3                     	;# 
   293     0EA4                     	;# 
   294     0EA5                     	;# 
   295     0EA6                     	;# 
   296     0EA7                     	;# 
   297     0EA8                     	;# 
   298     0EA9                     	;# 
   299     0EAA                     	;# 
   300     0EAB                     	;# 
   301     0EAC                     	;# 
   302     0EAD                     	;# 
   303     0EAE                     	;# 
   304     0EAF                     	;# 
   305     0EB0                     	;# 
   306     0EB1                     	;# 
   307     0EB2                     	;# 
   308     0F0F                     	;# 
   309     0F10                     	;# 
   310     0F11                     	;# 
   311     0F12                     	;# 
   312     0F13                     	;# 
   313     0F14                     	;# 
   314     0F15                     	;# 
   315     0F16                     	;# 
   316     0F17                     	;# 
   317     0F18                     	;# 
   318     0F19                     	;# 
   319     0F1A                     	;# 
   320     0F1B                     	;# 
   321     0F1C                     	;# 
   322     0F1D                     	;# 
   323     0F1E                     	;# 
   324     0F1F                     	;# 
   325     0F20                     	;# 
   326     0F21                     	;# 
   327     0F22                     	;# 
   328     0F23                     	;# 
   329     0F24                     	;# 
   330     0F25                     	;# 
   331     0F26                     	;# 
   332     0F27                     	;# 
   333     0F28                     	;# 
   334     0F29                     	;# 
   335     0F2A                     	;# 
   336     0F2B                     	;# 
   337     0F2C                     	;# 
   338     0F2D                     	;# 
   339     0F2E                     	;# 
   340     0F2F                     	;# 
   341     0F30                     	;# 
   342     0F31                     	;# 
   343     0F32                     	;# 
   344     0F33                     	;# 
   345     0F34                     	;# 
   346     0F35                     	;# 
   347     0F36                     	;# 
   348     0F37                     	;# 
   349     0FE4                     	;# 
   350     0FE5                     	;# 
   351     0FE6                     	;# 
   352     0FE7                     	;# 
   353     0FE8                     	;# 
   354     0FE9                     	;# 
   355     0FEA                     	;# 
   356     0FEB                     	;# 
   357     0FED                     	;# 
   358     0FEE                     	;# 
   359     0FEF                     	;# 
   360     0015                     _TMR0	set	21
   361     001B                     _PR2	set	27
   362     000B                     _INTCONbits	set	11
   363     001C                     _T2CONbits	set	28
   364     0011                     _PIR1bits	set	17
   365     0095                     _OPTION_REGbits	set	149
   366     0091                     _PIE1bits	set	145
   367     008D                     _TRISBbits	set	141
   368     008F                     _TRISDbits	set	143
   369     010D                     _LATBbits	set	269
   370     010F                     _LATDbits	set	271
   371                           
   372                           	psect	cinit
   373     0029                     start_initialization:	
   374                           ; #config settings
   375                           
   376     0029                     __initialization:
   377                           
   378                           ; Clear objects allocated to COMMON
   379     0029  01F7               	clrf	__pbssCOMMON& (0+127)
   380     002A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   381     002B                     end_of_initialization:	
   382                           ;End of C runtime variable initialization code
   383                           
   384     002B                     __end_of__initialization:
   385     002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   386     002C  0020               	movlb	0
   387     002D  3180  282F         	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	bssCOMMON
   390     0077                     __pbssCOMMON:
   391     0077                     _tick_count:
   392     0077                     	ds	2
   393                           
   394                           	psect	cstackCOMMON
   395     0070                     __pcstackCOMMON:
   396     0070                     ?_init_leds:
   397     0070                     ?_modif_led:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0070                     ??_modif_led:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0070                     ?_isr:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?___awmod:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ___awmod@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415                           
   416                           ; 2 bytes @ 0x0
   417     0070                     	ds	2
   418     0072                     ___awmod@dividend:
   419                           
   420                           ; 2 bytes @ 0x2
   421     0072                     	ds	2
   422     0074                     ??___awmod:
   423                           
   424                           ; 1 bytes @ 0x4
   425     0074                     	ds	1
   426     0075                     ___awmod@counter:
   427                           
   428                           ; 1 bytes @ 0x5
   429     0075                     	ds	1
   430     0076                     ___awmod@sign:
   431                           
   432                           ; 1 bytes @ 0x6
   433     0076                     	ds	1
   434     0077                     ??_isr:
   435                           
   436                           	psect	cstackBANK0
   437     0020                     __pcstackBANK0:	
   438                           ; 1 bytes @ 0x7
   439                           
   440     0020                     ??_init_leds:
   441     0020                     ??_main:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446     0020                     	ds	1
   447     0021                     main@i:
   448                           
   449                           ; 2 bytes @ 0x1
   450     0021                     	ds	2
   451     0023                     main@i_323:
   452                           
   453                           ; 2 bytes @ 0x3
   454     0023                     	ds	2
   455     0025                     main@i_324:
   456                           
   457                           ; 2 bytes @ 0x5
   458     0025                     	ds	2
   459     0027                     main@i_325:
   460                           
   461                           ; 2 bytes @ 0x7
   462     0027                     	ds	2
   463                           
   464                           	psect	maintext
   465     002F                     __pmaintext:	
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 91 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  i               2    7[BANK0 ] int 
   476 ;;  i               2    5[BANK0 ] int 
   477 ;;  i               2    3[BANK0 ] int 
   478 ;;  i               2    1[BANK0 ] int 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B1F/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   491 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        9 bytes
   493 ;; Hardware stack levels required when called: 3
   494 ;; This function calls:
   495 ;;		_init_leds
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501     002F                     _main:	
   502                           ;psect for function _main
   503                           
   504     002F                     l1019:	
   505                           ;incstack = 0
   506                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   507                           
   508                           
   509                           ;main.c: 93:     init_leds();
   510     002F  3181  2156  3180   	fcall	_init_leds
   511     0032                     l1021:
   512                           
   513                           ;main.c: 94:     T2CONbits.TMR2ON = 1;
   514     0032  0020               	movlb	0	; select bank0
   515     0033  151C               	bsf	28,2	;volatile
   516     0034                     l1023:
   517                           
   518                           ;main.c: 95:     T2CONbits.T2OUTPS = 7;
   519     0034  081C               	movf	28,w	;volatile
   520     0035  3987               	andlw	-121
   521     0036  3838               	iorlw	56
   522     0037  009C               	movwf	28	;volatile
   523     0038                     l1025:
   524                           
   525                           ;main.c: 96:     T2CONbits.T2CKPS = 0;
   526     0038  30FC               	movlw	-4
   527     0039  059C               	andwf	28,f	;volatile
   528     003A                     l1027:
   529                           
   530                           ;main.c: 98:     INTCONbits.GIE = 1;
   531     003A  178B               	bsf	11,7	;volatile
   532     003B                     l1029:
   533                           
   534                           ;main.c: 99:     INTCONbits.PEIE = 1;
   535     003B  170B               	bsf	11,6	;volatile
   536     003C                     l1031:
   537                           
   538                           ;main.c: 100:     PIE1bits.TMR2IE = 1;
   539     003C  0021               	movlb	1	; select bank1
   540     003D  1491               	bsf	17,1	;volatile
   541     003E                     l1033:
   542                           
   543                           ;main.c: 101:     PIR1bits.TMR2IF = 1;
   544     003E  0020               	movlb	0	; select bank0
   545     003F  1491               	bsf	17,1	;volatile
   546     0040                     l1035:
   547                           
   548                           ;main.c: 103:     OPTION_REGbits.PS = 3;
   549     0040  0021               	movlb	1	; select bank1
   550     0041  0815               	movf	21,w	;volatile
   551     0042  39F8               	andlw	-8
   552     0043  3803               	iorlw	3
   553     0044  0095               	movwf	21	;volatile
   554     0045                     l1037:
   555                           
   556                           ;main.c: 104:     OPTION_REGbits.PSA = 0;
   557     0045  1195               	bcf	21,3	;volatile
   558     0046                     l1039:
   559                           
   560                           ;main.c: 105:     OPTION_REGbits.TMR0CS = 0;
   561     0046  1295               	bcf	21,5	;volatile
   562     0047                     l1041:
   563                           
   564                           ;main.c: 108:     PR2 = 249;
   565     0047  30F9               	movlw	249
   566     0048  0020               	movlb	0	; select bank0
   567     0049  009B               	movwf	27	;volatile
   568     004A                     l1043:
   569                           
   570                           ;main.c: 110:         LATBbits.LATB3 = 1;
   571     004A  0022               	movlb	2	; select bank2
   572     004B  158D               	bsf	13,3	;volatile
   573     004C                     l1045:
   574                           
   575                           ;main.c: 111:         LATBbits.LATB0 = 0;
   576     004C  100D               	bcf	13,0	;volatile
   577     004D                     l1047:
   578                           
   579                           ;main.c: 112:         for (int i = 0; i <= 1000; i++) {
   580     004D  0020               	movlb	0	; select bank0
   581     004E  01A1               	clrf	main@i
   582     004F  01A2               	clrf	main@i+1
   583     0050                     l1053:
   584                           
   585                           ;main.c: 113:             TMR0 = 130;
   586     0050  3082               	movlw	130
   587     0051  0020               	movlb	0	; select bank0
   588     0052  0095               	movwf	21	;volatile
   589     0053                     l51:	
   590                           ;main.c: 115:             }
   591                           
   592                           
   593                           ;main.c: 114:             while(INTCONbits.TMR0IF == 0){
   594     0053  1D0B               	btfss	11,2	;volatile
   595     0054  2856               	goto	u391
   596     0055  2857               	goto	u390
   597     0056                     u391:
   598     0056  2853               	goto	l51
   599     0057                     u390:
   600     0057                     l53:
   601                           
   602                           ;main.c: 116:             INTCONbits.TMR0IF = 0;
   603     0057  110B               	bcf	11,2	;volatile
   604     0058                     l1055:
   605                           
   606                           ;main.c: 117:         }
   607     0058  3001               	movlw	1
   608     0059  0020               	movlb	0	; select bank0
   609     005A  07A1               	addwf	main@i,f
   610     005B  3000               	movlw	0
   611     005C  3DA2               	addwfc	main@i+1,f
   612     005D  0822               	movf	main@i+1,w
   613     005E  3A80               	xorlw	128
   614     005F  00A0               	movwf	??_main
   615     0060  3083               	movlw	131
   616     0061  0220               	subwf	??_main,w
   617     0062  1D03               	skipz
   618     0063  2866               	goto	u405
   619     0064  30E9               	movlw	233
   620     0065  0221               	subwf	main@i,w
   621     0066                     u405:
   622     0066  1C03               	skipc
   623     0067  2869               	goto	u401
   624     0068  286A               	goto	u400
   625     0069                     u401:
   626     0069  2850               	goto	l1053
   627     006A                     u400:
   628     006A                     l50:
   629                           
   630                           ;main.c: 119:         LATBbits.LATB2 = 1;
   631     006A  0022               	movlb	2	; select bank2
   632     006B  150D               	bsf	13,2	;volatile
   633                           
   634                           ;main.c: 120:         LATBbits.LATB3 = 0;
   635     006C  118D               	bcf	13,3	;volatile
   636     006D                     l1057:
   637                           
   638                           ;main.c: 122:         for (int i = 0; i <= 1000; i++) {
   639     006D  0020               	movlb	0	; select bank0
   640     006E  01A3               	clrf	main@i_323
   641     006F  01A4               	clrf	main@i_323+1
   642     0070                     l1063:
   643                           
   644                           ;main.c: 123:             TMR0 = 130;
   645     0070  3082               	movlw	130
   646     0071  0020               	movlb	0	; select bank0
   647     0072  0095               	movwf	21	;volatile
   648     0073                     l56:	
   649                           ;main.c: 125:             }
   650                           
   651                           
   652                           ;main.c: 124:             while(INTCONbits.TMR0IF == 0){
   653     0073  1D0B               	btfss	11,2	;volatile
   654     0074  2876               	goto	u411
   655     0075  2877               	goto	u410
   656     0076                     u411:
   657     0076  2873               	goto	l56
   658     0077                     u410:
   659     0077                     l58:
   660                           
   661                           ;main.c: 126:             INTCONbits.TMR0IF = 0;
   662     0077  110B               	bcf	11,2	;volatile
   663     0078                     l1065:
   664                           
   665                           ;main.c: 127:         }
   666     0078  3001               	movlw	1
   667     0079  0020               	movlb	0	; select bank0
   668     007A  07A3               	addwf	main@i_323,f
   669     007B  3000               	movlw	0
   670     007C  3DA4               	addwfc	main@i_323+1,f
   671     007D  0824               	movf	main@i_323+1,w
   672     007E  3A80               	xorlw	128
   673     007F  00A0               	movwf	??_main
   674     0080  3083               	movlw	131
   675     0081  0220               	subwf	??_main,w
   676     0082  1D03               	skipz
   677     0083  2886               	goto	u425
   678     0084  30E9               	movlw	233
   679     0085  0223               	subwf	main@i_323,w
   680     0086                     u425:
   681     0086  1C03               	skipc
   682     0087  2889               	goto	u421
   683     0088  288A               	goto	u420
   684     0089                     u421:
   685     0089  2870               	goto	l1063
   686     008A                     u420:
   687     008A                     l55:
   688                           
   689                           ;main.c: 129:         LATBbits.LATB1 = 1;
   690     008A  0022               	movlb	2	; select bank2
   691     008B  148D               	bsf	13,1	;volatile
   692                           
   693                           ;main.c: 130:         LATBbits.LATB2 = 0;
   694     008C  110D               	bcf	13,2	;volatile
   695     008D                     l1067:
   696                           
   697                           ;main.c: 132:         for (int i = 0; i <= 1000; i++) {
   698     008D  0020               	movlb	0	; select bank0
   699     008E  01A5               	clrf	main@i_324
   700     008F  01A6               	clrf	main@i_324+1
   701     0090                     l1073:
   702                           
   703                           ;main.c: 133:             TMR0 = 130;
   704     0090  3082               	movlw	130
   705     0091  0020               	movlb	0	; select bank0
   706     0092  0095               	movwf	21	;volatile
   707     0093                     l61:	
   708                           ;main.c: 135:             }
   709                           
   710                           
   711                           ;main.c: 134:             while(INTCONbits.TMR0IF == 0){
   712     0093  1D0B               	btfss	11,2	;volatile
   713     0094  2896               	goto	u431
   714     0095  2897               	goto	u430
   715     0096                     u431:
   716     0096  2893               	goto	l61
   717     0097                     u430:
   718     0097                     l63:
   719                           
   720                           ;main.c: 136:             INTCONbits.TMR0IF = 0;
   721     0097  110B               	bcf	11,2	;volatile
   722     0098                     l1075:
   723                           
   724                           ;main.c: 137:         }
   725     0098  3001               	movlw	1
   726     0099  0020               	movlb	0	; select bank0
   727     009A  07A5               	addwf	main@i_324,f
   728     009B  3000               	movlw	0
   729     009C  3DA6               	addwfc	main@i_324+1,f
   730     009D  0826               	movf	main@i_324+1,w
   731     009E  3A80               	xorlw	128
   732     009F  00A0               	movwf	??_main
   733     00A0  3083               	movlw	131
   734     00A1  0220               	subwf	??_main,w
   735     00A2  1D03               	skipz
   736     00A3  28A6               	goto	u445
   737     00A4  30E9               	movlw	233
   738     00A5  0225               	subwf	main@i_324,w
   739     00A6                     u445:
   740     00A6  1C03               	skipc
   741     00A7  28A9               	goto	u441
   742     00A8  28AA               	goto	u440
   743     00A9                     u441:
   744     00A9  2890               	goto	l1073
   745     00AA                     u440:
   746     00AA                     l60:
   747                           
   748                           ;main.c: 139:         LATBbits.LATB0 = 1;
   749     00AA  0022               	movlb	2	; select bank2
   750     00AB  140D               	bsf	13,0	;volatile
   751                           
   752                           ;main.c: 140:         LATBbits.LATB1 = 0;
   753     00AC  108D               	bcf	13,1	;volatile
   754     00AD                     l1077:
   755                           
   756                           ;main.c: 142:         for (int i = 0; i <= 1000; i++) {
   757     00AD  0020               	movlb	0	; select bank0
   758     00AE  01A7               	clrf	main@i_325
   759     00AF  01A8               	clrf	main@i_325+1
   760     00B0                     l1083:
   761                           
   762                           ;main.c: 143:             TMR0 = 130;
   763     00B0  3082               	movlw	130
   764     00B1  0020               	movlb	0	; select bank0
   765     00B2  0095               	movwf	21	;volatile
   766     00B3                     l66:	
   767                           ;main.c: 145:             }
   768                           
   769                           
   770                           ;main.c: 144:             while(INTCONbits.TMR0IF == 0){
   771     00B3  1D0B               	btfss	11,2	;volatile
   772     00B4  28B6               	goto	u451
   773     00B5  28B7               	goto	u450
   774     00B6                     u451:
   775     00B6  28B3               	goto	l66
   776     00B7                     u450:
   777     00B7                     l68:
   778                           
   779                           ;main.c: 146:             INTCONbits.TMR0IF = 0;
   780     00B7  110B               	bcf	11,2	;volatile
   781     00B8                     l1085:
   782                           
   783                           ;main.c: 147:         }
   784     00B8  3001               	movlw	1
   785     00B9  0020               	movlb	0	; select bank0
   786     00BA  07A7               	addwf	main@i_325,f
   787     00BB  3000               	movlw	0
   788     00BC  3DA8               	addwfc	main@i_325+1,f
   789     00BD  0828               	movf	main@i_325+1,w
   790     00BE  3A80               	xorlw	128
   791     00BF  00A0               	movwf	??_main
   792     00C0  3083               	movlw	131
   793     00C1  0220               	subwf	??_main,w
   794     00C2  1D03               	skipz
   795     00C3  28C6               	goto	u465
   796     00C4  30E9               	movlw	233
   797     00C5  0227               	subwf	main@i_325,w
   798     00C6                     u465:
   799     00C6  1C03               	skipc
   800     00C7  28C9               	goto	u461
   801     00C8  28CA               	goto	u460
   802     00C9                     u461:
   803     00C9  28B0               	goto	l1083
   804     00CA                     u460:
   805     00CA  284A               	goto	l1043
   806     00CB  3180  2827         	ljmp	start
   807     00CD                     __end_of_main:
   808                           
   809                           	psect	text1
   810     0156                     __ptext1:	
   811 ;; *************** function _init_leds *****************
   812 ;; Defined at:
   813 ;;		line 32 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		None
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     0156                     _init_leds:	
   842                           ;psect for function _init_leds
   843                           
   844     0156                     l1017:	
   845                           ;incstack = 0
   846                           ; Regs used in _init_leds: []
   847                           
   848                           
   849                           ;main.c: 33:     TRISDbits.TRISD0 = 0;
   850     0156  0021               	movlb	1	; select bank1
   851     0157  100F               	bcf	15,0	;volatile
   852                           
   853                           ;main.c: 34:     TRISDbits.TRISD1 = 0;
   854     0158  108F               	bcf	15,1	;volatile
   855                           
   856                           ;main.c: 35:     TRISDbits.TRISD2 = 0;
   857     0159  110F               	bcf	15,2	;volatile
   858                           
   859                           ;main.c: 36:     TRISDbits.TRISD3 = 0;
   860     015A  118F               	bcf	15,3	;volatile
   861                           
   862                           ;main.c: 37:     TRISBbits.TRISB0 = 0;
   863     015B  100D               	bcf	13,0	;volatile
   864                           
   865                           ;main.c: 38:     TRISBbits.TRISB1 = 0;
   866     015C  108D               	bcf	13,1	;volatile
   867                           
   868                           ;main.c: 39:     TRISBbits.TRISB2 = 0;
   869     015D  110D               	bcf	13,2	;volatile
   870                           
   871                           ;main.c: 40:     TRISBbits.TRISB3 = 0;
   872     015E  118D               	bcf	13,3	;volatile
   873     015F                     l27:
   874     015F  0008               	return
   875     0160                     __end_of_init_leds:
   876                           
   877                           	psect	intentry
   878     0004                     __pintentry:	
   879 ;; *************** function _isr *****************
   880 ;; Defined at:
   881 ;;		line 81 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; Hardware stack levels required when called: 1
   902 ;; This function calls:
   903 ;;		___awmod
   904 ;;		_modif_led
   905 ;; This function is called by:
   906 ;;		Interrupt level 1
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910     0004                     _isr:
   911                           
   912                           ;incstack = 0
   913     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   914                           
   915                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   916     0005  3180               	pagesel	$
   917     0006                     i1l859:
   918                           
   919                           ;main.c: 82:     if (PIR1bits.TMR2IF == 1) {
   920     0006  0020               	movlb	0	; select bank0
   921     0007  1C91               	btfss	17,1	;volatile
   922     0008  280A               	goto	u29_21
   923     0009  280B               	goto	u29_20
   924     000A                     u29_21:
   925     000A  2825               	goto	i1l43
   926     000B                     u29_20:
   927     000B                     i1l861:
   928                           
   929                           ;main.c: 83:         tick_count++;
   930     000B  3001               	movlw	1
   931     000C  07F7               	addwf	_tick_count,f
   932     000D  3000               	movlw	0
   933     000E  3DF8               	addwfc	_tick_count+1,f
   934     000F                     i1l863:
   935                           
   936                           ;main.c: 84:         if (!(tick_count % 125)) {
   937     000F  307D               	movlw	125
   938     0010  00F0               	movwf	___awmod@divisor
   939     0011  3000               	movlw	0
   940     0012  00F1               	movwf	___awmod@divisor+1
   941     0013  0878               	movf	_tick_count+1,w
   942     0014  00F3               	movwf	___awmod@dividend+1
   943     0015  0877               	movf	_tick_count,w
   944     0016  00F2               	movwf	___awmod@dividend
   945     0017  3180  20CD  3180   	fcall	___awmod
   946     001A  0870               	movf	?___awmod,w
   947     001B  0471               	iorwf	?___awmod+1,w
   948     001C  1D03               	btfss	3,2
   949     001D  281F               	goto	u30_21
   950     001E  2820               	goto	u30_20
   951     001F                     u30_21:
   952     001F  2823               	goto	i1l867
   953     0020                     u30_20:
   954     0020                     i1l865:
   955                           
   956                           ;main.c: 85:             modif_led();
   957     0020  3181  2120  3180   	fcall	_modif_led
   958     0023                     i1l867:
   959                           
   960                           ;main.c: 87:         PIR1bits.TMR2IF = 0;
   961     0023  0020               	movlb	0	; select bank0
   962     0024  1091               	bcf	17,1	;volatile
   963     0025                     i1l43:
   964     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   965     0026  0009               	retfie
   966     0027                     __end_of_isr:
   967                           
   968                           	psect	text3
   969     0120                     __ptext3:	
   970 ;; *************** function _modif_led *****************
   971 ;; Defined at:
   972 ;;		line 43 in file "main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   990 ;;Total ram usage:        0 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_isr
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999     0120                     _modif_led:	
  1000                           ;psect for function _modif_led
  1001                           
  1002     0120                     i1l599:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _modif_led: [wreg-fsr0h+status,2+status,0]
  1005                           
  1006                           
  1007                           ;main.c: 44:     switch(tick_count) {
  1008     0120  2933               	goto	i1l605
  1009     0121                     i1l31:	
  1010                           ;main.c: 49:         case 250:
  1011                           
  1012                           
  1013                           ;main.c: 50:             LATDbits.LATD0 = 0;
  1014     0121  0022               	movlb	2	; select bank2
  1015     0122  100F               	bcf	15,0	;volatile
  1016                           
  1017                           ;main.c: 51:             LATDbits.LATD1 = 1;
  1018     0123  148F               	bsf	15,1	;volatile
  1019                           
  1020                           ;main.c: 52:             break;
  1021     0124  2955               	goto	i1l36
  1022     0125                     i1l33:	
  1023                           ;main.c: 57:         case 500:
  1024                           
  1025                           
  1026                           ;main.c: 58:             LATDbits.LATD1 = 0;
  1027     0125  0022               	movlb	2	; select bank2
  1028     0126  108F               	bcf	15,1	;volatile
  1029                           
  1030                           ;main.c: 59:             LATDbits.LATD2 = 1;
  1031     0127  150F               	bsf	15,2	;volatile
  1032                           
  1033                           ;main.c: 60:             break;
  1034     0128  2955               	goto	i1l36
  1035     0129                     i1l34:	
  1036                           ;main.c: 65:         case 750:
  1037                           
  1038                           
  1039                           ;main.c: 66:             LATDbits.LATD2 = 0;
  1040     0129  0022               	movlb	2	; select bank2
  1041     012A  110F               	bcf	15,2	;volatile
  1042                           
  1043                           ;main.c: 67:             LATDbits.LATD3 = 1;
  1044     012B  158F               	bsf	15,3	;volatile
  1045                           
  1046                           ;main.c: 68:             break;
  1047     012C  2955               	goto	i1l36
  1048     012D                     i1l35:	
  1049                           ;main.c: 73:         case 1000:
  1050                           
  1051                           
  1052                           ;main.c: 74:             LATDbits.LATD3 = 0;
  1053     012D  0022               	movlb	2	; select bank2
  1054     012E  118F               	bcf	15,3	;volatile
  1055                           
  1056                           ;main.c: 75:             LATDbits.LATD0 = 1;
  1057     012F  140F               	bsf	15,0	;volatile
  1058     0130                     i1l601:
  1059                           
  1060                           ;main.c: 76:             tick_count = 0;
  1061     0130  01F7               	clrf	_tick_count
  1062     0131  01F8               	clrf	_tick_count+1
  1063                           
  1064                           ;main.c: 77:             break;
  1065     0132  2955               	goto	i1l36
  1066     0133                     i1l605:
  1067                           
  1068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 4, Range of values is 0 to 3
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte           13     7 (average)
  1074                           ; direct_byte           14     6 (fixed)
  1075                           ; jumptable            260     6 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077     0133  0878               	movf	_tick_count+1,w
  1078     0134  3A00               	xorlw	0	; case 0
  1079     0135  1903               	skipnz
  1080     0136  2941               	goto	i1l1167
  1081     0137  3A01               	xorlw	1	; case 1
  1082     0138  1903               	skipnz
  1083     0139  2946               	goto	i1l1169
  1084     013A  3A03               	xorlw	3	; case 2
  1085     013B  1903               	skipnz
  1086     013C  294B               	goto	i1l1171
  1087     013D  3A01               	xorlw	1	; case 3
  1088     013E  1903               	skipnz
  1089     013F  2950               	goto	i1l1173
  1090     0140  2955               	goto	i1l36
  1091     0141                     i1l1167:
  1092                           
  1093                           ; Switch size 1, requested type "simple"
  1094                           ; Number of cases is 1, Range of values is 250 to 250
  1095                           ; switch strategies available:
  1096                           ; Name         Instructions Cycles
  1097                           ; simple_byte            4     3 (average)
  1098                           ; direct_byte           11     9 (fixed)
  1099                           ; jumptable            263     9 (fixed)
  1100                           ;	Chosen strategy is simple_byte
  1101     0141  0877               	movf	_tick_count,w
  1102     0142  3AFA               	xorlw	250	; case 250
  1103     0143  1903               	skipnz
  1104     0144  2921               	goto	i1l31
  1105     0145  2955               	goto	i1l36
  1106     0146                     i1l1169:
  1107                           
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 244 to 244
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ; direct_byte           11     9 (fixed)
  1114                           ; jumptable            263     9 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116     0146  0877               	movf	_tick_count,w
  1117     0147  3AF4               	xorlw	244	; case 244
  1118     0148  1903               	skipnz
  1119     0149  2925               	goto	i1l33
  1120     014A  2955               	goto	i1l36
  1121     014B                     i1l1171:
  1122                           
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 1, Range of values is 238 to 238
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte            4     3 (average)
  1128                           ; direct_byte           11     9 (fixed)
  1129                           ; jumptable            263     9 (fixed)
  1130                           ;	Chosen strategy is simple_byte
  1131     014B  0877               	movf	_tick_count,w
  1132     014C  3AEE               	xorlw	238	; case 238
  1133     014D  1903               	skipnz
  1134     014E  2929               	goto	i1l34
  1135     014F  2955               	goto	i1l36
  1136     0150                     i1l1173:
  1137                           
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 1, Range of values is 232 to 232
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte            4     3 (average)
  1143                           ; direct_byte           11     9 (fixed)
  1144                           ; jumptable            263     9 (fixed)
  1145                           ;	Chosen strategy is simple_byte
  1146     0150  0877               	movf	_tick_count,w
  1147     0151  3AE8               	xorlw	232	; case 232
  1148     0152  1903               	skipnz
  1149     0153  292D               	goto	i1l35
  1150     0154  2955               	goto	i1l36
  1151     0155                     i1l36:
  1152     0155  0008               	return
  1153     0156                     __end_of_modif_led:
  1154                           
  1155                           	psect	text4
  1156     00CD                     __ptext4:	
  1157 ;; *************** function ___awmod *****************
  1158 ;; Defined at:
  1159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  divisor         2    0[COMMON] int 
  1162 ;;  dividend        2    2[COMMON] int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  sign            1    6[COMMON] unsigned char 
  1165 ;;  counter         1    5[COMMON] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  2    0[COMMON] int 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1178 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1179 ;;Total ram usage:        7 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_isr
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188     00CD                     ___awmod:	
  1189                           ;psect for function ___awmod
  1190                           
  1191     00CD                     i1l821:	
  1192                           ;incstack = 0
  1193                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1194                           
  1195     00CD  01F6               	clrf	___awmod@sign
  1196     00CE                     i1l823:
  1197     00CE  1FF3               	btfss	___awmod@dividend+1,7
  1198     00CF  28D1               	goto	u20_21
  1199     00D0  28D2               	goto	u20_20
  1200     00D1                     u20_21:
  1201     00D1  28D9               	goto	i1l829
  1202     00D2                     u20_20:
  1203     00D2                     i1l825:
  1204     00D2  09F2               	comf	___awmod@dividend,f
  1205     00D3  09F3               	comf	___awmod@dividend+1,f
  1206     00D4  0AF2               	incf	___awmod@dividend,f
  1207     00D5  1903               	skipnz
  1208     00D6  0AF3               	incf	___awmod@dividend+1,f
  1209     00D7                     i1l827:
  1210     00D7  01F6               	clrf	___awmod@sign
  1211     00D8  0AF6               	incf	___awmod@sign,f
  1212     00D9                     i1l829:
  1213     00D9  1FF1               	btfss	___awmod@divisor+1,7
  1214     00DA  28DC               	goto	u21_21
  1215     00DB  28DD               	goto	u21_20
  1216     00DC                     u21_21:
  1217     00DC  28E2               	goto	i1l833
  1218     00DD                     u21_20:
  1219     00DD                     i1l831:
  1220     00DD  09F0               	comf	___awmod@divisor,f
  1221     00DE  09F1               	comf	___awmod@divisor+1,f
  1222     00DF  0AF0               	incf	___awmod@divisor,f
  1223     00E0  1903               	skipnz
  1224     00E1  0AF1               	incf	___awmod@divisor+1,f
  1225     00E2                     i1l833:
  1226     00E2  0870               	movf	___awmod@divisor,w
  1227     00E3  0471               	iorwf	___awmod@divisor+1,w
  1228     00E4  1903               	btfsc	3,2
  1229     00E5  28E7               	goto	u22_21
  1230     00E6  28E8               	goto	u22_20
  1231     00E7                     u22_21:
  1232     00E7  2911               	goto	i1l851
  1233     00E8                     u22_20:
  1234     00E8                     i1l835:
  1235     00E8  01F5               	clrf	___awmod@counter
  1236     00E9  0AF5               	incf	___awmod@counter,f
  1237     00EA  28F4               	goto	i1l841
  1238     00EB                     i1l837:
  1239     00EB  3001               	movlw	1
  1240     00EC                     u23_25:
  1241     00EC  35F0               	lslf	___awmod@divisor,f
  1242     00ED  0DF1               	rlf	___awmod@divisor+1,f
  1243     00EE  0B89               	decfsz	9,f
  1244     00EF  28EC               	goto	u23_25
  1245     00F0                     i1l839:
  1246     00F0  3001               	movlw	1
  1247     00F1  00F4               	movwf	??___awmod
  1248     00F2  0874               	movf	??___awmod,w
  1249     00F3  07F5               	addwf	___awmod@counter,f
  1250     00F4                     i1l841:
  1251     00F4  1FF1               	btfss	___awmod@divisor+1,7
  1252     00F5  28F7               	goto	u24_21
  1253     00F6  28F8               	goto	u24_20
  1254     00F7                     u24_21:
  1255     00F7  28EB               	goto	i1l837
  1256     00F8                     u24_20:
  1257     00F8                     i1l843:
  1258     00F8  0871               	movf	___awmod@divisor+1,w
  1259     00F9  0273               	subwf	___awmod@dividend+1,w
  1260     00FA  1D03               	skipz
  1261     00FB  28FE               	goto	u25_25
  1262     00FC  0870               	movf	___awmod@divisor,w
  1263     00FD  0272               	subwf	___awmod@dividend,w
  1264     00FE                     u25_25:
  1265     00FE  1C03               	skipc
  1266     00FF  2901               	goto	u25_21
  1267     0100  2902               	goto	u25_20
  1268     0101                     u25_21:
  1269     0101  2906               	goto	i1l847
  1270     0102                     u25_20:
  1271     0102                     i1l845:
  1272     0102  0870               	movf	___awmod@divisor,w
  1273     0103  02F2               	subwf	___awmod@dividend,f
  1274     0104  0871               	movf	___awmod@divisor+1,w
  1275     0105  3BF3               	subwfb	___awmod@dividend+1,f
  1276     0106                     i1l847:
  1277     0106  3001               	movlw	1
  1278     0107                     u26_25:
  1279     0107  36F1               	lsrf	___awmod@divisor+1,f
  1280     0108  0CF0               	rrf	___awmod@divisor,f
  1281     0109  0B89               	decfsz	9,f
  1282     010A  2907               	goto	u26_25
  1283     010B                     i1l849:
  1284     010B  3001               	movlw	1
  1285     010C  02F5               	subwf	___awmod@counter,f
  1286     010D  1D03               	btfss	3,2
  1287     010E  2910               	goto	u27_21
  1288     010F  2911               	goto	u27_20
  1289     0110                     u27_21:
  1290     0110  28F8               	goto	i1l843
  1291     0111                     u27_20:
  1292     0111                     i1l851:
  1293     0111  0876               	movf	___awmod@sign,w
  1294     0112  1903               	btfsc	3,2
  1295     0113  2915               	goto	u28_21
  1296     0114  2916               	goto	u28_20
  1297     0115                     u28_21:
  1298     0115  291B               	goto	i1l855
  1299     0116                     u28_20:
  1300     0116                     i1l853:
  1301     0116  09F2               	comf	___awmod@dividend,f
  1302     0117  09F3               	comf	___awmod@dividend+1,f
  1303     0118  0AF2               	incf	___awmod@dividend,f
  1304     0119  1903               	skipnz
  1305     011A  0AF3               	incf	___awmod@dividend+1,f
  1306     011B                     i1l855:
  1307     011B  0873               	movf	___awmod@dividend+1,w
  1308     011C  00F1               	movwf	?___awmod+1
  1309     011D  0872               	movf	___awmod@dividend,w
  1310     011E  00F0               	movwf	?___awmod
  1311     011F                     i1l305:
  1312     011F  0008               	return
  1313     0120                     __end_of___awmod:
  1314     007E                     btemp	set	126	;btemp
  1315     007E                     int$flags	set	126
  1316     007E                     wtemp0	set	126
  1317                           
  1318                           	psect	config
  1319                           
  1320                           ;Config register CONFIG1 @ 0x8007
  1321                           ;	Oscillator Selection Bits
  1322                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1323                           ;	Watchdog Timer Enable
  1324                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  1325                           ;	Power-up Timer Enable
  1326                           ;	PWRTE = OFF, PWRT disabled
  1327                           ;	MCLR Pin Function Select
  1328                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1329                           ;	Flash Program Memory Code Protection
  1330                           ;	CP = OFF, Program memory code protection is disabled
  1331                           ;	Brown-out Reset Enable
  1332                           ;	BOREN = ON, Brown-out Reset enabled
  1333                           ;	Clock Out Enable
  1334                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1335                           ;	Internal/External Switchover Mode
  1336                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1337                           ;	Fail-Safe Clock Monitor Enable
  1338                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1339     8007                     	org	32775
  1340     8007  3FEA               	dw	16362
  1341                           
  1342                           ;Config register CONFIG2 @ 0x8008
  1343                           ;	Flash Memory Self-Write Protection
  1344                           ;	WRT = OFF, Write protection off
  1345                           ;	Peripheral Pin Select one-way control
  1346                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  1347                           ;	Zero-cross detect disable
  1348                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1349                           ;	Phase Lock Loop enable
  1350                           ;	PLLEN = OFF, 4x PLL is disabled
  1351                           ;	Stack Overflow/Underflow Reset Enable
  1352                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1353                           ;	Brown-out Reset Voltage Selection
  1354                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1355                           ;	Low-Power Brown Out Reset
  1356                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1357                           ;	In-Circuit Debugger Mode
  1358                           ;	DEBUG = 0x1, unprogrammed default
  1359                           ;	Low-Voltage Programming Enable
  1360                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1361     8008                     	org	32776
  1362     8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      9       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     272
                                              0 BANK0      9     9      0
                          _init_leds
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  0     0      0     448
                            ___awmod
                          _modif_led
 ---------------------------------------------------------------------------------
 (3) _modif_led                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_leds

 _isr (ROOT)
   ___awmod
   _modif_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      12      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      12      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 15:27:52 2024

                     l50 006A                       l27 015F                       l51 0053  
                     l60 00AA                       l61 0093                       l53 0057  
                     l63 0097                       l55 008A                       l56 0073  
                     l66 00B3                       l58 0077                       l68 00B7  
                    u400 006A                      u401 0069                      u410 0077  
                    u411 0076                      u420 008A                      u421 0089  
                    u405 0066                      u430 0097                      _PR2 001B  
                    u431 0096                      u440 00AA                      u441 00A9  
                    u425 0086                      u450 00B7                      u451 00B6  
                    u460 00CA                      u461 00C9                      u445 00A6  
                    u390 0057                      u391 0056                      u465 00C6  
                    _isr 0004             ___awmod@sign 0076                      wreg 0009  
                   l1021 0032                     l1031 003C                     l1023 0034  
                   l1017 0156                     l1041 0047                     l1033 003E  
                   l1025 0038                     l1043 004A                     l1035 0040  
                   l1027 003A                     l1019 002F                     l1053 0050  
                   l1045 004C                     l1037 0045                     l1029 003B  
                   l1063 0070                     l1055 0058                     l1047 004D  
                   l1039 0046                     l1073 0090                     l1065 0078  
                   l1057 006D                     l1083 00B0                     l1075 0098  
                   l1067 008D                     l1085 00B8                     l1077 00AD  
                   ?_isr 0070                     i1l31 0121                     i1l33 0125  
                   i1l34 0129                     i1l35 012D                     i1l43 0025  
                   i1l36 0155                     _TMR0 0015                     _main 002F  
                   btemp 007E                     start 0027                    ??_isr 0077  
                  ?_main 0070          __end_of___awmod 0120                    i1l305 011F  
                  i1l601 0130                    i1l605 0133                    i1l821 00CD  
                  i1l831 00DD                    i1l823 00CE                    i1l841 00F4  
                  i1l833 00E2                    i1l825 00D2                    i1l843 00F8  
                  i1l835 00E8                    i1l851 0111                    i1l827 00D7  
                  i1l853 0116                    i1l845 0102                    i1l837 00EB  
                  i1l829 00D9                    i1l861 000B                    i1l855 011B  
                  i1l847 0106                    i1l839 00F0                    i1l599 0120  
                  i1l863 000F                    i1l849 010B                    i1l865 0020  
                  i1l867 0023                    i1l859 0006                    u20_20 00D2  
                  u20_21 00D1                    u21_20 00DD                    u21_21 00DC  
                  u22_20 00E8                    u30_20 0020                    u22_21 00E7  
                  u30_21 001F                    u23_25 00EC                    u24_20 00F8  
                  u24_21 00F7                    u25_20 0102                    u25_21 0101  
                  u25_25 00FE                    u26_25 0107                    u27_20 0111  
                  u27_21 0110                    u28_20 0116                    u28_21 0115  
                  u29_20 000B                    u29_21 000A                    main@i 0021  
                  status 0003                    wtemp0 007E          __initialization 0029  
           __end_of_main 00CD                   ??_main 0020                   i1l1171 014B  
                 i1l1173 0150                   i1l1167 0141                   i1l1169 0146  
              ??___awmod 0074          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 002B           __pcstackCOMMON 0070           _OPTION_REGbits 0095  
             __pmaintext 002F               __pintentry 0004                  ___awmod 00CD  
                __ptext1 0156                  __ptext3 0120                  __ptext4 00CD  
              _T2CONbits 001C        __end_of_init_leds 0160         ___awmod@dividend 0072  
      __end_of_modif_led 0156     end_of_initialization 002B               _tick_count 0077  
              _TRISBbits 008D                _TRISDbits 008F      start_initialization 0029  
            __end_of_isr 0027              __pbssCOMMON 0077                ___latbits 0003  
          __pcstackBANK0 0020                 ?___awmod 0070                _init_leds 0156  
              _modif_led 0120                 _LATBbits 010D                 _LATDbits 010F  
               _PIE1bits 0091                 _PIR1bits 0011                main@i_323 0023  
              main@i_324 0025                main@i_325 0027               ?_init_leds 0070  
             ?_modif_led 0070                 int$flags 007E               _INTCONbits 000B  
            ??_init_leds 0020                 intlevel1 0000              ??_modif_led 0070  
