

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 16:32:49 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 06/07/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1719 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     008C                     	;# 
    80     008D                     	;# 
    81     008E                     	;# 
    82     008F                     	;# 
    83     0090                     	;# 
    84     0091                     	;# 
    85     0092                     	;# 
    86     0093                     	;# 
    87     0095                     	;# 
    88     0096                     	;# 
    89     0097                     	;# 
    90     0098                     	;# 
    91     0099                     	;# 
    92     009A                     	;# 
    93     009B                     	;# 
    94     009B                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     0110                     	;# 
   104     0111                     	;# 
   105     0112                     	;# 
   106     0113                     	;# 
   107     0114                     	;# 
   108     0115                     	;# 
   109     0116                     	;# 
   110     0117                     	;# 
   111     0118                     	;# 
   112     0119                     	;# 
   113     011A                     	;# 
   114     011B                     	;# 
   115     011B                     	;# 
   116     011C                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     018E                     	;# 
   120     018F                     	;# 
   121     0190                     	;# 
   122     0191                     	;# 
   123     0191                     	;# 
   124     0192                     	;# 
   125     0193                     	;# 
   126     0193                     	;# 
   127     0194                     	;# 
   128     0195                     	;# 
   129     0196                     	;# 
   130     0197                     	;# 
   131     0199                     	;# 
   132     0199                     	;# 
   133     0199                     	;# 
   134     019A                     	;# 
   135     019A                     	;# 
   136     019A                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019C                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019D                     	;# 
   147     019D                     	;# 
   148     019E                     	;# 
   149     019E                     	;# 
   150     019E                     	;# 
   151     019F                     	;# 
   152     019F                     	;# 
   153     019F                     	;# 
   154     019F                     	;# 
   155     019F                     	;# 
   156     020C                     	;# 
   157     020D                     	;# 
   158     020E                     	;# 
   159     020F                     	;# 
   160     0210                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     0212                     	;# 
   164     0212                     	;# 
   165     0213                     	;# 
   166     0213                     	;# 
   167     0214                     	;# 
   168     0214                     	;# 
   169     0215                     	;# 
   170     0215                     	;# 
   171     0215                     	;# 
   172     0215                     	;# 
   173     0216                     	;# 
   174     0216                     	;# 
   175     0217                     	;# 
   176     0217                     	;# 
   177     028C                     	;# 
   178     028D                     	;# 
   179     028E                     	;# 
   180     028F                     	;# 
   181     0290                     	;# 
   182     0291                     	;# 
   183     0291                     	;# 
   184     0292                     	;# 
   185     0293                     	;# 
   186     0293                     	;# 
   187     0298                     	;# 
   188     0298                     	;# 
   189     0299                     	;# 
   190     029A                     	;# 
   191     029A                     	;# 
   192     029E                     	;# 
   193     030C                     	;# 
   194     030D                     	;# 
   195     030E                     	;# 
   196     030F                     	;# 
   197     0310                     	;# 
   198     038C                     	;# 
   199     038D                     	;# 
   200     038E                     	;# 
   201     038F                     	;# 
   202     0390                     	;# 
   203     0391                     	;# 
   204     0392                     	;# 
   205     0393                     	;# 
   206     0394                     	;# 
   207     0395                     	;# 
   208     0396                     	;# 
   209     0397                     	;# 
   210     0398                     	;# 
   211     0399                     	;# 
   212     039D                     	;# 
   213     039E                     	;# 
   214     039F                     	;# 
   215     0415                     	;# 
   216     0416                     	;# 
   217     0417                     	;# 
   218     041C                     	;# 
   219     041D                     	;# 
   220     041E                     	;# 
   221     0498                     	;# 
   222     0498                     	;# 
   223     0499                     	;# 
   224     049A                     	;# 
   225     049B                     	;# 
   226     049B                     	;# 
   227     049C                     	;# 
   228     049D                     	;# 
   229     049E                     	;# 
   230     049F                     	;# 
   231     0511                     	;# 
   232     0515                     	;# 
   233     0617                     	;# 
   234     0618                     	;# 
   235     0619                     	;# 
   236     0619                     	;# 
   237     061A                     	;# 
   238     061B                     	;# 
   239     061C                     	;# 
   240     061C                     	;# 
   241     0691                     	;# 
   242     0692                     	;# 
   243     0693                     	;# 
   244     0694                     	;# 
   245     0695                     	;# 
   246     0696                     	;# 
   247     0697                     	;# 
   248     0698                     	;# 
   249     0699                     	;# 
   250     069A                     	;# 
   251     069B                     	;# 
   252     069C                     	;# 
   253     069D                     	;# 
   254     069E                     	;# 
   255     069F                     	;# 
   256     0E0F                     	;# 
   257     0E10                     	;# 
   258     0E11                     	;# 
   259     0E12                     	;# 
   260     0E13                     	;# 
   261     0E14                     	;# 
   262     0E15                     	;# 
   263     0E17                     	;# 
   264     0E20                     	;# 
   265     0E21                     	;# 
   266     0E22                     	;# 
   267     0E24                     	;# 
   268     0E25                     	;# 
   269     0E28                     	;# 
   270     0E29                     	;# 
   271     0E2A                     	;# 
   272     0E2B                     	;# 
   273     0E90                     	;# 
   274     0E91                     	;# 
   275     0E92                     	;# 
   276     0E93                     	;# 
   277     0E94                     	;# 
   278     0E95                     	;# 
   279     0E96                     	;# 
   280     0E97                     	;# 
   281     0E98                     	;# 
   282     0E99                     	;# 
   283     0E9A                     	;# 
   284     0E9B                     	;# 
   285     0E9C                     	;# 
   286     0E9D                     	;# 
   287     0E9E                     	;# 
   288     0E9F                     	;# 
   289     0EA0                     	;# 
   290     0EA1                     	;# 
   291     0EA2                     	;# 
   292     0EA3                     	;# 
   293     0EA4                     	;# 
   294     0EA5                     	;# 
   295     0EA6                     	;# 
   296     0EA7                     	;# 
   297     0EA8                     	;# 
   298     0EA9                     	;# 
   299     0EAA                     	;# 
   300     0EAB                     	;# 
   301     0EAC                     	;# 
   302     0EAD                     	;# 
   303     0EAE                     	;# 
   304     0EAF                     	;# 
   305     0EB0                     	;# 
   306     0EB1                     	;# 
   307     0EB2                     	;# 
   308     0F0F                     	;# 
   309     0F10                     	;# 
   310     0F11                     	;# 
   311     0F12                     	;# 
   312     0F13                     	;# 
   313     0F14                     	;# 
   314     0F15                     	;# 
   315     0F16                     	;# 
   316     0F17                     	;# 
   317     0F18                     	;# 
   318     0F19                     	;# 
   319     0F1A                     	;# 
   320     0F1B                     	;# 
   321     0F1C                     	;# 
   322     0F1D                     	;# 
   323     0F1E                     	;# 
   324     0F1F                     	;# 
   325     0F20                     	;# 
   326     0F21                     	;# 
   327     0F22                     	;# 
   328     0F23                     	;# 
   329     0F24                     	;# 
   330     0F25                     	;# 
   331     0F26                     	;# 
   332     0F27                     	;# 
   333     0F28                     	;# 
   334     0F29                     	;# 
   335     0F2A                     	;# 
   336     0F2B                     	;# 
   337     0F2C                     	;# 
   338     0F2D                     	;# 
   339     0F2E                     	;# 
   340     0F2F                     	;# 
   341     0F30                     	;# 
   342     0F31                     	;# 
   343     0F32                     	;# 
   344     0F33                     	;# 
   345     0F34                     	;# 
   346     0F35                     	;# 
   347     0F36                     	;# 
   348     0F37                     	;# 
   349     0FE4                     	;# 
   350     0FE5                     	;# 
   351     0FE6                     	;# 
   352     0FE7                     	;# 
   353     0FE8                     	;# 
   354     0FE9                     	;# 
   355     0FEA                     	;# 
   356     0FEB                     	;# 
   357     0FED                     	;# 
   358     0FEE                     	;# 
   359     0FEF                     	;# 
   360     0015                     _TMR0	set	21
   361     001B                     _PR2	set	27
   362     000B                     _INTCONbits	set	11
   363     0011                     _PIR1bits	set	17
   364     001C                     _T2CONbits	set	28
   365     0095                     _OPTION_REGbits	set	149
   366     0091                     _PIE1bits	set	145
   367     008C                     _TRISAbits	set	140
   368     008D                     _TRISBbits	set	141
   369     008F                     _TRISDbits	set	143
   370     010D                     _LATBbits	set	269
   371     010F                     _LATDbits	set	271
   372     018C                     _ANSELAbits	set	396
   373     0392                     _IOCANbits	set	914
   374     0393                     _IOCAFbits	set	915
   375                           
   376                           	psect	cinit
   377     003B                     start_initialization:	
   378                           ; #config settings
   379                           
   380     003B                     __initialization:
   381                           
   382                           ; Clear objects allocated to COMMON
   383     003B  01F7               	clrf	__pbssCOMMON& (0+127)
   384     003C  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   385     003D                     end_of_initialization:	
   386                           ;End of C runtime variable initialization code
   387                           
   388     003D                     __end_of__initialization:
   389     003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   390     003E  0020               	movlb	0
   391     003F  3180  2841         	ljmp	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMMON
   394     0077                     __pbssCOMMON:
   395     0077                     _tick_count:
   396     0077                     	ds	2
   397                           
   398                           	psect	cstackCOMMON
   399     0070                     __pcstackCOMMON:
   400     0070                     ?_init_leds:
   401     0070                     ?_modif_led:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ??_modif_led:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_isr:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_main:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?___awmod:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ___awmod@divisor:	
   417                           ; 2 bytes @ 0x0
   418                           
   419                           
   420                           ; 2 bytes @ 0x0
   421     0070                     	ds	2
   422     0072                     ___awmod@dividend:
   423                           
   424                           ; 2 bytes @ 0x2
   425     0072                     	ds	2
   426     0074                     ??___awmod:
   427                           
   428                           ; 1 bytes @ 0x4
   429     0074                     	ds	1
   430     0075                     ___awmod@counter:
   431                           
   432                           ; 1 bytes @ 0x5
   433     0075                     	ds	1
   434     0076                     ___awmod@sign:
   435                           
   436                           ; 1 bytes @ 0x6
   437     0076                     	ds	1
   438     0077                     ??_isr:
   439                           
   440                           	psect	cstackBANK0
   441     0020                     __pcstackBANK0:	
   442                           ; 1 bytes @ 0x7
   443                           
   444     0020                     ??_init_leds:
   445     0020                     ??_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 1 bytes @ 0x0
   450     0020                     	ds	1
   451     0021                     main@i:
   452                           
   453                           ; 2 bytes @ 0x1
   454     0021                     	ds	2
   455     0023                     main@i_433:
   456                           
   457                           ; 2 bytes @ 0x3
   458     0023                     	ds	2
   459     0025                     main@i_434:
   460                           
   461                           ; 2 bytes @ 0x5
   462     0025                     	ds	2
   463     0027                     main@i_435:
   464                           
   465                           ; 2 bytes @ 0x7
   466     0027                     	ds	2
   467                           
   468                           	psect	maintext
   469     0041                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 105 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  i               2    7[BANK0 ] int 
   480 ;;  i               2    5[BANK0 ] int 
   481 ;;  i               2    3[BANK0 ] int 
   482 ;;  i               2    1[BANK0 ] int 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B1F/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   493 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   495 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:        9 bytes
   497 ;; Hardware stack levels required when called: 3
   498 ;; This function calls:
   499 ;;		_init_leds
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505     0041                     _main:	
   506                           ;psect for function _main
   507                           
   508     0041                     l1052:	
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;main.c: 107:     init_leds();
   514     0041  3181  216D  3180   	fcall	_init_leds
   515     0044                     l1054:
   516                           
   517                           ;main.c: 108:     T2CONbits.TMR2ON = 1;
   518     0044  0020               	movlb	0	; select bank0
   519     0045  151C               	bsf	28,2	;volatile
   520     0046                     l1056:
   521                           
   522                           ;main.c: 109:     T2CONbits.T2OUTPS = 7;
   523     0046  081C               	movf	28,w	;volatile
   524     0047  3987               	andlw	-121
   525     0048  3838               	iorlw	56
   526     0049  009C               	movwf	28	;volatile
   527     004A                     l1058:
   528                           
   529                           ;main.c: 110:     T2CONbits.T2CKPS = 0;
   530     004A  30FC               	movlw	-4
   531     004B  059C               	andwf	28,f	;volatile
   532     004C                     l1060:
   533                           
   534                           ;main.c: 112:     INTCONbits.GIE = 1;
   535     004C  178B               	bsf	11,7	;volatile
   536     004D                     l1062:
   537                           
   538                           ;main.c: 113:     INTCONbits.PEIE = 1;
   539     004D  170B               	bsf	11,6	;volatile
   540     004E                     l1064:
   541                           
   542                           ;main.c: 114:     PIE1bits.TMR2IE = 1;
   543     004E  0021               	movlb	1	; select bank1
   544     004F  1491               	bsf	17,1	;volatile
   545     0050                     l1066:
   546                           
   547                           ;main.c: 115:     PIR1bits.TMR2IF = 1;
   548     0050  0020               	movlb	0	; select bank0
   549     0051  1491               	bsf	17,1	;volatile
   550     0052                     l1068:
   551                           
   552                           ;main.c: 117:     INTCONbits.IOCIE = 1;
   553     0052  158B               	bsf	11,3	;volatile
   554     0053                     l1070:
   555                           
   556                           ;main.c: 118:     IOCANbits.IOCAN5 = 1;
   557     0053  0027               	movlb	7	; select bank7
   558     0054  1692               	bsf	18,5	;volatile
   559     0055                     l1072:
   560                           
   561                           ;main.c: 120:     OPTION_REGbits.PS = 3;
   562     0055  0021               	movlb	1	; select bank1
   563     0056  0815               	movf	21,w	;volatile
   564     0057  39F8               	andlw	-8
   565     0058  3803               	iorlw	3
   566     0059  0095               	movwf	21	;volatile
   567     005A                     l1074:
   568                           
   569                           ;main.c: 121:     OPTION_REGbits.PSA = 0;
   570     005A  1195               	bcf	21,3	;volatile
   571     005B                     l1076:
   572                           
   573                           ;main.c: 122:     OPTION_REGbits.TMR0CS = 0;
   574     005B  1295               	bcf	21,5	;volatile
   575     005C                     l1078:
   576                           
   577                           ;main.c: 124:     LATBbits.LATB3 = 0;
   578     005C  0022               	movlb	2	; select bank2
   579     005D  118D               	bcf	13,3	;volatile
   580     005E                     l1080:
   581                           
   582                           ;main.c: 125:     PR2 = 249;
   583     005E  30F9               	movlw	249
   584     005F  0020               	movlb	0	; select bank0
   585     0060  009B               	movwf	27	;volatile
   586     0061                     l1082:
   587                           
   588                           ;main.c: 127:         LATBbits.LATB3 = 1;
   589     0061  0022               	movlb	2	; select bank2
   590     0062  158D               	bsf	13,3	;volatile
   591     0063                     l1084:
   592                           
   593                           ;main.c: 128:         LATBbits.LATB0 = 0;
   594     0063  100D               	bcf	13,0	;volatile
   595     0064                     l1086:
   596                           
   597                           ;main.c: 129:         for (int i = 0; i <= 1000; i++) {
   598     0064  0020               	movlb	0	; select bank0
   599     0065  01A1               	clrf	main@i
   600     0066  01A2               	clrf	main@i+1
   601     0067                     l1092:
   602                           
   603                           ;main.c: 130:             TMR0 = 130;
   604     0067  3082               	movlw	130
   605     0068  0020               	movlb	0	; select bank0
   606     0069  0095               	movwf	21	;volatile
   607     006A                     l60:	
   608                           ;main.c: 132:             }
   609                           
   610                           
   611                           ;main.c: 131:             while(INTCONbits.TMR0IF == 0){
   612     006A  1D0B               	btfss	11,2	;volatile
   613     006B  286D               	goto	u451
   614     006C  286E               	goto	u450
   615     006D                     u451:
   616     006D  286A               	goto	l60
   617     006E                     u450:
   618     006E                     l62:
   619                           
   620                           ;main.c: 133:             INTCONbits.TMR0IF = 0;
   621     006E  110B               	bcf	11,2	;volatile
   622     006F                     l1094:
   623                           
   624                           ;main.c: 134:         }
   625     006F  3001               	movlw	1
   626     0070  0020               	movlb	0	; select bank0
   627     0071  07A1               	addwf	main@i,f
   628     0072  3000               	movlw	0
   629     0073  3DA2               	addwfc	main@i+1,f
   630     0074  0822               	movf	main@i+1,w
   631     0075  3A80               	xorlw	128
   632     0076  00A0               	movwf	??_main
   633     0077  3083               	movlw	131
   634     0078  0220               	subwf	??_main,w
   635     0079  1D03               	skipz
   636     007A  287D               	goto	u465
   637     007B  30E9               	movlw	233
   638     007C  0221               	subwf	main@i,w
   639     007D                     u465:
   640     007D  1C03               	skipc
   641     007E  2880               	goto	u461
   642     007F  2881               	goto	u460
   643     0080                     u461:
   644     0080  2867               	goto	l1092
   645     0081                     u460:
   646     0081                     l59:
   647                           
   648                           ;main.c: 136:         LATBbits.LATB2 = 1;
   649     0081  0022               	movlb	2	; select bank2
   650     0082  150D               	bsf	13,2	;volatile
   651                           
   652                           ;main.c: 137:         LATBbits.LATB3 = 0;
   653     0083  118D               	bcf	13,3	;volatile
   654     0084                     l1096:
   655                           
   656                           ;main.c: 139:         for (int i = 0; i <= 1000; i++) {
   657     0084  0020               	movlb	0	; select bank0
   658     0085  01A3               	clrf	main@i_433
   659     0086  01A4               	clrf	main@i_433+1
   660     0087                     l1102:
   661                           
   662                           ;main.c: 140:             TMR0 = 130;
   663     0087  3082               	movlw	130
   664     0088  0020               	movlb	0	; select bank0
   665     0089  0095               	movwf	21	;volatile
   666     008A                     l65:	
   667                           ;main.c: 142:             }
   668                           
   669                           
   670                           ;main.c: 141:             while(INTCONbits.TMR0IF == 0){
   671     008A  1D0B               	btfss	11,2	;volatile
   672     008B  288D               	goto	u471
   673     008C  288E               	goto	u470
   674     008D                     u471:
   675     008D  288A               	goto	l65
   676     008E                     u470:
   677     008E                     l67:
   678                           
   679                           ;main.c: 143:             INTCONbits.TMR0IF = 0;
   680     008E  110B               	bcf	11,2	;volatile
   681     008F                     l1104:
   682                           
   683                           ;main.c: 144:         }
   684     008F  3001               	movlw	1
   685     0090  0020               	movlb	0	; select bank0
   686     0091  07A3               	addwf	main@i_433,f
   687     0092  3000               	movlw	0
   688     0093  3DA4               	addwfc	main@i_433+1,f
   689     0094  0824               	movf	main@i_433+1,w
   690     0095  3A80               	xorlw	128
   691     0096  00A0               	movwf	??_main
   692     0097  3083               	movlw	131
   693     0098  0220               	subwf	??_main,w
   694     0099  1D03               	skipz
   695     009A  289D               	goto	u485
   696     009B  30E9               	movlw	233
   697     009C  0223               	subwf	main@i_433,w
   698     009D                     u485:
   699     009D  1C03               	skipc
   700     009E  28A0               	goto	u481
   701     009F  28A1               	goto	u480
   702     00A0                     u481:
   703     00A0  2887               	goto	l1102
   704     00A1                     u480:
   705     00A1                     l64:
   706                           
   707                           ;main.c: 146:         LATBbits.LATB1 = 1;
   708     00A1  0022               	movlb	2	; select bank2
   709     00A2  148D               	bsf	13,1	;volatile
   710                           
   711                           ;main.c: 147:         LATBbits.LATB2 = 0;
   712     00A3  110D               	bcf	13,2	;volatile
   713     00A4                     l1106:
   714                           
   715                           ;main.c: 149:         for (int i = 0; i <= 1000; i++) {
   716     00A4  0020               	movlb	0	; select bank0
   717     00A5  01A5               	clrf	main@i_434
   718     00A6  01A6               	clrf	main@i_434+1
   719     00A7                     l1112:
   720                           
   721                           ;main.c: 150:             TMR0 = 130;
   722     00A7  3082               	movlw	130
   723     00A8  0020               	movlb	0	; select bank0
   724     00A9  0095               	movwf	21	;volatile
   725     00AA                     l70:	
   726                           ;main.c: 152:             }
   727                           
   728                           
   729                           ;main.c: 151:             while(INTCONbits.TMR0IF == 0){
   730     00AA  1D0B               	btfss	11,2	;volatile
   731     00AB  28AD               	goto	u491
   732     00AC  28AE               	goto	u490
   733     00AD                     u491:
   734     00AD  28AA               	goto	l70
   735     00AE                     u490:
   736     00AE                     l72:
   737                           
   738                           ;main.c: 153:             INTCONbits.TMR0IF = 0;
   739     00AE  110B               	bcf	11,2	;volatile
   740     00AF                     l1114:
   741                           
   742                           ;main.c: 154:         }
   743     00AF  3001               	movlw	1
   744     00B0  0020               	movlb	0	; select bank0
   745     00B1  07A5               	addwf	main@i_434,f
   746     00B2  3000               	movlw	0
   747     00B3  3DA6               	addwfc	main@i_434+1,f
   748     00B4  0826               	movf	main@i_434+1,w
   749     00B5  3A80               	xorlw	128
   750     00B6  00A0               	movwf	??_main
   751     00B7  3083               	movlw	131
   752     00B8  0220               	subwf	??_main,w
   753     00B9  1D03               	skipz
   754     00BA  28BD               	goto	u505
   755     00BB  30E9               	movlw	233
   756     00BC  0225               	subwf	main@i_434,w
   757     00BD                     u505:
   758     00BD  1C03               	skipc
   759     00BE  28C0               	goto	u501
   760     00BF  28C1               	goto	u500
   761     00C0                     u501:
   762     00C0  28A7               	goto	l1112
   763     00C1                     u500:
   764     00C1                     l69:
   765                           
   766                           ;main.c: 156:         LATBbits.LATB0 = 1;
   767     00C1  0022               	movlb	2	; select bank2
   768     00C2  140D               	bsf	13,0	;volatile
   769                           
   770                           ;main.c: 157:         LATBbits.LATB1 = 0;
   771     00C3  108D               	bcf	13,1	;volatile
   772     00C4                     l1116:
   773                           
   774                           ;main.c: 159:         for (int i = 0; i <= 1000; i++) {
   775     00C4  0020               	movlb	0	; select bank0
   776     00C5  01A7               	clrf	main@i_435
   777     00C6  01A8               	clrf	main@i_435+1
   778     00C7                     l1122:
   779                           
   780                           ;main.c: 160:             TMR0 = 130;
   781     00C7  3082               	movlw	130
   782     00C8  0020               	movlb	0	; select bank0
   783     00C9  0095               	movwf	21	;volatile
   784     00CA                     l75:	
   785                           ;main.c: 162:             }
   786                           
   787                           
   788                           ;main.c: 161:             while(INTCONbits.TMR0IF == 0){
   789     00CA  1D0B               	btfss	11,2	;volatile
   790     00CB  28CD               	goto	u511
   791     00CC  28CE               	goto	u510
   792     00CD                     u511:
   793     00CD  28CA               	goto	l75
   794     00CE                     u510:
   795     00CE                     l77:
   796                           
   797                           ;main.c: 163:             INTCONbits.TMR0IF = 0;
   798     00CE  110B               	bcf	11,2	;volatile
   799     00CF                     l1124:
   800                           
   801                           ;main.c: 164:         }
   802     00CF  3001               	movlw	1
   803     00D0  0020               	movlb	0	; select bank0
   804     00D1  07A7               	addwf	main@i_435,f
   805     00D2  3000               	movlw	0
   806     00D3  3DA8               	addwfc	main@i_435+1,f
   807     00D4  0828               	movf	main@i_435+1,w
   808     00D5  3A80               	xorlw	128
   809     00D6  00A0               	movwf	??_main
   810     00D7  3083               	movlw	131
   811     00D8  0220               	subwf	??_main,w
   812     00D9  1D03               	skipz
   813     00DA  28DD               	goto	u525
   814     00DB  30E9               	movlw	233
   815     00DC  0227               	subwf	main@i_435,w
   816     00DD                     u525:
   817     00DD  1C03               	skipc
   818     00DE  28E0               	goto	u521
   819     00DF  28E1               	goto	u520
   820     00E0                     u521:
   821     00E0  28C7               	goto	l1122
   822     00E1                     u520:
   823     00E1  2861               	goto	l1082
   824     00E2  3180  2839         	ljmp	start
   825     00E4                     __end_of_main:
   826                           
   827                           	psect	text1
   828     016D                     __ptext1:	
   829 ;; *************** function _init_leds *****************
   830 ;; Defined at:
   831 ;;		line 35 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		None
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 2
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859     016D                     _init_leds:	
   860                           ;psect for function _init_leds
   861                           
   862     016D                     l1050:	
   863                           ;incstack = 0
   864                           ; Regs used in _init_leds: []
   865                           
   866                           
   867                           ;main.c: 36:     TRISDbits.TRISD0 = 0;
   868     016D  0021               	movlb	1	; select bank1
   869     016E  100F               	bcf	15,0	;volatile
   870                           
   871                           ;main.c: 37:     TRISDbits.TRISD1 = 0;
   872     016F  108F               	bcf	15,1	;volatile
   873                           
   874                           ;main.c: 38:     TRISDbits.TRISD2 = 0;
   875     0170  110F               	bcf	15,2	;volatile
   876                           
   877                           ;main.c: 39:     TRISDbits.TRISD3 = 0;
   878     0171  118F               	bcf	15,3	;volatile
   879                           
   880                           ;main.c: 40:     TRISBbits.TRISB0 = 0;
   881     0172  100D               	bcf	13,0	;volatile
   882                           
   883                           ;main.c: 41:     TRISBbits.TRISB1 = 0;
   884     0173  108D               	bcf	13,1	;volatile
   885                           
   886                           ;main.c: 42:     TRISBbits.TRISB2 = 0;
   887     0174  110D               	bcf	13,2	;volatile
   888                           
   889                           ;main.c: 43:     TRISBbits.TRISB3 = 0;
   890     0175  118D               	bcf	13,3	;volatile
   891                           
   892                           ;main.c: 45:     TRISAbits.TRISA5 = 1;
   893     0176  168C               	bsf	12,5	;volatile
   894                           
   895                           ;main.c: 47:     ANSELAbits.ANSA5 = 0;
   896     0177  0023               	movlb	3	; select bank3
   897     0178  128C               	bcf	12,5	;volatile
   898     0179                     l35:
   899     0179  0008               	return
   900     017A                     __end_of_init_leds:
   901                           
   902                           	psect	intentry
   903     0004                     __pintentry:	
   904 ;; *************** function _isr *****************
   905 ;; Defined at:
   906 ;;		line 88 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 1
   927 ;; This function calls:
   928 ;;		___awmod
   929 ;;		_modif_led
   930 ;; This function is called by:
   931 ;;		Interrupt level 1
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935     0004                     _isr:
   936                           
   937                           ;incstack = 0
   938     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   939                           
   940                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   941     0005  3180               	pagesel	$
   942     0006                     i1l880:
   943                           
   944                           ;main.c: 89:     if (IOCAFbits.IOCAF5 == 1) {
   945     0006  0027               	movlb	7	; select bank7
   946     0007  1E93               	btfss	19,5	;volatile
   947     0008  280A               	goto	u32_21
   948     0009  280B               	goto	u32_20
   949     000A                     u32_21:
   950     000A  2818               	goto	i1l886
   951     000B                     u32_20:
   952     000B                     i1l882:
   953                           
   954                           ;main.c: 90:         IOCAFbits.IOCAF5 = 0;
   955     000B  1293               	bcf	19,5	;volatile
   956     000C                     i1l884:
   957                           
   958                           ;main.c: 91:         T2CONbits.TMR2ON = ~T2CONbits.TMR2ON;
   959     000C  1003               	clrc
   960     000D  0020               	movlb	0	; select bank0
   961     000E  1D1C               	btfss	28,2	;volatile
   962     000F  1403               	setc
   963     0010  1803               	btfsc	3,0
   964     0011  2813               	goto	u33_21
   965     0012  2816               	goto	u33_20
   966     0013                     u33_21:
   967     0013  0020               	movlb	0	; select bank0
   968     0014  151C               	bsf	28,2	;volatile
   969     0015  2818               	goto	u34_24
   970     0016                     u33_20:
   971     0016  0020               	movlb	0	; select bank0
   972     0017  111C               	bcf	28,2	;volatile
   973     0018                     u34_24:
   974     0018                     i1l886:
   975                           
   976                           ;main.c: 94:     if (PIR1bits.TMR2IF == 1) {
   977     0018  0020               	movlb	0	; select bank0
   978     0019  1C91               	btfss	17,1	;volatile
   979     001A  281C               	goto	u35_21
   980     001B  281D               	goto	u35_20
   981     001C                     u35_21:
   982     001C  2837               	goto	i1l52
   983     001D                     u35_20:
   984     001D                     i1l888:
   985                           
   986                           ;main.c: 95:         tick_count++;
   987     001D  3001               	movlw	1
   988     001E  07F7               	addwf	_tick_count,f
   989     001F  3000               	movlw	0
   990     0020  3DF8               	addwfc	_tick_count+1,f
   991     0021                     i1l890:
   992                           
   993                           ;main.c: 96:         if (!(tick_count % 125)) {
   994     0021  307D               	movlw	125
   995     0022  00F0               	movwf	___awmod@divisor
   996     0023  3000               	movlw	0
   997     0024  00F1               	movwf	___awmod@divisor+1
   998     0025  0878               	movf	_tick_count+1,w
   999     0026  00F3               	movwf	___awmod@dividend+1
  1000     0027  0877               	movf	_tick_count,w
  1001     0028  00F2               	movwf	___awmod@dividend
  1002     0029  3180  20E4  3180   	fcall	___awmod
  1003     002C  0870               	movf	?___awmod,w
  1004     002D  0471               	iorwf	?___awmod+1,w
  1005     002E  1D03               	btfss	3,2
  1006     002F  2831               	goto	u36_21
  1007     0030  2832               	goto	u36_20
  1008     0031                     u36_21:
  1009     0031  2835               	goto	i1l894
  1010     0032                     u36_20:
  1011     0032                     i1l892:
  1012                           
  1013                           ;main.c: 97:             modif_led();
  1014     0032  3181  2137  3180   	fcall	_modif_led
  1015     0035                     i1l894:
  1016                           
  1017                           ;main.c: 99:         PIR1bits.TMR2IF = 0;
  1018     0035  0020               	movlb	0	; select bank0
  1019     0036  1091               	bcf	17,1	;volatile
  1020     0037                     i1l52:
  1021     0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1022     0038  0009               	retfie
  1023     0039                     __end_of_isr:
  1024                           
  1025                           	psect	text3
  1026     0137                     __ptext3:	
  1027 ;; *************** function _modif_led *****************
  1028 ;; Defined at:
  1029 ;;		line 50 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_isr
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056     0137                     _modif_led:	
  1057                           ;psect for function _modif_led
  1058                           
  1059     0137                     i1l608:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _modif_led: [wreg-fsr0h+status,2+status,0]
  1062                           
  1063                           
  1064                           ;main.c: 51:     switch(tick_count) {
  1065     0137  294A               	goto	i1l614
  1066     0138                     i1l39:	
  1067                           ;main.c: 56:         case 250:
  1068                           
  1069                           
  1070                           ;main.c: 57:             LATDbits.LATD0 = 0;
  1071     0138  0022               	movlb	2	; select bank2
  1072     0139  100F               	bcf	15,0	;volatile
  1073                           
  1074                           ;main.c: 58:             LATDbits.LATD1 = 1;
  1075     013A  148F               	bsf	15,1	;volatile
  1076                           
  1077                           ;main.c: 59:             break;
  1078     013B  296C               	goto	i1l44
  1079     013C                     i1l41:	
  1080                           ;main.c: 64:         case 500:
  1081                           
  1082                           
  1083                           ;main.c: 65:             LATDbits.LATD1 = 0;
  1084     013C  0022               	movlb	2	; select bank2
  1085     013D  108F               	bcf	15,1	;volatile
  1086                           
  1087                           ;main.c: 66:             LATDbits.LATD2 = 1;
  1088     013E  150F               	bsf	15,2	;volatile
  1089                           
  1090                           ;main.c: 67:             break;
  1091     013F  296C               	goto	i1l44
  1092     0140                     i1l42:	
  1093                           ;main.c: 72:         case 750:
  1094                           
  1095                           
  1096                           ;main.c: 73:             LATDbits.LATD2 = 0;
  1097     0140  0022               	movlb	2	; select bank2
  1098     0141  110F               	bcf	15,2	;volatile
  1099                           
  1100                           ;main.c: 74:             LATDbits.LATD3 = 1;
  1101     0142  158F               	bsf	15,3	;volatile
  1102                           
  1103                           ;main.c: 75:             break;
  1104     0143  296C               	goto	i1l44
  1105     0144                     i1l43:	
  1106                           ;main.c: 80:         case 1000:
  1107                           
  1108                           
  1109                           ;main.c: 81:             LATDbits.LATD3 = 0;
  1110     0144  0022               	movlb	2	; select bank2
  1111     0145  118F               	bcf	15,3	;volatile
  1112                           
  1113                           ;main.c: 82:             LATDbits.LATD0 = 1;
  1114     0146  140F               	bsf	15,0	;volatile
  1115     0147                     i1l610:
  1116                           
  1117                           ;main.c: 83:             tick_count = 0;
  1118     0147  01F7               	clrf	_tick_count
  1119     0148  01F8               	clrf	_tick_count+1
  1120                           
  1121                           ;main.c: 84:             break;
  1122     0149  296C               	goto	i1l44
  1123     014A                     i1l614:
  1124                           
  1125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1126                           ; Switch size 1, requested type "simple"
  1127                           ; Number of cases is 4, Range of values is 0 to 3
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte           13     7 (average)
  1131                           ; direct_byte           14     6 (fixed)
  1132                           ; jumptable            260     6 (fixed)
  1133                           ;	Chosen strategy is simple_byte
  1134     014A  0878               	movf	_tick_count+1,w
  1135     014B  3A00               	xorlw	0	; case 0
  1136     014C  1903               	skipnz
  1137     014D  2958               	goto	i1l1206
  1138     014E  3A01               	xorlw	1	; case 1
  1139     014F  1903               	skipnz
  1140     0150  295D               	goto	i1l1208
  1141     0151  3A03               	xorlw	3	; case 2
  1142     0152  1903               	skipnz
  1143     0153  2962               	goto	i1l1210
  1144     0154  3A01               	xorlw	1	; case 3
  1145     0155  1903               	skipnz
  1146     0156  2967               	goto	i1l1212
  1147     0157  296C               	goto	i1l44
  1148     0158                     i1l1206:
  1149                           
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 1, Range of values is 250 to 250
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            4     3 (average)
  1155                           ; direct_byte           11     9 (fixed)
  1156                           ; jumptable            263     9 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158     0158  0877               	movf	_tick_count,w
  1159     0159  3AFA               	xorlw	250	; case 250
  1160     015A  1903               	skipnz
  1161     015B  2938               	goto	i1l39
  1162     015C  296C               	goto	i1l44
  1163     015D                     i1l1208:
  1164                           
  1165                           ; Switch size 1, requested type "simple"
  1166                           ; Number of cases is 1, Range of values is 244 to 244
  1167                           ; switch strategies available:
  1168                           ; Name         Instructions Cycles
  1169                           ; simple_byte            4     3 (average)
  1170                           ; direct_byte           11     9 (fixed)
  1171                           ; jumptable            263     9 (fixed)
  1172                           ;	Chosen strategy is simple_byte
  1173     015D  0877               	movf	_tick_count,w
  1174     015E  3AF4               	xorlw	244	; case 244
  1175     015F  1903               	skipnz
  1176     0160  293C               	goto	i1l41
  1177     0161  296C               	goto	i1l44
  1178     0162                     i1l1210:
  1179                           
  1180                           ; Switch size 1, requested type "simple"
  1181                           ; Number of cases is 1, Range of values is 238 to 238
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte            4     3 (average)
  1185                           ; direct_byte           11     9 (fixed)
  1186                           ; jumptable            263     9 (fixed)
  1187                           ;	Chosen strategy is simple_byte
  1188     0162  0877               	movf	_tick_count,w
  1189     0163  3AEE               	xorlw	238	; case 238
  1190     0164  1903               	skipnz
  1191     0165  2940               	goto	i1l42
  1192     0166  296C               	goto	i1l44
  1193     0167                     i1l1212:
  1194                           
  1195                           ; Switch size 1, requested type "simple"
  1196                           ; Number of cases is 1, Range of values is 232 to 232
  1197                           ; switch strategies available:
  1198                           ; Name         Instructions Cycles
  1199                           ; simple_byte            4     3 (average)
  1200                           ; direct_byte           11     9 (fixed)
  1201                           ; jumptable            263     9 (fixed)
  1202                           ;	Chosen strategy is simple_byte
  1203     0167  0877               	movf	_tick_count,w
  1204     0168  3AE8               	xorlw	232	; case 232
  1205     0169  1903               	skipnz
  1206     016A  2944               	goto	i1l43
  1207     016B  296C               	goto	i1l44
  1208     016C                     i1l44:
  1209     016C  0008               	return
  1210     016D                     __end_of_modif_led:
  1211                           
  1212                           	psect	text4
  1213     00E4                     __ptext4:	
  1214 ;; *************** function ___awmod *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    0[COMMON] int 
  1219 ;;  dividend        2    2[COMMON] int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  sign            1    6[COMMON] unsigned char 
  1222 ;;  counter         1    5[COMMON] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  2    0[COMMON] int 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        7 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_isr
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245     00E4                     ___awmod:	
  1246                           ;psect for function ___awmod
  1247                           
  1248     00E4                     i1l842:	
  1249                           ;incstack = 0
  1250                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1251                           
  1252     00E4  01F6               	clrf	___awmod@sign
  1253     00E5                     i1l844:
  1254     00E5  1FF3               	btfss	___awmod@dividend+1,7
  1255     00E6  28E8               	goto	u23_21
  1256     00E7  28E9               	goto	u23_20
  1257     00E8                     u23_21:
  1258     00E8  28F0               	goto	i1l850
  1259     00E9                     u23_20:
  1260     00E9                     i1l846:
  1261     00E9  09F2               	comf	___awmod@dividend,f
  1262     00EA  09F3               	comf	___awmod@dividend+1,f
  1263     00EB  0AF2               	incf	___awmod@dividend,f
  1264     00EC  1903               	skipnz
  1265     00ED  0AF3               	incf	___awmod@dividend+1,f
  1266     00EE                     i1l848:
  1267     00EE  01F6               	clrf	___awmod@sign
  1268     00EF  0AF6               	incf	___awmod@sign,f
  1269     00F0                     i1l850:
  1270     00F0  1FF1               	btfss	___awmod@divisor+1,7
  1271     00F1  28F3               	goto	u24_21
  1272     00F2  28F4               	goto	u24_20
  1273     00F3                     u24_21:
  1274     00F3  28F9               	goto	i1l854
  1275     00F4                     u24_20:
  1276     00F4                     i1l852:
  1277     00F4  09F0               	comf	___awmod@divisor,f
  1278     00F5  09F1               	comf	___awmod@divisor+1,f
  1279     00F6  0AF0               	incf	___awmod@divisor,f
  1280     00F7  1903               	skipnz
  1281     00F8  0AF1               	incf	___awmod@divisor+1,f
  1282     00F9                     i1l854:
  1283     00F9  0870               	movf	___awmod@divisor,w
  1284     00FA  0471               	iorwf	___awmod@divisor+1,w
  1285     00FB  1903               	btfsc	3,2
  1286     00FC  28FE               	goto	u25_21
  1287     00FD  28FF               	goto	u25_20
  1288     00FE                     u25_21:
  1289     00FE  2928               	goto	i1l872
  1290     00FF                     u25_20:
  1291     00FF                     i1l856:
  1292     00FF  01F5               	clrf	___awmod@counter
  1293     0100  0AF5               	incf	___awmod@counter,f
  1294     0101  290B               	goto	i1l862
  1295     0102                     i1l858:
  1296     0102  3001               	movlw	1
  1297     0103                     u26_25:
  1298     0103  35F0               	lslf	___awmod@divisor,f
  1299     0104  0DF1               	rlf	___awmod@divisor+1,f
  1300     0105  0B89               	decfsz	9,f
  1301     0106  2903               	goto	u26_25
  1302     0107                     i1l860:
  1303     0107  3001               	movlw	1
  1304     0108  00F4               	movwf	??___awmod
  1305     0109  0874               	movf	??___awmod,w
  1306     010A  07F5               	addwf	___awmod@counter,f
  1307     010B                     i1l862:
  1308     010B  1FF1               	btfss	___awmod@divisor+1,7
  1309     010C  290E               	goto	u27_21
  1310     010D  290F               	goto	u27_20
  1311     010E                     u27_21:
  1312     010E  2902               	goto	i1l858
  1313     010F                     u27_20:
  1314     010F                     i1l864:
  1315     010F  0871               	movf	___awmod@divisor+1,w
  1316     0110  0273               	subwf	___awmod@dividend+1,w
  1317     0111  1D03               	skipz
  1318     0112  2915               	goto	u28_25
  1319     0113  0870               	movf	___awmod@divisor,w
  1320     0114  0272               	subwf	___awmod@dividend,w
  1321     0115                     u28_25:
  1322     0115  1C03               	skipc
  1323     0116  2918               	goto	u28_21
  1324     0117  2919               	goto	u28_20
  1325     0118                     u28_21:
  1326     0118  291D               	goto	i1l868
  1327     0119                     u28_20:
  1328     0119                     i1l866:
  1329     0119  0870               	movf	___awmod@divisor,w
  1330     011A  02F2               	subwf	___awmod@dividend,f
  1331     011B  0871               	movf	___awmod@divisor+1,w
  1332     011C  3BF3               	subwfb	___awmod@dividend+1,f
  1333     011D                     i1l868:
  1334     011D  3001               	movlw	1
  1335     011E                     u29_25:
  1336     011E  36F1               	lsrf	___awmod@divisor+1,f
  1337     011F  0CF0               	rrf	___awmod@divisor,f
  1338     0120  0B89               	decfsz	9,f
  1339     0121  291E               	goto	u29_25
  1340     0122                     i1l870:
  1341     0122  3001               	movlw	1
  1342     0123  02F5               	subwf	___awmod@counter,f
  1343     0124  1D03               	btfss	3,2
  1344     0125  2927               	goto	u30_21
  1345     0126  2928               	goto	u30_20
  1346     0127                     u30_21:
  1347     0127  290F               	goto	i1l864
  1348     0128                     u30_20:
  1349     0128                     i1l872:
  1350     0128  0876               	movf	___awmod@sign,w
  1351     0129  1903               	btfsc	3,2
  1352     012A  292C               	goto	u31_21
  1353     012B  292D               	goto	u31_20
  1354     012C                     u31_21:
  1355     012C  2932               	goto	i1l876
  1356     012D                     u31_20:
  1357     012D                     i1l874:
  1358     012D  09F2               	comf	___awmod@dividend,f
  1359     012E  09F3               	comf	___awmod@dividend+1,f
  1360     012F  0AF2               	incf	___awmod@dividend,f
  1361     0130  1903               	skipnz
  1362     0131  0AF3               	incf	___awmod@dividend+1,f
  1363     0132                     i1l876:
  1364     0132  0873               	movf	___awmod@dividend+1,w
  1365     0133  00F1               	movwf	?___awmod+1
  1366     0134  0872               	movf	___awmod@dividend,w
  1367     0135  00F0               	movwf	?___awmod
  1368     0136                     i1l314:
  1369     0136  0008               	return
  1370     0137                     __end_of___awmod:
  1371     007E                     btemp	set	126	;btemp
  1372     007E                     int$flags	set	126
  1373     007E                     wtemp0	set	126
  1374                           
  1375                           	psect	config
  1376                           
  1377                           ;Config register CONFIG1 @ 0x8007
  1378                           ;	Oscillator Selection Bits
  1379                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1380                           ;	Watchdog Timer Enable
  1381                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  1382                           ;	Power-up Timer Enable
  1383                           ;	PWRTE = OFF, PWRT disabled
  1384                           ;	MCLR Pin Function Select
  1385                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1386                           ;	Flash Program Memory Code Protection
  1387                           ;	CP = OFF, Program memory code protection is disabled
  1388                           ;	Brown-out Reset Enable
  1389                           ;	BOREN = ON, Brown-out Reset enabled
  1390                           ;	Clock Out Enable
  1391                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1392                           ;	Internal/External Switchover Mode
  1393                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1394                           ;	Fail-Safe Clock Monitor Enable
  1395                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1396     8007                     	org	32775
  1397     8007  3FEA               	dw	16362
  1398                           
  1399                           ;Config register CONFIG2 @ 0x8008
  1400                           ;	Flash Memory Self-Write Protection
  1401                           ;	WRT = OFF, Write protection off
  1402                           ;	Peripheral Pin Select one-way control
  1403                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  1404                           ;	Zero-cross detect disable
  1405                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1406                           ;	Phase Lock Loop enable
  1407                           ;	PLLEN = OFF, 4x PLL is disabled
  1408                           ;	Stack Overflow/Underflow Reset Enable
  1409                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1410                           ;	Brown-out Reset Voltage Selection
  1411                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1412                           ;	Low-Power Brown Out Reset
  1413                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1414                           ;	In-Circuit Debugger Mode
  1415                           ;	DEBUG = 0x1, unprogrammed default
  1416                           ;	Low-Voltage Programming Enable
  1417                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1418     8008                     	org	32776
  1419     8008  1EFB               	dw	7931

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      9       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     272
                                              0 BANK0      9     9      0
                          _init_leds
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  0     0      0     448
                            ___awmod
                          _modif_led
 ---------------------------------------------------------------------------------
 (3) _modif_led                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_leds

 _isr (ROOT)
   ___awmod
   _modif_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      12      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      12      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 16:32:49 2024

                     l35 0179                       l60 006A                       l70 00AA  
                     l62 006E                       l72 00AE                       l64 00A1  
                     l65 008A                       l75 00CA                       l67 008E  
                     l59 0081                       l77 00CE                       l69 00C1  
                    u500 00C1                      u501 00C0                      u510 00CE  
                    _PR2 001B                      u511 00CD                      u520 00E1  
                    u521 00E0                      u505 00BD                      u450 006E  
                    u451 006D                      u460 0081                      u525 00DD  
                    u461 0080                      u470 008E                      u471 008D  
                    u480 00A1                      u481 00A0                      u465 007D  
                    u490 00AE                      u491 00AD                      u485 009D  
                    _isr 0004             ___awmod@sign 0076                      wreg 0009  
                   l1102 0087                     l1112 00A7                     l1104 008F  
                   l1050 016D                     l1122 00C7                     l1114 00AF  
                   l1106 00A4                     l1124 00CF                     l1116 00C4  
                   l1060 004C                     l1052 0041                     l1070 0053  
                   l1062 004D                     l1054 0044                     l1080 005E  
                   l1072 0055                     l1064 004E                     l1056 0046  
                   l1082 0061                     l1074 005A                     l1066 0050  
                   l1058 004A                     l1092 0067                     l1084 0063  
                   l1076 005B                     l1068 0052                     l1094 006F  
                   l1086 0064                     l1078 005C                     l1096 0084  
                   ?_isr 0070                     i1l41 013C                     i1l42 0140  
                   i1l43 0144                     i1l44 016C                     i1l52 0037  
                   i1l39 0138                     _TMR0 0015                     _main 0041  
                   btemp 007E                     start 0039                    ??_isr 0077  
                  ?_main 0070          __end_of___awmod 0137                    i1l314 0136  
                  i1l610 0147                    i1l614 014A                    i1l608 0137  
                  i1l850 00F0                    i1l842 00E4                    i1l860 0107  
                  i1l852 00F4                    i1l844 00E5                    i1l870 0122  
                  i1l862 010B                    i1l854 00F9                    i1l846 00E9  
                  i1l864 010F                    i1l856 00FF                    i1l872 0128  
                  i1l848 00EE                    i1l880 0006                    i1l874 012D  
                  i1l866 0119                    i1l858 0102                    i1l890 0021  
                  i1l882 000B                    i1l876 0132                    i1l868 011D  
                  i1l892 0032                    i1l884 000C                    i1l894 0035  
                  i1l886 0018                    i1l888 001D                    u30_20 0128  
                  u30_21 0127                    u31_20 012D                    u23_20 00E9  
                  u31_21 012C                    u23_21 00E8                    u24_20 00F4  
                  u32_20 000B                    u24_21 00F3                    u32_21 000A  
                  u25_20 00FF                    u33_20 0016                    u25_21 00FE  
                  u33_21 0013                    u34_24 0018                    u26_25 0103  
                  u27_20 010F                    u35_20 001D                    u27_21 010E  
                  u35_21 001C                    u28_20 0119                    u36_20 0032  
                  u28_21 0118                    u36_21 0031                    u28_25 0115  
                  u29_25 011E                    main@i 0021                    status 0003  
                  wtemp0 007E          __initialization 003B             __end_of_main 00E4  
                 ??_main 0020                   i1l1210 0162                   i1l1212 0167  
                 i1l1206 0158                   i1l1208 015D                ??___awmod 0074  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 003D  
         __pcstackCOMMON 0070           _OPTION_REGbits 0095               __pmaintext 0041  
             __pintentry 0004                  ___awmod 00E4                  __ptext1 016D  
                __ptext3 0137                  __ptext4 00E4                _T2CONbits 001C  
      __end_of_init_leds 017A         ___awmod@dividend 0072                _IOCAFbits 0393  
              _IOCANbits 0392        __end_of_modif_led 016D     end_of_initialization 003D  
             _tick_count 0077                _TRISAbits 008C                _TRISBbits 008D  
              _TRISDbits 008F      start_initialization 003B              __end_of_isr 0039  
            __pbssCOMMON 0077                ___latbits 0003            __pcstackBANK0 0020  
               ?___awmod 0070                _init_leds 016D                _modif_led 0137  
               _LATBbits 010D                 _LATDbits 010F                 _PIE1bits 0091  
               _PIR1bits 0011                main@i_433 0023                main@i_434 0025  
              main@i_435 0027               ?_init_leds 0070               ?_modif_led 0070  
             _ANSELAbits 018C                 int$flags 007E               _INTCONbits 000B  
            ??_init_leds 0020                 intlevel1 0000              ??_modif_led 0070  
